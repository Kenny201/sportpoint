
; /* Start:"a:4:{s:4:"full";s:83:"/local/templates/aspro_max/components/bitrix/catalog/main/script.js?161840102415331";s:6:"source";s:67:"/local/templates/aspro_max/components/bitrix/catalog/main/script.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
function setNewHeader(obOffer){
	var ratingHtml = priceHtml = imgHtml = skuHtml = buttonHtml = '';

	if(arMaxOptions['THEME']['SHOW_HEADER_GOODS'] != 'Y' || !$('.main-catalog-wrapper.details').length)
		return;

	$('#headerfixed').addClass('with-product');

	if($('.product-info-headnote .rating').length) //show rating
	{
		ratingHtml = '<div class="votes_block nstar'+(arAsproOptions['THEME']['REVIEWS_VIEW'] == 'EXTENDED' ? ' pointer' : '')+'"><div class="ratings"><div class="inner_rating"';
		var inner =  $('.product-info-headnote .rating .inner_rating');
		if(inner.length && inner.attr('title') !== undefined) {
			ratingHtml += 'title="'+inner.attr('title');
		} 
		ratingHtml += '">';

		$('.product-info-headnote .rating .inner_rating > div').each(function(index){
			var index_title = index+1;
			ratingHtml += '<div class="item-rating '+($(this).hasClass('filed') ? 'filed' : '');
			if(inner.attr('title') === undefined) {
				ratingHtml += '" title="'+index_title;
			}
			ratingHtml += '">'+$(this).html()+'</div>';
		});

		ratingHtml += '</div></div></div>';

		if($('.product-info-headnote .rating span').length) {
			ratingHtml += $('.product-info-headnote .rating span')[0].outerHTML;
		}
	}
	if($('div *[itemprop="offers"]').length) //show price
	{
		/*if($('.cost.detail .js_price_wrapper').length)
		{
			priceHtml = $('.cost.detail .js_price_wrapper .price_matrix_wrapper').html();
		}
		else
		{
			if($('.cost.detail .price_group.min').length)
				priceHtml = $('.cost.detail .price_group.min').html();
			else if($('.cost.detail .price_matrix_wrapper').length)
				priceHtml = $('.cost.detail .price_matrix_wrapper').html();
		}*/

		if(BX.util.object_search_key('ASPRO_ITEM_POPUP_PRICE',BX.message) && BX.message('ASPRO_ITEM_POPUP_PRICE') == 'Y'){
			var obOffer = {
				SHOW_POPUP_PRICE: false,
				PRICES_COUNT: BX.message('ASPRO_ITEM_PRICES')
			}
			if(BX.util.object_search_key('ASPRO_ITEM_PRICE_MATRIX',BX.message)){
				obOffer.USE_PRICE_COUNT = true;
				obOffer.PRICE_MATRIX = BX.message('ASPRO_ITEM_PRICE_MATRIX');
			}else if(BX.util.object_search_key('ASPRO_ITEM_PRICE',BX.message)){
				obOffer.PRICES_HTML = BX.message('ASPRO_ITEM_PRICE');
			}
		}

		if(typeof obOffer !== 'undefined'){
			if(!obOffer.SHOW_POPUP_PRICE &&
			 (('PRICES_COUNT' in obOffer && obOffer.PRICES_COUNT > 1) ||
			  (('PRICES' in obOffer && Object.keys(obOffer.PRICES).length > 1) || ('ITEM_PRICES' in obOffer && Object.keys(obOffer.ITEM_PRICES).length > 1)))){

				var bPriceCount = (obOffer.USE_PRICE_COUNT && obOffer.PRICE_MATRIX),
					topPrice = '';

				if(bPriceCount){
					if($('.cost.detail .with_matrix').length){
						topPrice = $('.cost.detail .with_matrix').html();
					}else{
						topPrice = '<div class="prices-wrapper">'+$('.cost.detail').html()+'</div>';
					}
				}else{
					topPrice = '<div class="prices-wrapper">'+obOffer.PRICES_HTML+'</div>';
				}

				priceHtml = '<div class="with_matrix pl with_old price_matrix_wrapper">'+topPrice+'</div>';
				priceHtml += '<div class="js_price_wrapper">';
				priceHtml += '<div class="js-info-block rounded3">'+
								'<div class="block_title text-upper font_xs font-bold">'+
									BX.message('PRICES_TYPE')+
									'<i class="svg inline  svg-inline-close" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path data-name="Rounded Rectangle 114 copy 3" class="cccls-1" d="M334.411,138l6.3,6.3a1,1,0,0,1,0,1.414,0.992,0.992,0,0,1-1.408,0l-6.3-6.306-6.3,6.306a1,1,0,0,1-1.409-1.414l6.3-6.3-6.293-6.3a1,1,0,0,1,1.409-1.414l6.3,6.3,6.3-6.3A1,1,0,0,1,340.7,131.7Z" transform="translate(-325 -130)"></path></svg></i>'+
								'</div>'+
							'<div class="block_wrap">'+
								'<div class="block_wrap_inner prices srollbar-custom">';
				
				if(bPriceCount)
				{
					priceHtml += obOffer.PRICE_MATRIX;
				}
				else if(obOffer.PRICES_HTML)
				{
					priceHtml += obOffer.PRICES_HTML;
				}

				priceHtml += '<div class="more-btn text-center"></div>';
				priceHtml += '</div></div></div>';
				priceHtml += '<div class="js-show-info-block more-item-info rounded3 bordered-block text-center"><i class="svg inline  svg-inline-fw" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" width="8" height="2" viewBox="0 0 8 2"><path id="Ellipse_292_copy_3" data-name="Ellipse 292 copy 3" class="cls-1" d="M320,4558a1,1,0,1,1-1,1A1,1,0,0,1,320,4558Zm-3,0a1,1,0,1,1-1,1A1,1,0,0,1,317,4558Zm6,0a1,1,0,1,1-1,1A1,1,0,0,1,323,4558Z" transform="translate(-316 -4558)"></path></svg></i></div>';
				priceHtml += '</div>';

			}else{
				priceHtml = $('.cost.detail').html();
			}
		}else{
			priceHtml = $('.cost.detail').html();
		}
	}

	if($('#photo-sku').length) //show img
	{
		imgSrc = ($('#photo-sku .product-detail-gallery__picture.one').attr('src') ? $('#photo-sku .product-detail-gallery__picture.one').attr('src') : $('#photo-sku .product-detail-gallery__picture').data('src') ? $('#photo-sku .product-detail-gallery__picture').data('src') : $('#photo-sku .product-detail-gallery__picture').attr('src'));
	}
	else if($('.product-detail-gallery__slider #photo-0').length)
	{
		imgSrc = ($('.product-detail-gallery__slider #photo-0 .product-detail-gallery__picture').data('src') ? $('.product-detail-gallery__slider #photo-0 .product-detail-gallery__picture').data('src') : $('.product-detail-gallery__slider #photo-0 .product-detail-gallery__picture').attr('src'));
	}
	//show button
	if ($('.slide_offer').length) {
		buttonHtml = '<span class="buy_block"><span class="btn btn-default btn-sm slide_offer more type_block'+($('.product-container .buy_block .offer_buy_block .btn').hasClass('has_prediction') ? ' has_prediction' : '')+'">'+($('.product-container .buy_block .offer_buy_block .in-cart').is(':visible') ? $('.product-container .buy_block .offer_buy_block .in-cart').html() : BX.message('MORE_INFO_SKU'))+'</span></span>';
	} else if ($('.buy_block .sku_props').length) {
		buttonHtml = '<span class="buy_block"><span class="btn btn-default btn-sm more type_block'+($('.product-container .buy_block .offer_buy_block .btn').hasClass('has_prediction') ? ' has_prediction' : '')+'">'+($('.product-container .buy_block .offer_buy_block .in-cart').is(':visible') ? $('.product-container .buy_block .offer_buy_block .in-cart').html() : BX.message('MORE_INFO_SKU'))+'</span></span>';
		// buttonHtml = $('.buy_block .button_block').html().replace(/btn-lg/g, 'btn-sm more ww');
	} else if ($('.buy_block .button_block').length) {
		buttonHtml = $('.buy_block .button_block').html().replace(/btn-lg/g, 'btn-sm');
	}

	if($('.sku_props .bx_catalog_item_scu > div').length)
	{
		var skuHtmlTmp = '';
		$('.product-container .sku_props .bx_catalog_item_scu > div').each(function(){
			var _this = $(this),
				li_block = _this.find('li.active'),
				select_block = _this.find('select');
			if(li_block.length)
			{
				skuHtmlTmp += '<div class="bx_catalog_item_scu"><div class="bx_scu"><div class="'+_this.attr('class')+'"><ul><li class="active" title="'+li_block.attr('title')+'">'+li_block.html()+'</li></ul></div></div></div>';
			}
			else if(select_block.length)
			{
				if(select_block.find('option:selected').data('img_src') !== undefined)
				{
					skuHtmlTmp += '<div class="bx_catalog_item_scu"><div class="bx_scu"><div class="bx_item_detail_scu"><ul><li class="active" title="'+select_block.val()+'"><span class="cnt1"><span class="cnt_item" style="background-image:url('+select_block.find('option:selected').data('img_src')+')"></span></span></li></ul></div></div></div>';
				}
				else
				{
					skuHtmlTmp += '<div class="bx_catalog_item_scu"><div class="bx_scu"><div class="'+_this.attr('class')+'"><ul><li class="active"><span class="cnt">'+select_block.val()+'</span></li></ul></div></div></div>';
				}
			}
		})
		skuHtml = skuHtmlTmp.replace(/mCustomScrollbar/g, '');
	}
	// setTimeout(function(){
		$('#headerfixed .logo-row').html(
		'<div class="ajax_load">'+
			'<div class="table-view flexbox flexbox--row">'+
				'<div class="table-view__item item main_item_wrapper">'+
					'<div class="table-view__item-wrapper item_info catalog-adaptive flexbox flexbox--row">'+
						'<div class="item-foto">'+
							'<div class="item-foto__picture">'+
								'<img src="'+imgSrc+'" />'+
							'</div>'+
						'</div>'+
						'<div class="item-info">'+
							'<div class="item-title">'+
								'<span>'+$('#pagetitle').text()+'</span>'+
							'</div>'+
							'<div class="wrapp_stockers sa_block">'+
								($('.product-info-headnote .rating').length ? '<div class="rating sm-stars">'+ratingHtml+'</div>' : '')+
								($('.quantity_block_wrapper .item-stock').length ? '<div class="item-stock">'+$('.quantity_block_wrapper .item-stock').html()+'</div>' : '')+
							'</div>'+
						'</div>'+
						'<div class="item-actions flexbox flexbox--row">'+
							'<div class="item-price">'+
								'<div class="cost prices">'+priceHtml+'</div>'+
							'</div>'+
							'<div class="item-sku">'+
								'<div class="but-cell flexbox flexbox--row sku_props">'+skuHtml+'</div>'+
							'</div>'+
							'<div class="item-buttons">'+
								'<div class="but-cell">'+buttonHtml+'</div>'+
							'</div>'+
							($('.product-info .like_icons').length ? '<div class="item-icons s_'+$('.product-info .like_icons').data('size')+'"><div class="like_icons list static icons long">'+$('.product-info .like_icons').html()+'</div></div>' : '')+
						'</div>'+
					'</div>'+
				'</div>'+
			'</div>'+
		'</div>');
	// },5000)

	InitLazyLoad();
	InitScrollBar();

	if(typeof obMaxPredictions === 'object'){
		obMaxPredictions.showAll();
	}
}	

BX.addCustomEvent('onWindowResize', function(eventdata){
	if( window.predictionWindow && typeof window.predictionWindow.close === 'function' ) {
		window.predictionWindow.close();
	}
});

$(document).on('click', '.ordered-block.goods .tabs li', function(){
	setTimeout(
		sliceItemBlockSlide, 5
	);
});

$(document).on('click', ".item-stock .store_view", function(){
	scroll_block($('.js-store-scroll'), $('a[href=#stores]'));
});

$(document).on('click', '.blog-info__rating--top-info, #headerfixed .wproducts .wrapp_stockers .rating .votes_block', function() {
	var reviews = $('.reviews.EXTENDED');
	if(reviews.length) {
		scroll_block($('.js-store-scroll'), $('.ordered-block .nav-tabs a[href="#reviews"]'));
	}
});

$(document).on('click', ".table-view__item--has-stores .item-stock .value", function(){
	$(this).closest('.table-view__item-wrapper').find('.stores-icons .btn').trigger('click');
});

$(document).on('click', '#headerfixed .item-buttons .more', function(){
	if($('.product-container .buy_block .offer_buy_block .to-cart').is(':visible'))
		$('.product-container .buy_block .offer_buy_block .to-cart').trigger('click');
	else
		location.href = arAsproOptions['PAGES']['BASKET_PAGE_URL'];
})

$(document).on('click', '#headerfixed .item-actions .bx_catalog_item_scu', function(){
	var offset = 0;
	offset = $('.product-container .sku_props .bx_catalog_item_scu').offset().top;
		
	$('body, html').animate({scrollTop: offset-150}, 500);
})

$(document).on('click', ".stores-title .stores-title__list", function(){
	var _this = $(this);
	_this.siblings().removeClass('stores-title--active');
	_this.addClass('stores-title--active');

	$('.stores_block_wrap .stores-amount-list').hide(100).removeClass('stores-amount-list--active');
	$('.stores_block_wrap .stores-amount-list:eq('+_this.index()+')').show(100, function(){
		if(_this.hasClass('stores-title--map'))
		{
			if(typeof map !== 'undefined')
			{
				map.container.fitToViewport();
				if(typeof clusterer !== 'undefined' && !$(this).find('.detail_items').is(':visible'))
				{
					map.setBounds(clusterer.getBounds(), {
						zoomMargin: 40,
						// checkZoomRange: true
					});
				}
			}
		}
	}).addClass('stores-amount-list--active');

})

$(document).on('click', ".info_ext_block .title", function(){
	var _this = $(this);
	_this.toggleClass('opened');
	_this.next().slideToggle();
})

$(document).on('click', ".stores-icons .btn", function(){
	var _this = $(this),
		block = _this.closest('.table-view__item-wrapper').next(),
		bVisibleblock = (block.is(':visible')),
		animate = (bVisibleblock ? 'slideUp' : 'slideDown');

	if(!_this.hasClass('clicked'))
	{
		_this.addClass('clicked');

		block.velocity('stop').velocity(animate, {
			duration: 400,
			// delay: 250,
			begin: function(){
				_this.toggleClass('closed');
			},
			complete: function(){
				_this.removeClass('clicked');
				// InitLazyLoad();
			}
		});
	}
});

var checkFilterLandgings = function(){
	if ($('.top-content-block .with-filter .with-filter-wrapper').length) {
		var bActiveClass = false;
		if ($("#mobilefilter .with-filter-wrapper").length) {
			if ($("#mobilefilter .with-filter-wrapper .bx_filter_parameters_box").hasClass('active')) {
				bActiveClass = true;
			}
			$("#mobilefilter .with-filter-wrapper").empty()
			$('.top-content-block .with-filter .with-filter-wrapper').prependTo($("#mobilefilter .with-filter-wrapper"))
		} else {
			$('.top-content-block .with-filter .with-filter-wrapper').prependTo($("#mobilefilter .bx_filter_parameters"))
		}
		if ($("#mobilefilter .bx_filter_parameters .landings-list__item--active").length || bActiveClass) {
			$("#mobilefilter .with-filter-wrapper .bx_filter_parameters_box").addClass('active')
		}
		$('#mobilefilter .scrollbar').scrollTop(0)
		if ($('#mobilefilter .bx_filter_parameters.scroll-init').length) {
			$('#mobilefilter .bx_filter_parameters.scroll-init').mCustomScrollbar('scrollTo', 0)
		}
	}
}


$(document).ready(function(){
	lazyLoadPagenBlock();
	BX.addCustomEvent('onWindowResize', function(){
		try {
			var fixedMobile = arAsproOptions.THEME['FIXED_BUY_MOBILE'] == 'Y';

			if(fixedMobile) {
				var buyBlock = $('.buy_block');
				var counterWrapp = $('.counter_wrapp');

				if(buyBlock.length && counterWrapp.length && !$('.list-offers.ajax_load').length) {
					if( window.matchMedia('(max-width: 767px)').matches ) {	
						if(buyBlock.data('hasCatalog') === undefined) {
							var hasCatalog = buyBlock.hasClass('catalog_block');	
							buyBlock.data('hasCatalog', hasCatalog);
						}
						buyBlock.addClass('catalog_block');

						if(counterWrapp.data('hasList') === undefined) {
							var hasList = counterWrapp.hasClass('list');	
							counterWrapp.data('hasList', hasList);
						}
						counterWrapp.removeClass('list').addClass('fixed');
					} else {
						if(buyBlock.data('hasCatalog') !== undefined && !buyBlock.data('hasCatalog')) {
							buyBlock.removeClass('catalog_block');
						}

						if(counterWrapp.data('hasList') !== undefined && counterWrapp.data('hasList')) {
							counterWrapp.addClass('list');
						}
						counterWrapp.removeClass('fixed');
					}
				}
				
			}
		}catch(e){}
	});

	$(document).find('.catalog_detail [class^=bx_item_detail] [class*=_scroller_container]').mCustomScrollbar({
		mouseWheel: {
			scrollAmount: 150,
			preventDefault: true
		}
	});
});

/* End */
;
; /* Start:"a:4:{s:4:"full";s:92:"/local/templates/aspro_max/components/bitrix/catalog.element/main/script.js?1621600952127394";s:6:"source";s:75:"/local/templates/aspro_max/components/bitrix/catalog.element/main/script.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
var ItemObj = {};

$( document ).ready( function() {

	if( (BX.message( 'TYPE_SKU' ) != 'TYPE_1' || BX.message( 'HAS_SKU_PROPS' ) != 'Y') )
		setNewHeader();

	//change fixed header
	if( arMaxOptions[ 'THEME' ][ 'SHOW_HEADER_GOODS' ] == 'Y' )
		$( '#headerfixed .logo-row' ).addClass( 'wproducts' );

	//set fixed tabs
	if( $( '.ordered-block.js-store-scroll .tabs > ul.nav.nav-tabs' ).length )
	{
		$( '<div class="product-item-detail-tabs-container-fixed">' +
			'<div class="wrapper_inner">' +
			'<div class="product-item-detail-tabs-wrapper arrow_scroll">' +
			'<ul class="product-item-detail-tabs-list nav nav-tabs">' +
			$( '.ordered-block.js-store-scroll ul.nav.nav-tabs' ).html() +
			//'<li class="last"></li>'+
			'</ul>' +
			'</div>' +
			'</div>' +
			'</div>' ).insertAfter( $( '#headerfixed' ) );
	}

	var options = {
		arrows_css: { 'background-color': '#fafafa' },
		linked_tabs: $( '.ordered-block .tabs.arrow_scroll.arrow_scroll_init' ),
	};
	$( '.product-item-detail-tabs-wrapper' ).scrollTab( options );

	var options = {};
	$( '.tabs.arrow_scroll:not(.arrow_scroll_init)' ).scrollTab( options );
	InitStickySideBar( '.sticky-sidebar-custom', '.product-container.catalog_detail' );

	$( ".opener" ).click( function() {
		$( this ).find( ".opener_icon" ).toggleClass( "opened" );
		var showBlock = $( this ).parents( "tr" ).toggleClass( "nb" ).next( ".offer_stores" )
			.find( ".stores_block_wrap" );
		showBlock.slideToggle( 200 );
	} );

	$( 'a.linked' ).on( 'shown.bs.tab', function( e ) {
		var hashLink = $( this ).attr( 'href' ).replace( '#', '' )
		$( this ).closest( '.ordered-block' ).find( '.tab-pane' ).removeClass( 'cur' )
		$( '#' + hashLink ).addClass( 'cur' )
	} )

	$( 'a[data-toggle="tab"]:not(.linked)' ).on( 'shown.bs.tab', function( e ) {
		var _this = $( e.target ),
			parent = _this.parent();
		if( _this.attr( 'href' ) )
		{
			history.pushState( {}, "", _this.attr( 'href' ) );
		}
		//top nav
		if( _this.closest( '.product-item-detail-tabs-list' ).length )
		{
			if( $( '.ordered-block .tabs' ).length )
			{
				var content_offset = $( '.ordered-block .tabs' ).offset(),
					tab_height = $( '.product-item-detail-tabs-container-fixed' ).actual( 'outerHeight' ),
					hfixed_height = $( '#headerfixed' ).actual( 'outerHeight' );
				// $('html, body').animate({scrollTop: content_offset.top-hfixed_height-tab_height}, 400);
				$( 'html, body' ).animate( { scrollTop: content_offset.top - 88 }, 400 );
			}
		}

		$( '.nav.nav-tabs li' ).each( function() {
			var _this = $( this );
			if( !_this.find( ' > a.linked' ).length )
			{
				_this.removeClass( 'active' );
				if( _this.index() == parent.index() )
					_this.addClass( 'active' );
			}
		} )
		InitLazyLoad();
	} )

	/*	if($('.title-tab-heading').length)
	{
		$('.title-tab-heading').on('click', function(){
			var _this = $(this),
				content_offset = _this.offset();
			$('html, body').animate({scrollTop: content_offset.top-100}, 400);
		})
	}*/

	BX.addCustomEvent( 'onWindowResize', function( eventdata ) {
		try
		{
			ignoreResize.push( true );
			var bSticky = $( '.wrapper1.sticky_menu:not(.sm)' ).length;
			var media = bSticky ? 992 + 340 : 992;
			if( window.matchMedia( '(min-width: ' + media + 'px)' ).matches )
			{
				if( !$( '.left_block .buy_block .counter_wrapp' ).length && $( '.product-info .right_info .js-prices-in-item .counter_wrapp' ).length )
				{
					$( '.product-info .right_info .js-prices-in-item .buy_block' )
						.appendTo( $( '.left_block .js-prices-in-side' ) )
				}

			}
			else
			{
				if( $( '.left_block .buy_block .counter_wrapp' ).length && !$( '.product-info .right_info .js-prices-in-item .counter_wrapp' ).length )
				{
					$( '.left_block .buy_block' ).appendTo( $( '.product-info .right_info .js-prices-in-item' ) )
				}
			}
		}
		catch( e )
		{
		}
		finally
		{
			ignoreResize.pop();
		}
	} );

	$( 'html, body' ).on( 'mousedown', function( e ) {
		if( typeof e.target.className == 'string' && e.target.className.indexOf( 'adm' ) < 0 )
		{
			e.stopPropagation();
			var hint = $( e.target ).closest( '.hint' );
			if( !$( e.target ).closest( '.hint' ).length )
			{
				$( '.hint' ).removeClass( "active" ).find( ".tooltip" ).slideUp( 100 );
			}
			else
			{
				var pos_tmp = hint.offset().top + '' + hint.offset().left;
				$( '.hint' ).each( function() {
					var pos_tmp2 = $( this ).offset().top + '' + $( this ).offset().left;
					if( $( this ).text() + pos_tmp2 != hint.text() + pos_tmp )
					{
						$( this ).removeClass( "active" ).find( ".tooltip" ).slideUp( 100 );
					}
				} )
			}
		}
	} )
} )
$( '.set_block' ).ready( function() {
	$( '.set_block ' ).equalize( { children: '.item:not(".r") .cost', reset: true } );
	$( '.set_block' ).equalize( { children: '.item .item-title', reset: true } );
	$( '.set_block' ).equalize( { children: '.item .item_info', reset: false } );
} );

(function( window ) {

	if( !window.JCCatalogOnlyElement )
	{

		window.JCCatalogOnlyElement = function( arParams ) {
			if( typeof arParams === 'object' )
			{
				this.params = arParams;

				this.obProduct = null;
				this.obProductItem = null;
				this.set_quantity = 1;

				this.currentPriceMode = '';
				this.currentPrices = [];
				this.currentPriceSelected = 0;
				this.currentQuantityRanges = [];
				this.currentQuantityRangeSelected = 0;

				if( this.params.MESS )
				{
					this.mess = this.params.MESS;
				}

				this.init();
			}
		}
		window.JCCatalogOnlyElement.prototype = {
			init: function() {
				var i = 0,
					j = 0,
					treeItems = null;
				this.obProduct = $( '#' + this.params.ID ).closest( '.product-container' )[ 0 ];
				this.obProductItem = BX( this.params.ID );

				if( !!this.obProduct )
				{
					$( this.obProduct ).find( '.counter_wrapp .counter_block input' )
						.data( 'product', 'ob' + this.obProductItem.id + 'el' );
					this.currentPriceMode = this.params.ITEM_PRICE_MODE;
					this.currentPrices = this.params.ITEM_PRICES;
					this.currentQuantityRanges = this.params.ITEM_QUANTITY_RANGES;
				}

			},

			setPriceAction: function() {
				this.set_quantity = this.params.MIN_QUANTITY_BUY;
				if( $( this.obProduct ).find( 'input[name=quantity]' ).length )
					this.set_quantity = $( this.obProduct ).find( 'input[name=quantity]' ).val();

				this.checkPriceRange( this.set_quantity );

				$( this.obProduct ).find( '.not_matrix' ).hide();

				$( this.obProduct ).find( '.with_matrix .price_value_block' )
					.html( getCurrentPrice( this.currentPrices[ this.currentPriceSelected ].PRICE, this.currentPrices[ this.currentPriceSelected ].CURRENCY, this.currentPrices[ this.currentPriceSelected ].PRINT_PRICE ) );

				if( $( this.obProduct ).find( '.with_matrix .discount' ) )
				{
					$( this.obProduct ).find( '.with_matrix .discount' )
						.html( getCurrentPrice( this.currentPrices[ this.currentPriceSelected ].BASE_PRICE, this.currentPrices[ this.currentPriceSelected ].CURRENCY, this.currentPrices[ this.currentPriceSelected ].PRINT_BASE_PRICE ) );
				}

				if( this.params.SHOW_DISCOUNT_PERCENT_NUMBER == 'Y' )
				{
					if( this.currentPrices[ this.currentPriceSelected ].PERCENT > 0 && this.currentPrices[ this.currentPriceSelected ].PERCENT < 100 )
					{
						if( !$( this.obProduct ).find( '.with_matrix .sale_block .sale_wrapper .value' ).length )
							$( '<div class="value"></div>' ).insertBefore( $( this.obProduct )
								.find( '.with_matrix .sale_block .sale_wrapper .text' ) );

						$( this.obProduct ).find( '.with_matrix .sale_block .sale_wrapper .value' )
							.html( '-<span>' + this.currentPrices[ this.currentPriceSelected ].PERCENT + '</span>%' );
					}
					else
					{
						if( $( this.obProduct ).find( '.with_matrix .sale_block .sale_wrapper .value' ).length )
							$( this.obProduct ).find( '.with_matrix .sale_block .sale_wrapper .value' ).remove();
					}
				}

				$( this.obProduct ).find( '.with_matrix .sale_block .text .values_wrapper' )
					.html( getCurrentPrice( this.currentPrices[ this.currentPriceSelected ].DISCOUNT, this.currentPrices[ this.currentPriceSelected ].CURRENCY, this.currentPrices[ this.currentPriceSelected ].PRINT_DISCOUNT ) );

				$( this.obProduct ).find( '.with_matrix' ).show();

				if( arMaxOptions[ 'THEME' ][ 'SHOW_TOTAL_SUMM' ] == 'Y' )
				{
					if( typeof this.currentPrices[ this.currentPriceSelected ] !== 'undefined' )
						setPriceItem( $( this.obProduct ), this.set_quantity, this.currentPrices[ this.currentPriceSelected ].PRICE );
				}
			},

			checkPriceRange: function( quantity ) {
				if( typeof quantity === 'undefined' || this.currentPriceMode != 'Q' )
					return;

				var range, found = false;

				for( var i in this.currentQuantityRanges )
				{
					if( this.currentQuantityRanges.hasOwnProperty( i ) )
					{
						range = this.currentQuantityRanges[ i ];

						if(
							parseInt( quantity ) >= parseInt( range.SORT_FROM )
							&& (
								range.SORT_TO == 'INF'
								|| parseInt( quantity ) <= parseInt( range.SORT_TO )
							)
						)
						{
							found = true;
							this.currentQuantityRangeSelected = range.HASH;
							break;
						}
					}
				}

				if( !found && (range = this.getMinPriceRange()) )
				{
					this.currentQuantityRangeSelected = range.HASH;
				}

				for( var k in this.currentPrices )
				{
					if( this.currentPrices.hasOwnProperty( k ) )
					{
						if( this.currentPrices[ k ].QUANTITY_HASH == this.currentQuantityRangeSelected )
						{
							this.currentPriceSelected = k;
							break;
						}
					}
				}
			},

			getMinPriceRange: function() {
				var range;

				for( var i in this.currentQuantityRanges )
				{
					if( this.currentQuantityRanges.hasOwnProperty( i ) )
					{
						if(
							!range
							|| parseInt( this.currentQuantityRanges[ i ].SORT_FROM ) < parseInt( range.SORT_FROM )
						)
						{
							range = this.currentQuantityRanges[ i ];
						}
					}
				}

				return range;
			}
		}
	}

	if( !!window.JCCatalogElement )
	{
		return;
	}

	var BasketButton = function( params ) {
		BasketButton.superclass.constructor.apply( this, arguments );
		this.nameNode = BX.create( 'span', {
			props: { className: 'bx_medium bx_bt_button', id: this.id },
			style: typeof (params.style) === 'object' ? params.style : {},
			text: params.text
		} );
		this.buttonNode = BX.create( 'span', {
			attrs: { className: params.ownerClass },
			children: [ this.nameNode ],
			events: this.contextEvents
		} );
		if( BX.browser.IsIE() )
		{
			this.buttonNode.setAttribute( "hideFocus", "hidefocus" );
		}
	};
	BX.extend( BasketButton, BX.PopupWindowButton );

	window.JCCatalogElement = function( arParams ) {
		this.timerInitCalculateDelivery = false;
		this.skuVisualParams = {
			SELECT:
				{
					TAG_BIND: 'select',
					TAG: 'option',
					ACTIVE_CLASS: 'active',
					HIDE_CLASS: 'hidden',
					EVENT: 'change',
				},
			LI:
				{
					TAG_BIND: 'li',
					TAG: 'li',
					ACTIVE_CLASS: 'active',
					HIDE_CLASS: 'missing',
					EVENT: 'click',
				}
		};
		this.productType = 0;

		this.config = {
			useCatalog: true,
			showQuantity: true,
			showPrice: true,
			showAbsent: true,
			showOldPrice: false,
			showPercent: false,
			showSkuProps: false,
			showOfferGroup: false,
			useCompare: false,
			mainPictureMode: 'IMG',
			showBasisPrice: false,
			showPercentNumber: false,
			offerShowPreviewPictureProps: false,
			basketAction: [ 'BUY' ],
			showClosePopup: false
		};

		this.basketLinkURL = '';

		this.checkQuantity = false;
		this.maxQuantity = 0;
		this.SliderImages = 0;
		this.defaultCount = 1;
		this.stepQuantity = 1;
		this.isDblQuantity = false;
		this.canBuy = true;
		this.currentBasisPrice = {};
		this.canSubscription = true;
		this.currentIsSet = false;
		this.updateViewedCount = false;

		this.currentPriceMode = '';
		this.currentPrices = [];
		this.currentPriceSelected = 0;
		this.currentQuantityRanges = [];
		this.currentQuantityRangeSelected = 0;

		this.precision = 6;
		this.precisionFactor = Math.pow( 10, this.precision );

		this.listID = {
			main: [ 'PICT_ID', 'BIG_SLIDER_ID', 'BIG_IMG_CONT_ID' ],
			stickers: [ 'STICKER_ID' ],
			productSlider: [ 'SLIDER_CONT', 'SLIDER_LIST', 'SLIDER_LEFT', 'SLIDER_RIGHT' ],
			offerSlider: [ 'SLIDER_CONT_OF_ID', 'SLIDER_LIST_OF_ID', 'SLIDER_LEFT_OF_ID', 'SLIDER_RIGHT_OF_ID' ],
			offerSliderMobile: [
				'SLIDER_CONT_OFM_ID',
				'SLIDER_LIST_OFM_ID',
				'SLIDER_LEFT_OFM_ID',
				'SLIDER_RIGHT_OFM_ID'
			],
			offers: [ 'TREE_ID', 'TREE_ITEM_ID', 'DISPLAY_PROP_DIV', 'DISPLAY_PROP_ARTICLE_DIV', 'OFFER_GROUP' ],
			quantity: [
				'QUANTITY_ID',
				'QUANTITY_UP_ID',
				'QUANTITY_DOWN_ID',
				'QUANTITY_MEASURE',
				'QUANTITY_LIMIT',
				'BASIS_PRICE'
			],
			price: [ 'PRICE_ID' ],
			oldPrice: [ 'OLD_PRICE_ID', 'DISCOUNT_VALUE_ID' ],
			discountPerc: [ 'DISCOUNT_PERC_ID' ],
			basket: [
				'BASKET_PROP_DIV',
				'BUY_ID',
				'BASKET_LINK',
				'ADD_BASKET_ID',
				'BASKET_ACTIONS_ID',
				'NOT_AVAILABLE_MESS',
				'SUBSCRIBE_ID',
				'SUBSCRIBED_ID'
			],
			magnifier: [ 'MAGNIFIER_ID', 'MAGNIFIER_AREA_ID' ],
			compare: [ 'COMPARE_LINK_ID' ]
		};

		this.visualPostfix = {
			// main pict
			PICT_ID: '_pict',
			BIG_SLIDER_ID: '_big_slider',
			BIG_IMG_CONT_ID: '_bigimg_cont',
			// stickers
			STICKER_ID: '_sticker',
			// product pict slider
			SLIDER_CONT: '_slider_cont',
			SLIDER_LIST: '_slider_list',
			SLIDER_LEFT: '_slider_left',
			SLIDER_RIGHT: '_slider_right',
			// offers sliders
			SLIDER_CONT_OF_ID: '_slider_cont_',
			SLIDER_LIST_OF_ID: '_slider_list_',
			SLIDER_LEFT_OF_ID: '_slider_left_',
			SLIDER_RIGHT_OF_ID: '_slider_right_',
			// offers sliders mobile
			SLIDER_CONT_OFM_ID: '_sliderm_cont_',
			SLIDER_LIST_OFM_ID: '_sliderm_list_',
			SLIDER_LEFT_OFM_ID: '_sliderm_left_',
			SLIDER_RIGHT_OFM_ID: '_sliderm_right_',
			// offers
			TREE_ID: '_skudiv',
			TREE_ITEM_ID: '_prop_',
			SIZE_ITEM_ID: '_size_',
			DISPLAY_PROP_DIV: '_sku_prop',
			DISPLAY_PROP_ARTICLE_DIV: '_sku_article_prop',
			// quantity
			QUANTITY_ID: '_quantity',
			QUANTITY_UP_ID: '_quant_up',
			QUANTITY_DOWN_ID: '_quant_down',
			QUANTITY_MEASURE: '_quant_measure',
			QUANTITY_LIMIT: '_quant_limit',
			BASIS_PRICE: '_basis_price',
			// price and discount
			PRICE_ID: '_price',
			OLD_PRICE_ID: '_old_price',
			DISCOUNT_VALUE_ID: '_price_discount',
			DISCOUNT_PERC_ID: '_dsc_pict',
			// basket
			BASKET_PROP_DIV: '_basket_prop',
			BUY_ID: '_buy_link',
			BASKET_LINK: '_basket_link',
			ADD_BASKET_ID: '_add_basket_link',
			BASKET_ACTIONS_ID: '_basket_actions',
			NOT_AVAILABLE_MESS: '_not_avail',
			SUBSCRIBE_ID: '_subscribe_div',
			SUBSCRIBED_ID: '_subscribed_div',
			// magnifier
			MAGNIFIER_ID: '_magnifier',
			MAGNIFIER_AREA_ID: '_magnifier_area',
			// offer groups
			OFFER_GROUP: '_set_group_',
			// compare
			COMPARE_LINK_ID: '_compare_link'
		};

		this.visual = {};

		this.basketMode = '';
		this.product = {
			checkQuantity: false,
			maxQuantity: 0,
			stepQuantity: 1,
			startQuantity: 1,
			isDblQuantity: false,
			canBuy: true,
			canSubscription: true,
			name: '',
			pict: {},
			id: 0,
			addUrl: '',
			buyUrl: '',
			slider: {},
			sliderCount: 0,
			useSlider: false,
			sliderPict: []
		};
		this.mess = {};

		this.basketData = {
			useProps: false,
			emptyProps: false,
			quantity: 'quantity',
			props: 'prop',
			basketUrl: '',
			sku_props: '',
			sku_props_var: 'basket_props',
			add_url: '',
			buy_url: ''
		};
		this.compareData = {
			compareUrl: '',
			comparePath: ''
		};

		this.defaultPict = {
			preview: null,
			detail: null
		};

		this.offers = [];
		this.offerNum = 0;
		this.treeProps = [];
		this.obTreeRows = [];
		this.showCount = [];
		this.showStart = [];
		this.selectedValues = {};
		this.curOfferIndex = null;
		this.sliders = [];

		this.obProduct = null;
		this.obQuantity = null;
		this.obQuantityUp = null;
		this.obQuantityDown = null;
		this.obBasisPrice = null;
		this.obPict = null;
		this.obPictAligner = null;
		this.obPrice = {
			price: null,
			full: null,
			discount: null,
			percent: null
		};
		this.obTree = null;
		this.obBuyBtn = null;
		this.obBasketBtn = null;
		this.obAddToBasketBtn = null;
		this.obBasketActions = null;
		this.obNotAvail = null;
		this.obSkuProps = null;
		this.obSlider = null;
		this.obMeasure = null;
		this.obQuantityLimit = {
			all: null,
			value: null
		};
		this.obCompare = null;

		this.viewedCounter = {
			path: '/bitrix/components/bitrix/catalog.element/ajax.php',
			params: {
				AJAX: 'Y',
				SITE_ID: '',
				PRODUCT_ID: 0,
				PARENT_ID: 0
			}
		};

		this.currentImg = {
			src: '',
			width: 0,
			height: 0,
			screenWidth: 0,
			screenHeight: 0,
			screenOffsetX: 0,
			screenOffsetY: 0,
			scale: 1
		};
		this.currentBigImg = {
			src: '',
		}

		this.obPopupWin = null;
		this.basketUrl = '';
		this.basketParams = {};

		this.obPopupPict = null;
		this.magnify = {
			obMagnifier: null,
			obMagnifyPict: null,
			obMagnifyArea: null,
			obBigImg: null,
			obBigSlider: null,
			magnifyShow: false,
			areaParams: {
				width: 100,
				height: 130,
				left: 0,
				top: 0,
				scaleFactor: 1,
				globalLeft: 0,
				globalTop: 0,
				globalRight: 0,
				globalBottom: 0
			},
			magnifierParams: {
				top: 0,
				left: 0,
				width: 0,
				height: 0,
				ratioX: 10,
				ratioY: 13,
				defaultScale: 1
			},
			magnifyPictParams: {
				marginTop: 0,
				marginLeft: 0,
				width: 0,
				height: 0
			}
		};

		this.treeRowShowSize = 5;
		this.treeEnableArrow = { display: '', cursor: 'pointer', opacity: 1 };
		this.treeDisableArrow = { display: '', cursor: 'default', opacity: 0.2 };
		this.sliderRowShowSize = 5;
		this.sliderEnableArrow = { display: '', cursor: 'pointer', opacity: 1 };
		this.sliderDisableArrow = { display: '', cursor: 'default', opacity: 0.2 };

		this.errorCode = 0;
		if( typeof arParams === 'object' )
		{
			this.params = arParams;
			this.initConfig();

			if( !!this.params.MESS )
			{
				this.mess = this.params.MESS;
			}
			switch( this.productType )
			{
				case 0:// no catalog
				case 1://product
				case 2://set
					this.initProductData();
					break;
				case 3://sku
					this.initOffersData();
					break;
				default:
					this.errorCode = -1;
			}

			this.initBasketData();
			this.initCompareData();
		}
		if( 0 === this.errorCode )
		{
			BX.ready( BX.delegate( this.Init, this ) );
		}
		this.params = {};
	};

	window.JCCatalogElement.prototype.Init = function() {
		var i = 0,
			j = 0,
			strPrefix = '',
			SliderImgs = null,
			TreeItems = null;

		this.obProduct = BX( this.visual.ID );
		if( !this.obProduct )
		{
			this.errorCode = -1;
		}
		this.obPict = BX( this.visual.PICT_ID );
		if( !this.obPict )
		{
			//this.errorCode = -2;
		}
		else
		{
			this.obPictAligner = this.obPict.parentNode;
		}

		if( this.config.showPrice )
		{
			this.obPrice.price = BX( this.visual.PRICE_ID );
			if( !this.obPrice.price && this.config.useCatalog )
			{
				this.errorCode = -16;
			}
			else
			{
				if( this.config.showOldPrice )
				{
					this.obPrice.full = BX( this.visual.OLD_PRICE_ID );
					this.obPrice.discount = BX( this.visual.DISCOUNT_VALUE_ID );
					if( !!this.obPrice.full )
						BX.adjust( this.obPrice.full, { style: { display: 'none' }, html: '' } );
					/*if (!this.obPrice.full || !this.obPrice.discount)
				{
					this.config.showOldPrice = false;
				}*/
				}
				if( this.config.showPercent )
				{
					this.obPrice.percent = BX( this.visual.DISCOUNT_PERC_ID );
					/*if (!this.obPrice.percent)
				{
					this.config.showPercent = false;
				}*/
				}
			}
			this.obBasketActions = BX( this.visual.BASKET_ACTIONS_ID );
			if( !!this.obBasketActions )
			{
				if( BX.util.in_array( 'BUY', this.config.basketAction ) )
				{
					this.obBuyBtn = BX( this.visual.BUY_ID );
				}
				if( BX.util.in_array( 'ADD', this.config.basketAction ) )
				{
					this.obAddToBasketBtn = BX( this.visual.BUY_ID );
				}
				if( !!this.visual.BASKET_LINK )
				{
					this.obBasketBtn = BX( this.visual.BASKET_LINK );
				}

			}
			this.obNotAvail = BX( this.visual.NOT_AVAILABLE_MESS );
		}

		if( this.config.showQuantity )
		{
			this.obQuantity = BX( this.visual.QUANTITY_ID );
			if( !!this.visual.QUANTITY_UP_ID )
			{
				this.obQuantityUp = BX( this.visual.QUANTITY_UP_ID );
			}
			if( !!this.visual.QUANTITY_DOWN_ID )
			{
				this.obQuantityDown = BX( this.visual.QUANTITY_DOWN_ID );
			}
			if( this.config.showBasisPrice )
			{
				this.obBasisPrice = BX( this.visual.BASIS_PRICE );
			}
		}
		if( 3 === this.productType )
		{
			/*if( !!this.visual.TREE_ID )
			{
				this.obTree = BX( this.visual.TREE_ID );
				if( !this.obTree )
				{
					this.errorCode = -256;
				}
				strPrefix = this.visual.TREE_ITEM_ID;
				for( i = 0; i < this.treeProps.length; i++ )
				{
					this.obTreeRows[ i ] = {
						LEFT: BX( strPrefix + this.treeProps[ i ].ID + '_left' ),
						RIGHT: BX( strPrefix + this.treeProps[ i ].ID + '_right' ),
						LIST: BX( strPrefix + this.treeProps[ i ].ID + '_list' ),
						CONT: BX( strPrefix + this.treeProps[ i ].ID + '_cont' )
					};
					if( !this.obTreeRows[ i ].LIST || !this.obTreeRows[ i ].CONT )
					{
						this.errorCode = -512;
						break;
					}
				}
			}*/

			if( !!this.visual.SIZE_ID )
			{
				this.obTree = BX( this.visual.SIZE_ID );
				if( !this.obTree )
				{
					this.errorCode = -256;
				}
				strPrefix = this.visual.SIZE_ITEM_ID;//_size_
				for( i = 0; i < this.treeProps.length; i++ )
				{
					this.obTreeRows[ i ] = {
						//LEFT: BX( strPrefix + this.treeProps[ i ].ID + '_left' ),
						//RIGHT: BX( strPrefix + this.treeProps[ i ].ID + '_right' ),
						LIST: BX( strPrefix + 'list' ),
						//CONT: BX( strPrefix + this.treeProps[ i ].ID + '_cont' )
					};
					if( !this.obTreeRows[ i ].LIST || !this.obTreeRows[ i ].CONT )
					{
						this.errorCode = -512;
						break;
					}
				}
			}
			if( !!this.visual.QUANTITY_MEASURE )
			{
				this.obMeasure = BX( this.visual.QUANTITY_MEASURE );
			}
			if( !!this.visual.QUANTITY_LIMIT )
			{
				this.obQuantityLimit.all = BX( this.visual.QUANTITY_LIMIT );
				if( !!this.obQuantityLimit.all )
				{
					this.obQuantityLimit.value = BX.findChild( this.obQuantityLimit.all, { tagName: 'span' }, false, false );
					if( !this.obQuantityLimit.value )
					{
						this.obQuantityLimit.all = null;
					}
				}
			}
		}

		if( this.config.showSkuProps )
		{
			if( !!this.visual.DISPLAY_PROP_DIV )
			{
				this.obSkuProps = BX( this.visual.DISPLAY_PROP_DIV );
			}
			if( !!this.visual.DISPLAY_PROP_ARTICLE_DIV )
			{
				this.obSkuArticleProps = BX( this.visual.DISPLAY_PROP_ARTICLE_DIV );
			}

		}

		if( this.config.useCompare )
		{
			this.obCompare = BX( this.visual.COMPARE_LINK_ID );
		}
		if( 0 === this.errorCode )
		{

			if( this.config.showQuantity )
			{
				if( !!this.obQuantityUp )
				{
					BX.bind( this.obQuantityUp, 'click', BX.delegate( this.QuantityUp, this ) );
				}
				if( !!this.obQuantityDown )
				{
					BX.bind( this.obQuantityDown, 'click', BX.delegate( this.QuantityDown, this ) );
				}
				if( !!this.obQuantity )
				{
					BX.bind( this.obQuantity, 'change', BX.delegate( this.QuantityChange, this ) );
				}
			}
			switch( this.productType )
			{
				case 0://no catalog
				case 1://product
				case 2://set
					if( this.product.useSlider )
					{
						this.product.slider = {
							COUNT: this.product.sliderCount,
							ID: this.visual.SLIDER_CONT,
							CONT: BX( this.visual.SLIDER_CONT ),
							LIST: BX( this.visual.SLIDER_LIST ),
							LEFT: BX( this.visual.SLIDER_LEFT ),
							RIGHT: BX( this.visual.SLIDER_RIGHT ),
							START: 0
						};
						SliderImgs = BX.findChildren( this.product.slider.LIST, { tagName: 'li' }, true );
						if( !!SliderImgs && 0 < SliderImgs.length )
						{
							for( j = 0; j < SliderImgs.length; j++ )
							{
								BX.bind( SliderImgs[ j ], 'click', BX.delegate( this.ProductSelectSliderImg, this ) );
							}
						}
						if( !!this.product.slider.LEFT )
						{
							BX.bind( this.product.slider.LEFT, 'click', BX.delegate( this.ProductSliderRowLeft, this ) );
							BX.adjust( this.product.slider.LEFT, { style: this.sliderDisableArrow } );

						}
						if( !!this.product.slider.RIGHT )
						{
							BX.bind( this.product.slider.RIGHT, 'click', BX.delegate( this.ProductSliderRowRight, this ) );
							BX.adjust( this.product.slider.RIGHT, { style: this.sliderEnableArrow } );
						}
						this.setCurrentImg( this.product.sliderPict[ 0 ], true );
					}
					break;
				case 3://sku
					for( var key in this.skuVisualParams )
					{
						var TreeItems = BX.findChildren( this.obTree, { tagName: this.skuVisualParams[ key ].TAG_BIND }, true );

						if( !!TreeItems && 0 < TreeItems.length )
						{
							for( i = 0; i < TreeItems.length; i++ )
							{
								$( TreeItems[ i ] )
									.on( this.skuVisualParams[ key ].EVENT, BX.delegate( this.SelectOfferProp, this ) );
								//BX.bind(TreeItems[i], this.skuVisualParams[key].EVENT,
								// BX.delegate(this.SelectOfferProp, this));
							}
						}
					}
					for( i = 0; i < this.offers.length; i++ )
					{
						this.offers[ i ].SLIDER_COUNT = parseInt( this.offers[ i ].SLIDER_COUNT, 10 );
						if( isNaN( this.offers[ i ].SLIDER_COUNT ) )
						{
							this.offers[ i ].SLIDER_COUNT = 0;
						}
						if( 0 === this.offers[ i ].SLIDER_COUNT )
						{
							this.sliders[ i ] = {
								COUNT: this.offers[ i ].SLIDER_COUNT,
								ID: ''
							};
						}
						else
						{
							for( j = 0; j < this.offers[ i ].SLIDER.length; j++ )
							{
								this.offers[ i ].SLIDER[ j ].WIDTH = parseInt( this.offers[ i ].SLIDER[ j ].WIDTH, 10 );
								this.offers[ i ].SLIDER[ j ].HEIGHT = parseInt( this.offers[ i ].SLIDER[ j ].HEIGHT, 10 );
							}
							this.sliders[ i ] = {
								COUNT: this.offers[ i ].SLIDER_COUNT,
								OFFER_ID: this.offers[ i ].ID,
								ID: this.visual.SLIDER_CONT_OF_ID + this.offers[ i ].ID,
								CONT: BX( this.visual.SLIDER_CONT_OF_ID + this.offers[ i ].ID ),
								LIST: BX( this.visual.SLIDER_LIST_OF_ID + this.offers[ i ].ID ),
								CONT_M: BX( this.visual.SLIDER_CONT_OFM_ID + this.offers[ i ].ID ),
								LIST_M: BX( this.visual.SLIDER_LIST_OFM_ID + this.offers[ i ].ID ),
								LEFT: BX( this.visual.SLIDER_LEFT_OF_ID + this.offers[ i ].ID ),
								RIGHT: BX( this.visual.SLIDER_RIGHT_OF_ID + this.offers[ i ].ID ),
								START: 0
							};
							SliderImgs = BX.findChildren( this.sliders[ i ].LIST, { tagName: 'li' }, true );
							if( !!SliderImgs && 0 < SliderImgs.length )
							{
								for( j = 0; j < SliderImgs.length; j++ )
								{
									BX.bind( SliderImgs[ j ], 'click', BX.delegate( this.SelectSliderImg, this ) );
								}
							}
							if( !!this.sliders[ i ].LEFT )
							{
								BX.bind( this.sliders[ i ].LEFT, 'click', BX.delegate( this.SliderRowLeft, this ) );
							}
							if( !!this.sliders[ i ].RIGHT )
							{
								BX.bind( this.sliders[ i ].RIGHT, 'click', BX.delegate( this.SliderRowRight, this ) );
							}
						}
					}
					this.SetCurrent();

					break;
			}

			if( !!this.obBuyBtn )
			{
				BX.bind( this.obBuyBtn, 'click', BX.proxy( this.BuyBasket, this ) );
			}
			if( !!this.obAddToBasketBtn )
			{
				BX.bind( this.obAddToBasketBtn, 'click', BX.proxy( this.Add2Basket, this ) );
			}
			if( !!this.obCompare )
			{
				BX.bind( this.obCompare, 'click', BX.proxy( this.Compare, this ) );
			}

			/*this.setMainPictHandler();
		setTimeout(function(){
			$('.offers_img.wof').css('opacity', 1);
		},400);*/
		}
	};

	window.JCCatalogElement.prototype.initConfig = function() {
		this.productType = parseInt( this.params.PRODUCT_TYPE, 10 );
		if( !!this.params.CONFIG && typeof (this.params.CONFIG) === 'object' )
		{

			if( this.params.CONFIG.USE_CATALOG !== 'undefined' && BX.type.isBoolean( this.params.CONFIG.USE_CATALOG ) )
			{
				this.config.useCatalog = this.params.CONFIG.USE_CATALOG;
			}
			this.config.showQuantity = !!this.params.CONFIG.SHOW_QUANTITY;
			this.config.showPrice = !!this.params.CONFIG.SHOW_PRICE;
			this.config.showPercent = !!this.params.CONFIG.SHOW_DISCOUNT_PERCENT;
			this.config.showOldPrice = !!this.params.CONFIG.SHOW_OLD_PRICE;
			this.config.showSkuProps = !!this.params.CONFIG.SHOW_SKU_PROPS;
			this.config.showOfferGroup = !!this.params.CONFIG.OFFER_GROUP;
			this.config.useCompare = !!this.params.CONFIG.DISPLAY_COMPARE;
			this.config.showPercentNumber = (this.params.SHOW_DISCOUNT_PERCENT_NUMBER == "Y");
			this.config.offerShowPreviewPictureProps = this.params.OFFER_SHOW_PREVIEW_PICTURE_PROPS;
			if( !!this.params.CONFIG.MAIN_PICTURE_MODE )
			{
				this.config.mainPictureMode = this.params.CONFIG.MAIN_PICTURE_MODE;
			}
			this.config.showBasisPrice = !!this.params.CONFIG.SHOW_BASIS_PRICE;
			if( !!this.params.CONFIG.ADD_TO_BASKET_ACTION )
			{
				this.config.basketAction = this.params.CONFIG.ADD_TO_BASKET_ACTION;
			}
			this.config.showClosePopup = !!this.params.CONFIG.SHOW_CLOSE_POPUP;
		}
		else
		{
			// old version
			if( this.params.USE_CATALOG !== 'undefined' && BX.type.isBoolean( this.params.USE_CATALOG ) )
			{
				this.config.useCatalog = this.params.USE_CATALOG;
			}
			this.config.showQuantity = !!this.params.SHOW_QUANTITY;
			this.config.showPrice = !!this.params.SHOW_PRICE;
			this.config.showPercent = !!this.params.SHOW_DISCOUNT_PERCENT;
			this.config.showOldPrice = !!this.params.SHOW_OLD_PRICE;
			this.config.showSkuProps = !!this.params.SHOW_SKU_PROPS;
			this.config.showOfferGroup = !!this.params.OFFER_GROUP;
			this.config.useCompare = !!this.params.DISPLAY_COMPARE;
			if( !!this.params.MAIN_PICTURE_MODE )
			{
				this.config.mainPictureMode = this.params.MAIN_PICTURE_MODE;
			}
			this.config.showBasisPrice = !!this.params.SHOW_BASIS_PRICE;
			if( !!this.params.ADD_TO_BASKET_ACTION )
			{
				this.config.basketAction = this.params.ADD_TO_BASKET_ACTION;
			}
			this.config.showClosePopup = !!this.params.SHOW_CLOSE_POPUP;
		}

		this.config.SKU_DETAIL_ID = this.params.SKU_DETAIL_ID;

		if( !this.params.VISUAL || typeof (this.params.VISUAL) !== 'object' || !this.params.VISUAL.ID )
		{
			this.errorCode = -1;
			return;
		}
		this.visual.ID = this.params.VISUAL.ID;
		this.basketLinkURL = this.params.BASKET.BASKET_URL;
		this.defaultCount = this.params.DEFAULT_COUNT;
		this.storeQuanity = BX( this.params.STORE_QUANTITY );
		this.initVisualParams( 'main' );
		if( this.config.showQuantity )
		{
			this.initVisualParams( 'quantity' );
		}
		if( this.config.showPrice )
		{
			this.initVisualParams( 'price' );
		}
		if( this.config.showOldPrice )
		{
			this.initVisualParams( 'oldPrice' );
		}
		if( this.config.showPercent )
		{
			this.initVisualParams( 'discountPerc' );
		}
		this.initVisualParams( 'basket' );
		if( this.config.mainPictureMode === 'MAGNIFIER' )
		{
			this.initVisualParams( 'magnifier' );
		}
		if( this.config.useCompare )
		{
			this.initVisualParams( 'compare' );
		}
	};

	window.JCCatalogElement.prototype.initVisualParams = function( ID ) {
		var i = 0,
			key = '';

		if( !this.listID[ ID ] )
		{
			this.errorCode = -1;
			return;
		}
		for( i = 0; i < this.listID[ ID ].length; i++ )
		{
			key = this.listID[ ID ][ i ];
			this.visual[ key ] = (!!this.params.VISUAL[ key ] ? this.params.VISUAL[ key ] : this.visual.ID + this.visualPostfix[ key ]);
		}

		this.visual[ 'SIZE_ID' ] = 'bx_size_list';
	};

	window.JCCatalogElement.prototype.initProductData = function() {
		var j = 0;
		this.initVisualParams( 'productSlider' );

		if( !!this.params.PRODUCT && 'object' === typeof (this.params.PRODUCT) )
		{
			if( this.config.showQuantity )
			{
				this.product.checkQuantity = this.params.PRODUCT.CHECK_QUANTITY;
				this.product.isDblQuantity = this.params.PRODUCT.QUANTITY_FLOAT;

				if( this.product.checkQuantity )
				{
					this.product.maxQuantity = (this.product.isDblQuantity ? parseFloat( this.params.PRODUCT.MAX_QUANTITY ) : parseInt( this.params.PRODUCT.MAX_QUANTITY, 10 ));
				}
				this.product.stepQuantity = (this.product.isDblQuantity ? parseFloat( this.params.PRODUCT.STEP_QUANTITY ) : parseInt( this.params.PRODUCT.STEP_QUANTITY, 10 ));

				this.checkQuantity = this.product.checkQuantity;
				this.isDblQuantity = this.product.isDblQuantity;
				this.maxQuantity = this.product.maxQuantity;
				this.stepQuantity = this.product.stepQuantity;
				if( this.isDblQuantity )
				{
					this.stepQuantity = Math.round( this.stepQuantity * this.precisionFactor ) / this.precisionFactor;
				}
			}

			this.product.canBuy = this.params.PRODUCT.CAN_BUY;
			this.product.canSubscription = this.params.PRODUCT.SUBSCRIPTION;
			if( this.config.showPrice )
			{
				this.currentBasisPrice = this.params.PRODUCT.BASIS_PRICE;
			}

			this.canBuy = this.product.canBuy;
			this.canSubscription = this.product.canSubscription;

			this.product.name = this.params.PRODUCT.NAME;
			this.product.pict = this.params.PRODUCT.PICT;
			this.product.id = this.params.PRODUCT.ID;

			if( !!this.params.PRODUCT.ADD_URL )
			{
				this.product.addUrl = this.params.PRODUCT.ADD_URL;
			}
			if( !!this.params.PRODUCT.BUY_URL )
			{
				this.product.buyUrl = this.params.PRODUCT.BUY_URL;
			}

			if( !!this.params.PRODUCT.SLIDER_COUNT )
			{
				this.product.sliderCount = parseInt( this.params.PRODUCT.SLIDER_COUNT, 10 );
				if( isNaN( this.product.sliderCount ) )
				{
					this.product.sliderCount = 0;
				}
				if( 0 < this.product.sliderCount && !!this.params.PRODUCT.SLIDER.length && 0 < this.params.PRODUCT.SLIDER.length )
				{
					for( j = 0; j < this.params.PRODUCT.SLIDER.length; j++ )
					{
						this.product.useSlider = true;
						this.params.PRODUCT.SLIDER[ j ].WIDTH = parseInt( this.params.PRODUCT.SLIDER[ j ].WIDTH, 10 );
						this.params.PRODUCT.SLIDER[ j ].HEIGHT = parseInt( this.params.PRODUCT.SLIDER[ j ].HEIGHT, 10 );
					}
					this.product.sliderPict = this.params.PRODUCT.SLIDER;
					this.setCurrentImg( this.product.sliderPict[ 0 ], false );
				}
			}
			this.currentIsSet = true;
		}
		else
		{
			this.errorCode = -1;
		}
	};

	window.JCCatalogElement.prototype.initOffersData = function() {
		this.initVisualParams( 'offerSlider' );
		this.initVisualParams( 'offerSliderMobile' );
		this.initVisualParams( 'offers' );
		if( !!this.params.OFFERS && BX.type.isArray( this.params.OFFERS ) )
		{
			this.offers = this.params.OFFERS;
			this.offerNum = 0;
			if( !!this.params.OFFER_SELECTED )
			{
				this.offerNum = parseInt( this.params.OFFER_SELECTED, 10 );
				if( 'offers' in this )
				{
					if( this.offers.length )
					{
						var objUrl = parseUrlQuery(),
							sku_params = this.params.SKU_DETAIL_ID,
							sku_id = 0;

						if( this.config.SKU_DETAIL_ID in objUrl )
							sku_id = objUrl[ this.config.SKU_DETAIL_ID ];

						if( sku_id )
						{
							for( var i in this.offers )
							{
								if( this.offers[ i ].ID == sku_id )
									this.offerNum = parseInt( i, 10 );

							}
						}
					}
				}
			}
			if( isNaN( this.offerNum ) )
			{
				this.offerNum = 0;
			}
			if( !!this.params.TREE_PROPS )
			{
				this.treeProps = this.params.TREE_PROPS;
			}
			if( !!this.params.DEFAULT_PICTURE )
			{
				this.defaultPict.preview = this.params.DEFAULT_PICTURE.PREVIEW_PICTIRE;
				this.defaultPict.detail = this.params.DEFAULT_PICTURE.DETAIL_PICTURE;
			}
			if( !!this.params.PRODUCT && typeof (this.params.PRODUCT) === 'object' )
			{
				this.product.id = parseInt( this.params.PRODUCT.ID, 10 );
				this.product.name = this.params.PRODUCT.NAME;
			}
		}
		else
		{
			this.errorCode = -1;
		}
	};

	window.JCCatalogElement.prototype.initBasketData = function() {
		if( !!this.params.BASKET && 'object' === typeof (this.params.BASKET) )
		{
			if( 1 === this.productType || 2 === this.productType )
			{
				this.basketData.useProps = !!this.params.BASKET.ADD_PROPS;
				this.basketData.emptyProps = !!this.params.BASKET.EMPTY_PROPS;
			}

			if( !!this.params.BASKET.QUANTITY )
			{
				this.basketData.quantity = this.params.BASKET.QUANTITY;
			}
			if( !!this.params.BASKET.PROPS )
			{
				this.basketData.props = this.params.BASKET.PROPS;
			}
			if( !!this.params.BASKET.BASKET_URL )
			{
				this.basketData.basketUrl = this.params.BASKET.BASKET_URL;
			}
			if( 3 === this.productType )
			{
				if( !!this.params.BASKET.SKU_PROPS )
				{
					this.basketData.sku_props = this.params.BASKET.SKU_PROPS;
				}
			}
			if( !!this.params.BASKET.ADD_URL_TEMPLATE )
			{
				this.basketData.add_url = this.params.BASKET.ADD_URL_TEMPLATE;
			}
			if( !!this.params.BASKET.BUY_URL_TEMPLATE )
			{
				this.basketData.buy_url = this.params.BASKET.BUY_URL_TEMPLATE;
			}
			if( this.basketData.add_url === '' && this.basketData.buy_url === '' )
			{
				this.errorCode = -1024;
			}
		}
	};

	window.JCCatalogElement.prototype.initCompareData = function() {
		if( this.config.useCompare )
		{
			if( !!this.params.COMPARE && typeof (this.params.COMPARE) === 'object' )
			{
				if( !!this.params.COMPARE.COMPARE_PATH )
				{
					this.compareData.comparePath = this.params.COMPARE.COMPARE_PATH;
				}
				if( !!this.params.COMPARE.COMPARE_URL_TEMPLATE_DEL )
				{
					this.compareData.compareUrlDel = this.params.COMPARE.COMPARE_URL_TEMPLATE_DEL;
				}
				if( !!this.params.COMPARE.COMPARE_URL_TEMPLATE )
				{
					this.compareData.compareUrl = this.params.COMPARE.COMPARE_URL_TEMPLATE;
				}
				else
				{
					this.config.useCompare = false;
				}
			}
			else
			{
				this.config.useCompare = false;
			}
		}
	};

	window.JCCatalogElement.prototype.setMainPictHandler = function() {
		switch( this.config.mainPictureMode )
		{
			case 'GALLERY':
				break;
			case 'MAGNIFIER':
				if( this.currentBigImg.src )
				{
					$( this.obPict ).addClass( 'zoom_picture' );
					InitZoomPict();
				}
				break;
			case 'POPUP':
				$( this.obPict ).parent().addClass( 'fancy_offer' );
				break;
			default:
				break;
		}
	};

	window.JCCatalogElement.prototype.setCurrentImg = function( img, showImage ) {
		showImage = !!showImage;
		if( 'SMALL' in img )
		{
			this.currentImg.src = img.SMALL.src;
		}
		else if( 'SRC' in img )
		{
			this.currentImg.src = img.SRC
		}
		;
		if( 'BIG' in img )
		{
			this.currentBigImg.src = img.BIG.src;
		}
		if( 'WIDTH' in img )
		{
			this.currentImg.width = img.WIDTH;
		}
		if( 'HEIGHT' in img )
		{
			this.currentImg.height = img.HEIGHT;
		}
		if( showImage && !!this.obPict )
		{
			if( this.config.mainPictureMode === 'MAGNIFIER' )
			{
				$( this.obPict ).attr( 'data-large', this.currentBigImg.src );
				$( this.obPict ).attr( 'xoriginal', this.currentBigImg.src );
				if( 'SMALL' in img )
					$( this.obPict ).attr( 'xpreview', img.SMALL.src );
			}
			if( 'src' in this.currentImg )
			{
				if( this.currentImg.src )
				{
					BX.adjust( this.obPict, { props: { src: this.currentImg.src } } );
				}
			}
			if( 'src' in this.currentBigImg )
			{
				if( this.currentBigImg.src )
				{
					if( this.config.mainPictureMode === 'POPUP' )
					{
						$( this.obPict ).parent().attr( 'href', this.currentBigImg.src );
					}
					$( this.obPict ).parent().attr( 'title', img.TITLE );
					$( this.obPict ).parent().attr( 'alt', img.ALT );
					$( this.obPict ).attr( 'title', img.TITLE );
					$( this.obPict ).attr( 'alt', img.ALT );
				}
			}

		}
	};

	window.JCCatalogElement.prototype.scaleImg = function( src, dest ) {
		var
			scaleX,
			scaleY,
			scale,
			result = {};

		if( dest.width >= src.width && dest.height >= src.height )
		{
			result.width = src.width;
			result.height = src.height;
		}
		else
		{
			scaleX = dest.width / src.width;
			scaleY = dest.height / src.height;
			scale = Math.min( scaleX, scaleY );
			result.width = Math.max( 1, parseInt( scale * src.width, 10 ) );
			result.height = Math.max( 1, parseInt( scale * src.height, 10 ) );
		}
		return result;
	};

	window.JCCatalogElement.prototype.showMagnifier = function( e ) {
		if( !this.magnify.magnifyShow )
		{
			this.calcMagnifierParams();
			this.calcMagnifyAreaSize();
			this.calcMagnifyAreaPos( e );
			this.calcMagnifyPictSize();
			this.calcMagnifyPictPos();
			this.setMagnifyAreaParams( true );
			this.setMagnifyPictParams( true );
			this.setMagnifierParams( true );
			BX.bind( document, 'mousemove', BX.proxy( this.moveMagnifierArea, this ) );
		}
	};

	window.JCCatalogElement.prototype.hideMagnifier = function() {
		if( !this.magnify.magnifyShow )
		{
			if( !!this.magnify.obMagnifier )
			{
				BX.adjust( this.magnify.obMagnifier, { style: { display: 'none' } } );
			}
			if( !!this.magnify.obMagnifyArea )
			{
				BX.adjust( this.magnify.obMagnifyArea, { style: { display: 'none' } } );
			}
			BX.unbind( document, 'mousemove', BX.proxy( this.moveMagnifierArea, this ) );
		}
	};

	window.JCCatalogElement.prototype.moveMagnifierArea = function( e ) {
		var
			currentPos = {
				X: 0,
				Y: 0
			},
			posBigImg = BX.pos( this.obPict ),
			intersect = {},
			params = {},
			paramsPict = {};

		currentPos = this.inRect( e, posBigImg );
		if( this.inBound( posBigImg, currentPos ) )
		{
			intersect = this.intersectArea( currentPos, posBigImg );
			switch( intersect.X )
			{
				case -1:
					this.magnify.areaParams.left = this.currentImg.screenOffsetX;
					break;
				case 0:
					this.magnify.areaParams.left = this.currentImg.screenOffsetX + currentPos.X - (this.magnify.areaParams.width >>> 1);
					break;
				case 1:
					this.magnify.areaParams.left = this.currentImg.screenOffsetX + posBigImg.width - this.magnify.areaParams.width;
					break;
			}
			switch( intersect.Y )
			{
				case -1:
					this.magnify.areaParams.top = 0;
					break;
				case 0:
					this.magnify.areaParams.top = currentPos.Y - (this.magnify.areaParams.height >>> 1);
					break;
				case 1:
					this.magnify.areaParams.top = posBigImg.height - this.magnify.areaParams.height;
					break;
			}
			this.magnify.magnifyPictParams.marginLeft = -parseInt( ((this.magnify.areaParams.left - this.currentImg.screenOffsetX) * this.currentImg.scale), 10 );
			this.magnify.magnifyPictParams.marginTop = -parseInt( ((this.magnify.areaParams.top) * this.currentImg.scale), 10 );
			params.left = this.magnify.areaParams.left + 'px';
			params.top = this.magnify.areaParams.top + 'px';
			BX.adjust( this.magnify.obMagnifyArea, { style: params } );
			paramsPict.marginLeft = this.magnify.magnifyPictParams.marginLeft + 'px';
			paramsPict.marginTop = this.magnify.magnifyPictParams.marginTop + 'px';
			BX.adjust( this.magnify.obMagnifyPict, { style: paramsPict } );
		}
		else
		{
			this.outMagnifierArea();
			this.hideMagnifier();
		}
	};

	window.JCCatalogElement.prototype.onMagnifierArea = function() {
		this.magnify.magnifyShow = true;
	};

	window.JCCatalogElement.prototype.outMagnifierArea = function() {
		this.magnify.magnifyShow = false;
	};

	window.JCCatalogElement.prototype.calcMagnifierParams = function() {
		if( !!this.magnify.obBigImg )
		{
			var pos = BX.pos( this.magnify.obBigImg, true );

			this.magnify.magnifierParams.width = pos.width;
			this.magnify.magnifierParams.height = pos.height;
			this.magnify.magnifierParams.top = pos.top;
			this.magnify.magnifierParams.left = pos.left + pos.width + 2;
		}
	};

	window.JCCatalogElement.prototype.setMagnifierParams = function( show ) {
		if( !!this.magnify.obMagnifier )
		{
			show = !!show;
			var params = {
				top: this.magnify.magnifierParams.top + 'px',
				left: this.magnify.magnifierParams.left + 'px',
				width: this.magnify.magnifierParams.width + 'px',
				height: this.magnify.magnifierParams.height + 'px'
			};
			if( show )
			{
				params.display = '';
			}
			BX.adjust( this.magnify.obMagnifier, { style: params } );
		}
	};

	window.JCCatalogElement.prototype.setMagnifyAreaParams = function( show ) {
		if( !!this.magnify.obMagnifier )
		{
			show = !!show;
			var params = {
				top: this.magnify.areaParams.top + 'px',
				left: this.magnify.areaParams.left + 'px',
				width: this.magnify.areaParams.width + 'px',
				height: this.magnify.areaParams.height + 'px'
			};
			if( show )
			{
				params.display = '';
			}
			BX.adjust( this.magnify.obMagnifyArea, { style: params } );
		}
	};

	window.JCCatalogElement.prototype.calcMagnifyAreaPos = function( e ) {
		var currentPos,
			posBigImg,
			intersect;

		posBigImg = BX.pos( this.obPict );
		currentPos = this.inRect( e, posBigImg );
		if( this.inBound( posBigImg, currentPos ) )
		{
			intersect = this.intersectArea( currentPos, posBigImg );
			switch( intersect.X )
			{
				case -1:
					this.magnify.areaParams.left = this.currentImg.screenOffsetX;
					break;
				case 0:
					this.magnify.areaParams.left = this.currentImg.screenOffsetX + currentPos.X - (this.magnify.areaParams.width >>> 1);
					break;
				case 1:
					this.magnify.areaParams.left = this.currentImg.screenOffsetX + posBigImg.width - this.magnify.areaParams.width;
					break;
			}
			switch( intersect.Y )
			{
				case -1:
					this.magnify.areaParams.top = 0;
					break;
				case 0:
					this.magnify.areaParams.top = currentPos.Y - (this.magnify.areaParams.height >>> 1);
					break;
				case 1:
					this.magnify.areaParams.top = posBigImg.height - this.magnify.areaParams.height;
					break;
			}
		}
	};

	window.JCCatalogElement.prototype.inBound = function( rect, point ) {
		return ((0 <= point.Y && rect.height >= point.Y) && (0 <= point.X && rect.width >= point.X));
	};

	window.JCCatalogElement.prototype.inRect = function( e, rect ) {
		var wndSize = BX.GetWindowSize(),
			currentPos = {
				X: 0,
				Y: 0,
				globalX: 0,
				globalY: 0
			};

		currentPos.globalX = e.clientX + wndSize.scrollLeft;
		currentPos.X = currentPos.globalX - rect.left;
		currentPos.globalY = e.clientY + wndSize.scrollTop;
		currentPos.Y = currentPos.globalY - rect.top;
		return currentPos;
	};

	window.JCCatalogElement.prototype.intersectArea = function( currentPos, rect ) {
		var intersect = {
				X: 0,
				Y: 0
			},
			halfX = this.magnify.areaParams.width >>> 1,
			halfY = this.magnify.areaParams.height >>> 1;

		if( currentPos.X <= halfX )
		{
			intersect.X = -1;
		}
		else if( currentPos.X >= (rect.width - halfX) )
		{
			intersect.X = 1;
		}
		else
		{
			intersect.X = 0;
		}
		if( currentPos.Y <= halfY )
		{
			intersect.Y = -1;
		}
		else if( currentPos.Y >= (rect.height - halfY) )
		{
			intersect.Y = 1;
		}
		else
		{
			intersect.Y = 0;
		}

		return intersect;
	};

	window.JCCatalogElement.prototype.calcMagnifyAreaSize = function() {
		var scaleX,
			scaleY,
			scale;

		if(
			this.magnify.magnifierParams.width < this.currentImg.width &&
			this.magnify.magnifierParams.height < this.currentImg.height
		)
		{
			scaleX = this.magnify.obBigImg.offsetWidth / this.currentImg.width;
			scaleY = this.magnify.obBigImg.offsetHeight / this.currentImg.height;
			scale = Math.min( scaleX, scaleY );
			this.currentImg.scale = 1 / scale;
			this.magnify.areaParams.width = Math.max( 1, parseInt( scale * this.magnify.magnifierParams.width, 10 ) );
			this.magnify.areaParams.height = Math.max( 1, parseInt( scale * this.magnify.magnifierParams.height, 10 ) );
			this.magnify.areaParams.scaleFactor = this.magnify.magnifierParams.defaultScale;
		}
		else
		{
			scaleX = this.obPict.offsetWidth / this.magnify.obBigImg.offsetWidth;
			scaleY = this.obPict.offsetHeight / this.magnify.obBigImg.offsetHeight;
			scale = Math.min( scaleX, scaleY );
			this.currentImg.scale = 1 / scale;
			this.magnify.areaParams.width = Math.max( 1, parseInt( scale * this.magnify.magnifierParams.width, 10 ) );
			this.magnify.areaParams.height = Math.max( 1, parseInt( scale * this.magnify.magnifierParams.height, 10 ) );

			scaleX = this.magnify.magnifierParams.width / this.currentImg.width;
			scaleY = this.magnify.magnifierParams.height / this.currentImg.height;
			scale = Math.max( scaleX, scaleY );
			this.magnify.areaParams.scaleFactor = scale;
		}
	};

	window.JCCatalogElement.prototype.calcMagnifyPictSize = function() {
		this.magnify.magnifyPictParams.width = this.currentImg.width * this.magnify.areaParams.scaleFactor;
		this.magnify.magnifyPictParams.height = this.currentImg.height * this.magnify.areaParams.scaleFactor;
	};

	window.JCCatalogElement.prototype.calcMagnifyPictPos = function() {
		this.magnify.magnifyPictParams.marginLeft = -parseInt( ((this.magnify.areaParams.left - this.currentImg.screenOffsetX) * this.currentImg.scale), 10 );
		this.magnify.magnifyPictParams.marginTop = -parseInt( ((this.magnify.areaParams.top) * this.currentImg.scale), 10 );
	};

	window.JCCatalogElement.prototype.setMagnifyPictParams = function( show ) {
		if( !!this.magnify.obMagnifier )
		{
			show = !!show;
			var params = {
				width: this.magnify.magnifyPictParams.width + 'px',
				height: this.magnify.magnifyPictParams.height + 'px',
				marginTop: this.magnify.magnifyPictParams.marginTop + 'px',
				marginLeft: this.magnify.magnifyPictParams.marginLeft + 'px'
			};
			if( show )
			{
				params.display = '';
			}
			BX.adjust( this.magnify.obMagnifyPict, { style: params, props: { src: this.currentImg.src } } );
		}
	};

	window.JCCatalogElement.prototype.ProductSliderRowLeft = function() {
		var target = BX.proxy_context;
		if( !!target )
		{
			if( this.sliderRowShowSize < this.product.slider.COUNT )
			{
				if( 0 > this.product.slider.START )
				{
					this.product.slider.START++;
					BX.adjust( this.product.slider.LIST, { style: { marginLeft: this.product.slider.START * 20 + '%' } } );
					BX.adjust( this.product.slider.RIGHT, { style: this.sliderEnableArrow } );
				}

				if( 0 <= this.product.slider.START )
				{
					BX.adjust( this.product.slider.LEFT, { style: this.sliderDisableArrow } );
				}
			}
		}
	};

	window.JCCatalogElement.prototype.ProductSliderRowRight = function() {
		var target = BX.proxy_context;
		if( !!target )
		{
			if( this.sliderRowShowSize < this.product.slider.COUNT )
			{
				if( (this.sliderRowShowSize - this.product.slider.START) < this.product.slider.COUNT )
				{
					this.product.slider.START--;
					BX.adjust( this.product.slider.LIST, { style: { marginLeft: this.product.slider.START * 20 + '%' } } );
					BX.adjust( this.product.slider.LEFT, { style: this.sliderEnableArrow } );
				}

				if( (this.sliderRowShowSize - this.product.slider.START) >= this.product.slider.COUNT )
				{
					BX.adjust( this.product.slider.RIGHT, { style: this.sliderDisableArrow } );
				}
			}
		}
	};

	window.JCCatalogElement.prototype.ProductSelectSliderImg = function() {
		var strValue = '',
			target = BX.proxy_context;
		if( !!target && target.hasAttribute( 'data-value' ) )
		{
			strValue = target.getAttribute( 'data-value' );
			this.SetProductMainPict( strValue );
		}
	};

	window.JCCatalogElement.prototype.SetProductMainPict = function( intPict ) {
		var indexPict = -1,
			i = 0,
			j = 0,
			value = '',
			strValue = '',
			RowItems = null;
		if( 0 < this.product.sliderCount )
		{
			for( j = 0; j < this.product.sliderPict.length; j++ )
			{
				if( intPict === this.product.sliderPict[ j ].ID )
				{
					indexPict = j;
					break;
				}
			}
			if( -1 < indexPict )
			{
				if( !!this.product.sliderPict[ indexPict ] )
				{
					this.setCurrentImg( this.product.sliderPict[ indexPict ], true );
				}
				RowItems = BX.findChildren( this.product.slider.LIST, { tagName: 'li' }, false );
				if( !!RowItems && 0 < RowItems.length )
				{
					strValue = intPict;
					for( i = 0; i < RowItems.length; i++ )
					{
						value = RowItems[ i ].getAttribute( 'data-value' );
						if( value === strValue )
						{
							BX.addClass( RowItems[ i ], 'active' );
						}
						else
						{
							BX.removeClass( RowItems[ i ], 'active' );
						}
					}
				}
			}
		}
	};

	window.JCCatalogElement.prototype.SliderRowLeft = function() {
		var strValue = '',
			index = -1,
			i,
			target = BX.proxy_context;
		if( !!target && target.hasAttribute( 'data-value' ) )
		{
			strValue = target.getAttribute( 'data-value' );
			for( i = 0; i < this.sliders.length; i++ )
			{
				if( this.sliders[ i ].OFFER_ID === strValue )
				{
					index = i;
					break;
				}
			}
			if( -1 < index && this.sliderRowShowSize < this.sliders[ index ].COUNT )
			{
				if( 0 > this.sliders[ index ].START )
				{
					this.sliders[ index ].START++;
					BX.adjust( this.sliders[ index ].LIST, { style: { marginLeft: this.sliders[ index ].START * 20 + '%' } } );
					BX.adjust( this.sliders[ index ].RIGHT, { style: this.sliderEnableArrow } );
				}

				if( 0 <= this.sliders[ index ].START )
				{
					BX.adjust( this.sliders[ index ].LEFT, { style: this.sliderDisableArrow } );
				}
			}
		}
	};

	window.JCCatalogElement.prototype.SliderRowRight = function() {
		var strValue = '',
			index = -1,
			i,
			target = BX.proxy_context;
		if( !!target && target.hasAttribute( 'data-value' ) )
		{
			strValue = target.getAttribute( 'data-value' );
			for( i = 0; i < this.sliders.length; i++ )
			{
				if( this.sliders[ i ].OFFER_ID === strValue )
				{
					index = i;
					break;
				}
			}
			if( -1 < index && this.sliderRowShowSize < this.sliders[ index ].COUNT )
			{
				if( (this.sliderRowShowSize - this.sliders[ index ].START) < this.sliders[ index ].COUNT )
				{
					this.sliders[ index ].START--;
					BX.adjust( this.sliders[ index ].LIST, { style: { marginLeft: this.sliders[ index ].START * 20 + '%' } } );
					BX.adjust( this.sliders[ index ].LEFT, { style: this.sliderEnableArrow } );
				}

				if( (this.sliderRowShowSize - this.sliders[ index ].START) >= this.sliders[ index ].COUNT )
				{
					BX.adjust( this.sliders[ index ].RIGHT, { style: this.sliderDisableArrow } );
				}
			}
		}
	};

	window.JCCatalogElement.prototype.SelectSliderImg = function() {
		var strValue = '',
			arItem = [],
			target = BX.proxy_context;
		if( !!target && target.hasAttribute( 'data-value' ) )
		{
			strValue = target.getAttribute( 'data-value' );
			arItem = strValue.split( '_' );
			this.SetMainPict( arItem[ 0 ], arItem[ 1 ] );
		}
	};

	window.JCCatalogElement.prototype.SetMainPict = function( intSlider, intPict ) {
		var index = -1,
			indexPict = -1,
			i,
			j,
			value = '',
			RowItems = null,
			strValue = '';

		for( i = 0; i < this.offers.length; i++ )
		{
			if( intSlider === this.offers[ i ].ID )
			{
				index = i;
				break;
			}
		}

		// $(window).resize();
		$( '.thumbs_navigation ul' ).addClass( 'hidden_block' );
		if( this.SliderImages > 1 )
		{
			$( '.thumbs_navigation ul:eq(' + index + ')' ).removeClass( 'hidden_block' );
		}
		$( '.thumbs_navigation' ).removeClass( 'hidden_block' );

		$( '.fancy_offer' ).addClass( 'hidden_block' );
		$( this.obPict ).closest( '.offers_img' ).css( 'opacity', 0 );

		if( -1 < index )
		{
			if( 0 < this.offers[ index ].SLIDER_COUNT )
			{
				for( j = 0; j < this.offers[ index ].SLIDER.length; j++ )
				{
					if( intPict === this.offers[ index ].SLIDER[ j ].ID )
					{
						indexPict = j;
						break;
					}
				}
				if( -1 < indexPict )
				{
					if( !!this.offers[ index ].SLIDER[ indexPict ] )
					{
						this.setCurrentImg( this.offers[ index ].SLIDER[ indexPict ], true );
					}

					RowItems = BX.findChildren( this.sliders[ index ].LIST, { tagName: 'li' }, false );
					if( !!RowItems && 0 < RowItems.length )
					{
						strValue = intSlider + '_' + intPict;
						for( i = 0; i < RowItems.length; i++ )
						{
							value = RowItems[ i ].getAttribute( 'data-value' );
							if( value === strValue )
							{
								BX.addClass( RowItems[ i ], 'current' );
							}
							else
							{
								BX.removeClass( RowItems[ i ], 'current' );
							}
						}
					}
				}
			}
		}
		setTimeout( function() {
			$( '.fancy_offer' ).removeClass( 'hidden_block' );
			$( '.offers_img' ).css( 'opacity', 1 );
		}, 200 );
	};

	window.JCCatalogElement.prototype.SetMainPictFromItem = function( index ) {
		if( !!this.obPict )
		{
			var boolSet = false,
				obNewPict = {};

			if( !!this.offers[ index ] )
			{
				if( !!this.offers[ index ].DETAIL_PICTURE )
				{
					obNewPict = this.offers[ index ].DETAIL_PICTURE;
					boolSet = true;
				}
				else if( !!this.offers[ index ].PREVIEW_PICTURE )
				{
					obNewPict = this.offers[ index ].PREVIEW_PICTURE;
					boolSet = true;
				}
			}
			if( !boolSet )
			{
				if( !!this.defaultPict.detail )
				{
					obNewPict = this.defaultPict.detail;
					boolSet = true;
				}
				else if( !!this.defaultPict.preview )
				{
					obNewPict = this.defaultPict.preview;
					boolSet = true;
				}
			}
			if( boolSet )
			{
				this.setCurrentImg( obNewPict, true );
			}
		}
	};

	window.JCCatalogElement.prototype.SetAdditionalGallery = function( index ) {
		var $gallery = $( '.additional-gallery' );
		if( $gallery.length )
		{
			var bHidden = $gallery.hasClass( 'hidden' ),
				bigGallery = $gallery.find( '.big-gallery-block .owl-carousel' ),
				smallGallery = $gallery.find( '.small-gallery-block .row' ),
				slideBigHtml = slideSmallHtml = '';

			if( this.offers[ index ].ADDITIONAL_GALLERY.length )
			{
				if( bHidden )
					$gallery.removeClass( 'hidden' );

				$gallery.find( '.switch-item-block .switch-item-block__count-wrapper--small .switch-item-block__count-value' )
					.text( this.offers[ index ].ADDITIONAL_GALLERY.length )
				$gallery.find( '.switch-item-block .switch-item-block__count-wrapper--big .switch-item-block__count-value' )
					.text( 1 + '/' + this.offers[ index ].ADDITIONAL_GALLERY.length )

				for( var i in this.offers[ index ].ADDITIONAL_GALLERY )
				{
					if( typeof (this.offers[ index ].ADDITIONAL_GALLERY[ i ]) == 'object' )
					{
						slideBigHtml += '<div class="item">' +
							'<a href="' + this.offers[ index ].ADDITIONAL_GALLERY[ i ].DETAIL.SRC + '" data-fancybox="big-gallery" class="fancy"><img class="picture" border="0" src="' + this.offers[ index ].ADDITIONAL_GALLERY[ i ].PREVIEW.src + '" alt="' + this.offers[ index ].ADDITIONAL_GALLERY[ i ].ALT + '" title="' + this.offers[ index ].ADDITIONAL_GALLERY[ i ].TITLE + '" /></a>' +
							'</div>';

						slideSmallHtml += '<div class="col-md-3"><div class="item">' +
							'<a href="' + this.offers[ index ].ADDITIONAL_GALLERY[ i ].DETAIL.SRC + '" data-fancybox="small-gallery" class="fancy"><img class="picture" border="0" src="' + this.offers[ index ].ADDITIONAL_GALLERY[ i ].PREVIEW.src + '" alt="' + this.offers[ index ].ADDITIONAL_GALLERY[ i ].ALT + '" title="' + this.offers[ index ].ADDITIONAL_GALLERY[ i ].TITLE + '" /></a>' +
							'</div></div>';
					}
				}

				bigGallery.html( slideBigHtml );
				smallGallery.html( slideSmallHtml );

				if( bigGallery.data( 'owl.carousel' ) !== undefined )
					bigGallery.data( 'owl.carousel' ).destroy();

				InitOwlSlider();
				InitFancyBox();
			}
			else
			{
				$gallery.addClass( 'hidden' );
			}
		}
	};

	window.JCCatalogElement.prototype.showMainPictPopup = function( e ) {
		var pictContent = '';

		pictContent = '<div style="text-align: center;"><img src="' +
			this.currentImg.src +
			'" width="' + this.currentImg.width + '" height="' + this.currentImg.height + '" name=""></div>';
		this.obPopupPict.setContent( pictContent );
		this.obPopupPict.show();
		return BX.PreventDefault( e );
	};

	window.JCCatalogElement.prototype.QuantityUp = function() {
		var curValue = 0,
			boolSet = true,
			calcPrice;

		if( 0 === this.errorCode && this.config.showQuantity && this.canBuy )
		{
			curValue = (this.isDblQuantity ? parseFloat( this.obQuantity.value ) : parseInt( this.obQuantity.value, 10 ));
			if( !isNaN( curValue ) )
			{
				curValue += this.stepQuantity;
				if( this.checkQuantity )
				{
					if( curValue > this.maxQuantity )
					{
						boolSet = false;
					}
				}

				if( boolSet )
				{
					if( this.isDblQuantity )
					{
						curValue = Math.round( curValue * this.precisionFactor ) / this.precisionFactor;
					}
					this.obQuantity.value = curValue;
				}
			}
		}
	};

	window.JCCatalogElement.prototype.QuantityDown = function() {
		var curValue = 0,
			boolSet = true,
			calcPrice;

		if( 0 === this.errorCode && this.config.showQuantity && this.canBuy )
		{
			curValue = (this.isDblQuantity ? parseFloat( this.obQuantity.value ) : parseInt( this.obQuantity.value, 10 ));
			if( !isNaN( curValue ) )
			{
				curValue -= this.stepQuantity;
				if( curValue < this.stepQuantity )
				{
					boolSet = false;
				}
				if( boolSet )
				{
					if( this.isDblQuantity )
					{
						curValue = Math.round( curValue * this.precisionFactor ) / this.precisionFactor;
					}
					this.obQuantity.value = curValue;
				}
			}
		}
	};

	window.JCCatalogElement.prototype.QuantityChange = function() {
		var curValue = 0,
			calcPrice,
			intCount,
			count;

		if( 0 === this.errorCode && this.config.showQuantity )
		{
			if( this.canBuy )
			{
				curValue = (this.isDblQuantity ? parseFloat( this.obQuantity.value ) : parseInt( this.obQuantity.value, 10 ));
				if( !isNaN( curValue ) )
				{
					if( this.checkQuantity )
					{
						if( curValue > this.maxQuantity )
						{
							curValue = this.maxQuantity;
						}
					}
					if( curValue < this.stepQuantity )
					{
						curValue = this.stepQuantity;
					}
					else
					{
						count = Math.round( (curValue * this.precisionFactor) / this.stepQuantity ) / this.precisionFactor;
						intCount = parseInt( count, 10 );
						if( isNaN( intCount ) )
						{
							intCount = 1;
							count = 1.1;
						}
						if( count > intCount )
						{
							curValue = (intCount <= 1 ? this.stepQuantity : intCount * this.stepQuantity);
							curValue = Math.round( curValue * this.precisionFactor ) / this.precisionFactor;
						}
					}
					this.obQuantity.value = curValue;
				}
				else
				{
					this.obQuantity.value = this.stepQuantity;
				}
			}
			else
			{
				this.obQuantity.value = this.stepQuantity;
			}
		}
	};

	window.JCCatalogElement.prototype.QuantitySet = function( index ) {
		var basisPrice = '',
			strLimit;
		if( this.errorCode === 0 )
		{
			this.canBuy = this.offers[ index ].CAN_BUY;

			this.currentPriceMode = this.offers[ index ].ITEM_PRICE_MODE;
			this.currentPrices = this.offers[ index ].ITEM_PRICES;
			this.currentPriceSelected = this.offers[ index ].ITEM_PRICE_SELECTED;
			this.currentQuantityRanges = this.offers[ index ].ITEM_QUANTITY_RANGES;
			this.currentQuantityRangeSelected = this.offers[ index ].ITEM_QUANTITY_RANGE_SELECTED;

			if( this.canBuy )
			{
				if( !!this.obBasketActions )
				{
					BX.style( this.obBasketActions, 'display', '' );
				}
				if( !!this.obNotAvail )
				{
					BX.style( this.obNotAvail, 'display', 'none' );
				}
			}
			else
			{
				if( !!this.obBasketActions )
				{
					//BX.style(this.obBasketActions, 'display', 'none');
					BX.style( this.obBasketActions, 'opacity', '0' );
					BX.style( BX.findParent( BX( this.obQuantity ), { 'class': 'counter_block' } ), 'display', 'none' );
				}
				if( !!this.obNotAvail )
				{
					BX.style( this.obNotAvail, 'display', '' );
				}
			}
			if( this.config.showQuantity )
			{
				this.isDblQuantity = this.offers[ index ].QUANTITY_FLOAT;
				this.checkQuantity = this.offers[ index ].CHECK_QUANTITY;
				if( this.isDblQuantity )
				{
					this.maxQuantity = parseFloat( this.offers[ index ].MAX_QUANTITY );
					this.stepQuantity = Math.round( parseFloat( this.offers[ index ].STEP_QUANTITY ) * this.precisionFactor ) / this.precisionFactor;
				}
				else
				{
					this.maxQuantity = parseInt( this.offers[ index ].MAX_QUANTITY, 10 );
					this.stepQuantity = parseInt( this.offers[ index ].STEP_QUANTITY, 10 );
				}
				/*this.obQuantity.value = this.stepQuantity;
			this.obQuantity.disabled = !this.canBuy;*/
				if( !!this.obMeasure )
				{
					if( !!this.offers[ index ].MEASURE )
					{
						BX.adjust( this.obMeasure, { html: this.offers[ index ].MEASURE } );
					}
					else
					{
						BX.adjust( this.obMeasure, { html: '' } );
					}
				}
				if( !!this.obQuantityLimit.all )
				{
					if( !this.checkQuantity )
					{
						BX.adjust( this.obQuantityLimit.value, { html: '' } );
						BX.adjust( this.obQuantityLimit.all, { style: { display: 'none' } } );
					}
					else
					{
						strLimit = this.offers[ index ].MAX_QUANTITY;
						if( !!this.offers[ index ].MEASURE )
						{
							strLimit += (' ' + this.offers[ index ].MEASURE);
						}
						BX.adjust( this.obQuantityLimit.value, { html: strLimit } );
						BX.adjust( this.obQuantityLimit.all, { style: { display: '' } } );
					}
				}
				if( !!this.obBasisPrice )
				{
					if( !!this.offers[ index ].BASIS_PRICE )
					{
						basisPrice = BX.message( 'BASIS_PRICE_MESSAGE' );
						basisPrice = basisPrice.replace(
							'#PRICE#',
							BX.Currency.currencyFormat( this.offers[ index ].BASIS_PRICE.DISCOUNT_VALUE, this.offers[ index ].BASIS_PRICE.CURRENCY, true )
						);
						basisPrice = basisPrice.replace( '#MEASURE#', this.offers[ index ].MEASURE );
						BX.adjust( this.obBasisPrice, { style: { display: '' }, html: basisPrice } );
					}
					else
					{
						BX.adjust( this.obBasisPrice, { style: { display: 'none' }, html: '' } );
					}
				}
			}
			this.currentBasisPrice = this.offers[ index ].BASIS_PRICE;
		}
	};

	window.JCCatalogElement.prototype.SelectOfferProp = function() {
		var i = 0,
			strTreeValue = '',
			arTreeItem = [],
			RowItems = null,
			target = BX.proxy_context;
		if( typeof target.options !== 'undefined' && typeof target.options[ target.selectedIndex ] !== 'undefined' )
			target = target.options[ target.selectedIndex ];
		if( !!target && target.hasAttribute( 'data-treevalue' ) )
		{
			strTreeValue = target.getAttribute( 'data-treevalue' );
			propModes = target.getAttribute( 'data-showtype' );
			arTreeItem = strTreeValue.split( '_' );

			this.SearchOfferPropIndex( arTreeItem[ 0 ], arTreeItem[ 1 ], arTreeItem[ 1 ] );
			RowItems = BX.findChildren( target.parentNode, { tagName: this.skuVisualParams[ propModes.toUpperCase() ].TAG }, false );
			if( !!RowItems && 0 < RowItems.length )
			{
				for( i = 0; i < RowItems.length; i++ )
				{
					value = RowItems[ i ].getAttribute( 'data-onevalue' );

					// for SELECTBOXES
					if( propModes == 'TEXT' )
					{
						if( value === arTreeItem[ 1 ] )
						{
							RowItems[ i ].setAttribute( 'selected', 'selected' );
						}
						else
						{
							RowItems[ i ].removeAttribute( 'selected' );
						}
					}
					else
					{
						if( value === arTreeItem[ 1 ] )
						{
							$( RowItems[ i ] ).addClass( this.skuVisualParams[ propModes.toUpperCase() ].ACTIVE_CLASS );
						}
						else
						{
							$( RowItems[ i ] )
								.removeClass( this.skuVisualParams[ propModes.toUpperCase() ].ACTIVE_CLASS );
						}
					}
				}
			}
		}
	};

	window.JCCatalogElement.prototype.SearchOfferPropIndex = function( strPropID, strPropValue, idOffer ) {
		var strName = '',
			arShowValues = false,
			arCanBuyValues = [],
			allValues = [],
			index = -1,
			i, j,
			arFilter = {},
			tmpFilter = [];

		if( !idOffer )
		{
			for( i = 0; i < this.treeProps.length; i++ )
			{
				if( this.treeProps[ i ].ID === strPropID )
				{
					index = i;
					break;
				}
			}
			if( -1 < index )
			{
				for( i = 0; i < index; i++ )
				{
					strName = 'PROP_' + this.treeProps[ i ].ID;
					arFilter[ strName ] = this.selectedValues[ strName ];
				}
				strName = 'PROP_' + this.treeProps[ index ].ID;
				arFilter[ strName ] = strPropValue;

				for( i = index + 1; i < this.treeProps.length; i++ )
				{
					strName = 'PROP_' + this.treeProps[ i ].ID;
					arShowValues = this.GetRowValues( arFilter, strName );

					if( !arShowValues )
					{
						break;
					}
					allValues = [];
					if( this.config.showAbsent )
					{
						arCanBuyValues = [];
						tmpFilter = [];
						tmpFilter = BX.clone( arFilter, true );
						for( j = 0; j < arShowValues.length; j++ )
						{
							tmpFilter[ strName ] = arShowValues[ j ];
							allValues[ allValues.length ] = arShowValues[ j ];
							if( this.GetCanBuy( tmpFilter ) )
							{
								arCanBuyValues[ arCanBuyValues.length ] = arShowValues[ j ];
							}
						}
					}
					else
					{
						arCanBuyValues = arShowValues;
					}

					if( this.selectedValues[ strName ] && BX.util.in_array( this.selectedValues[ strName ], arCanBuyValues ) )
					{
						arFilter[ strName ] = this.selectedValues[ strName ];
					}
					else
					{
						if( this.config.showAbsent )
						{
							arFilter[ strName ] = (arCanBuyValues.length ? arCanBuyValues[ 0 ] : allValues[ 0 ]);
						}
						else
						{
							arFilter[ strName ] = arCanBuyValues[ 0 ];
						}
					}

					this.UpdateRow( i, arFilter[ strName ], arShowValues, arCanBuyValues );
				}
				this.selectedValues = arFilter;

				this.ChangeInfo();
			}
		}
		else
		{
			var $this = this;
			$.each( $this.offers, function( index, value ) {
				if( value.ID === idOffer )
				{
					$this.curOfferIndex = index;
					$this.ChangeInfo();
				}
			} );
		}
	};

	window.JCCatalogElement.prototype.RowLeft = function() {
		var strTreeValue = '',
			index = -1,
			i,
			target = BX.proxy_context;
		if( !!target && target.hasAttribute( 'data-treevalue' ) )
		{
			strTreeValue = target.getAttribute( 'data-treevalue' );
			for( i = 0; i < this.treeProps.length; i++ )
			{
				if( this.treeProps[ i ].ID === strTreeValue )
				{
					index = i;
					break;
				}
			}
			if( -1 < index && this.treeRowShowSize < this.showCount[ index ] )
			{
				if( 0 > this.showStart[ index ] )
				{
					this.showStart[ index ]++;
					BX.adjust( this.obTreeRows[ index ].LIST, { style: { marginLeft: this.showStart[ index ] * 20 + '%' } } );
					//BX.adjust(this.obTreeRows[index].RIGHT, { style: this.treeEnableArrow });
				}

				/*if (0 <= this.showStart[index])
			{
				BX.adjust(this.obTreeRows[index].LEFT, { style: this.treeDisableArrow });
			}*/
			}
		}
	};

	window.JCCatalogElement.prototype.RowRight = function() {
		var strTreeValue = '',
			index = -1,
			i,
			target = BX.proxy_context;
		if( !!target && target.hasAttribute( 'data-treevalue' ) )
		{
			strTreeValue = target.getAttribute( 'data-treevalue' );
			for( i = 0; i < this.treeProps.length; i++ )
			{
				if( this.treeProps[ i ].ID === strTreeValue )
				{
					index = i;
					break;
				}
			}
			if( -1 < index && this.treeRowShowSize < this.showCount[ index ] )
			{
				if( (this.treeRowShowSize - this.showStart[ index ]) < this.showCount[ index ] )
				{
					this.showStart[ index ]--;
					BX.adjust( this.obTreeRows[ index ].LIST, { style: { marginLeft: this.showStart[ index ] * 20 + '%' } } );
					//BX.adjust(this.obTreeRows[index].LEFT, { style: this.treeEnableArrow });
				}

				/*if ((this.treeRowShowSize - this.showStart[index]) >= this.showCount[index])
			{
				BX.adjust(this.obTreeRows[index].RIGHT, { style: this.treeDisableArrow });
			}*/
			}
		}
	};

	window.JCCatalogElement.prototype.UpdateRowsImages = function() {
		if( typeof this.config.offerShowPreviewPictureProps === 'object' && this.config.offerShowPreviewPictureProps.length )
		{
			var currentTree = this.selectedValues;

			for( var i in this.obTreeRows )
			{
				if( BX.util.in_array( this.treeProps[ i ].CODE, this.config.offerShowPreviewPictureProps ) )
				{
					var RowItems = BX.findChildren( this.obTreeRows[ i ].LIST, { tagName: 'LI' }, false );
					if( !!RowItems && 0 < RowItems.length )
					{
						for( var j in RowItems )
						{
							var ImgItem = BX.findChild( RowItems[ j ], { className: 'cnt_item' }, true, false );
							if( ImgItem )
							{
								var value = RowItems[ j ].getAttribute( 'data-onevalue' );
								if( value != 0 )
								{
									var bgi = ImgItem.style.backgroundImage;
									var obgi = ImgItem.getAttribute( 'data-obgi' );
									if( !obgi )
									{
										obgi = bgi;
										ImgItem.setAttribute( 'data-obgi', obgi );
									}

									var boolOneSearch = false;
									var rowTree = BX.clone( currentTree, true );
									rowTree[ 'PROP_' + this.treeProps[ i ].ID ] = value;

									for( var m in this.offers )
									{
										boolOneSearch = true;
										for( var n in rowTree )
										{
											if( rowTree[ n ] !== this.offers[ m ].TREE[ n ] )
											{
												boolOneSearch = false;
												break;
											}
										}
										if( boolOneSearch )
										{
											if( typeof this.offers[ m ].PREVIEW_PICTURE === 'object' && this.offers[ m ].PREVIEW_PICTURE.SRC )
											{
												var newBgi = 'url("' + this.offers[ m ].PREVIEW_PICTURE.SRC + '")';
												if( bgi !== newBgi )
												{
													ImgItem.style.backgroundImage = newBgi;
													BX.addClass( ImgItem, 'pp' );
												}
											}
											else
											{
												boolOneSearch = false;
											}
											break;
										}
									}

									for( var m in this.offers )
									{
										if( rowTree[ 'PROP_' + this.treeProps[ i ].ID ] == this.offers[ m ].TREE[ 'PROP_' + this.treeProps[ i ].ID ] && !boolOneSearch )
										{
											if( typeof this.offers[ m ].PREVIEW_PICTURE === 'object' && this.offers[ m ].PREVIEW_PICTURE.SRC )
											{
												var newBgi = 'url("' + this.offers[ m ].PREVIEW_PICTURE.SRC + '")';
												ImgItem.style.backgroundImage = newBgi;
												BX.addClass( ImgItem, 'pp' );
												boolOneSearch = true;
											}
											break
										}
									}

									if( !boolOneSearch && obgi && bgi !== obgi )
									{
										ImgItem.style.backgroundImage = obgi;
										BX.removeClass( ImgItem, 'pp' );
									}
								}
							}
						}
					}
				}
			}
		}
	}

	window.JCCatalogElement.prototype.UpdateRow = function( intNumber, activeID, showID, canBuyID ) {
		var i = 0,
			showI = 0,
			value = '',
			countShow = 0,
			strNewLen = '',
			obData = {},
			obDataCont = {},
			RowItems = null,
			pictMode = false,
			extShowMode = false,
			isCurrent = false,
			selectIndex = 0,
			obLeft = this.treeEnableArrow,
			obRight = this.treeEnableArrow,
			currentShowStart = 0;

		if( -1 < intNumber && intNumber < this.obTreeRows.length )
		{
			propMode = this.treeProps[ intNumber ].DISPLAY_TYPE;
			RowItems = BX.findChildren( this.obTreeRows[ intNumber ].LIST, { tagName: this.skuVisualParams[ propMode ].TAG }, false );
			if( !!RowItems && 0 < RowItems.length )
			{
				selectMode = ('SELECT' === this.treeProps[ intNumber ].DISPLAY_TYPE);
				countShow = showID.length;
				obData = {
					style: {},
					props: {
						disabled: '',
						selected: '',
					},
				};
				obDataCont = {
					style: {},
				};

				for( i = 0; i < RowItems.length; i++ )
				{
					value = RowItems[ i ].getAttribute( 'data-onevalue' );
					isCurrent = (value === activeID);

					if( BX.util.in_array( value, canBuyID ) )
					{
						obData.props.className = (isCurrent ? this.skuVisualParams[ propMode ].ACTIVE_CLASS : '');

					}
					else
					{
						obData.props.className = (isCurrent ? this.skuVisualParams[ propMode ].ACTIVE_CLASS + ' ' + this.skuVisualParams[ propMode ].HIDE_CLASS : this.skuVisualParams[ propMode ].HIDE_CLASS);
						// obData.props.className = (isCurrent ? this.skuVisualParams[propMode].ACTIVE_CLASS : '');
					}

					if( selectMode )
					{
						obData.props.disabled = 'disabled';
						obData.props.selected = (isCurrent ? 'selected' : '');
					}
					else
					{
						obData.style.display = 'none';
					}

					if( BX.util.in_array( value, showID ) )
					{
						if( selectMode )
						{
							obData.props.disabled = '';
						}
						else
						{
							obData.style.display = '';
						}
						if( isCurrent )
						{
							selectIndex = showI;
						}
						if( value != 0 )
							showI++;
					}
					BX.adjust( RowItems[ i ], obData );
				}

				if( !showI )
					obDataCont.style.display = 'none';
				else
					obDataCont.style.display = '';
				BX.adjust( this.obTreeRows[ intNumber ].CONT, obDataCont );

				if( selectMode )
				{
					if( $( this.obTreeRows[ intNumber ].LIST ).parent().hasClass( 'ik_select' ) )
						$( this.obTreeRows[ intNumber ].LIST ).ikSelect( 'reset' );
				}

				this.showCount[ intNumber ] = countShow;
				this.showStart[ intNumber ] = currentShowStart;
			}
		}
	};

	window.JCCatalogElement.prototype.GetRowValues = function( arFilter, index ) {
		var arValues = [],
			i = 0,
			j = 0,
			boolSearch = false,
			boolOneSearch = true;

		if( 0 === arFilter.length )
		{
			for( i = 0; i < this.offers.length; i++ )
			{
				if( !BX.util.in_array( this.offers[ i ].TREE[ index ], arValues ) )
				{
					arValues[ arValues.length ] = this.offers[ i ].TREE[ index ];
				}
			}
			boolSearch = true;
		}
		else
		{
			for( i = 0; i < this.offers.length; i++ )
			{
				boolOneSearch = true;
				for( j in arFilter )
				{
					if( arFilter[ j ] !== this.offers[ i ].TREE[ j ] )
					{
						boolOneSearch = false;
						break;
					}
				}
				if( boolOneSearch )
				{
					if( !BX.util.in_array( this.offers[ i ].TREE[ index ], arValues ) )
					{
						arValues[ arValues.length ] = this.offers[ i ].TREE[ index ];
					}
					boolSearch = true;
				}
			}
		}
		return (boolSearch ? arValues : false);
	};

	window.JCCatalogElement.prototype.GetCanBuy = function( arFilter ) {
		var i = 0,
			j = 0,
			boolOneSearch = true,
			boolSearch = false;

		for( i = 0; i < this.offers.length; i++ )
		{
			boolOneSearch = true;
			for( j in arFilter )
			{
				if( arFilter[ j ] !== this.offers[ i ].TREE[ j ] )
				{
					boolOneSearch = false;
					break;
				}
			}
			if( boolOneSearch )
			{
				if( this.offers[ i ].CAN_BUY )
				{
					boolSearch = true;
					break;
				}
			}
		}
		return boolSearch;
	};

	window.JCCatalogElement.prototype.SetCurrent = function() {
		var i = 0,
			j = 0,
			strName = '',
			arShowValues = false,
			arCanBuyValues = [],
			arFilter = {},
			tmpFilter = [],
			current = this.offers[ this.offerNum ].TREE;

		for( i = 0; i < this.treeProps.length; i++ )
		{
			strName = 'PROP_' + this.treeProps[ i ].ID;
			arShowValues = this.GetRowValues( arFilter, strName );
			if( !arShowValues )
			{
				break;
			}
			if( BX.util.in_array( current[ strName ], arShowValues ) )
			{
				arFilter[ strName ] = current[ strName ];
			}
			else
			{
				arFilter[ strName ] = arShowValues[ 0 ];
				this.offerNum = 0;
			}
			if( this.config.showAbsent )
			{
				arCanBuyValues = [];
				tmpFilter = [];
				tmpFilter = BX.clone( arFilter, true );
				for( j = 0; j < arShowValues.length; j++ )
				{
					tmpFilter[ strName ] = arShowValues[ j ];
					if( this.GetCanBuy( tmpFilter ) )
					{
						arCanBuyValues[ arCanBuyValues.length ] = arShowValues[ j ];
					}
				}
			}
			else
			{
				arCanBuyValues = arShowValues;
			}

			this.UpdateRow( i, arFilter[ strName ], arShowValues, arCanBuyValues );
		}

		this.selectedValues = arFilter;
		this.ChangeInfo();
	};

	window.JCCatalogElement.prototype.ChangeInfo = function() {
		var index = -1,
			i = 0,
			j = 0,
			RowItems = null,
			boolOneSearch = true;

		if( this.curOfferIndex )
		{
			index = this.curOfferIndex;
			var cont = $( '#bx_size_list' );
			if( cont.find( 'li' ).length > 1 )
			{
				var size = cont.find( 'li[data-treevalue="size_' + this.offers[ this.curOfferIndex ].ID + '"] .cnt' ).html();
				cont.closest( '.bx_item_detail_size' ).find( '.bx_item_section_name .val' ).html( size );
			}
		}
		else
			for( i = 0; i < this.offers.length; i++ )
			{
				boolOneSearch = true;
				for( j in this.selectedValues )
				{
					if( this.selectedValues[ j ] !== this.offers[ i ].TREE[ j ] )
					{
						boolOneSearch = false;
						break;
					}
				}
				if( boolOneSearch )
				{
					index = i;
					break;
				}
			}

		if( this.treeProps )
		{
			for( var i in this.treeProps )
			{
				/*if(this.treeProps[i].SHOW_MODE == 'PICT')
			{*/
				var cont = $( '#' + this.visual.ID + '_prop_' + this.treeProps[ i ].ID + '_cont' ),
					color = cont.find( 'li[data-treevalue="' + this.treeProps[ i ].ID + '_' + this.selectedValues[ 'PROP_' + this.treeProps[ i ].ID ] + '"] i' )
						.attr( 'title' ),
					arColor = [];
				if( !color )
					color = cont.find( 'li[data-treevalue="' + this.treeProps[ i ].ID + '_' + this.selectedValues[ 'PROP_' + this.treeProps[ i ].ID ] + '"]' )
						.attr( 'title' );

				if( color )
					arColor = color.split( ':' );
				if( arColor.length == 2 )
				{
					arColor[ 1 ] = arColor[ 1 ].trim();
					var val = cont.find( '.bx_item_section_name .val' );
					if( val.length )
					{
						val.html( arColor[ 1 ] );
					}
					else
					{
						cont.find( '.bx_item_section_name' ).append( '<span class="val">' + arColor[ 1 ] + '</span>' );
					}
				}

				//}
			}
			this.UpdateRowsImages();
		}

		if( -1 < index )
		{
			for( i = 0; i < this.offers.length; i++ )
			{

				if( this.config.showOfferGroup && this.offers[ i ].OFFER_GROUP )
				{
					if( i !== index )
					{
						if( !!BX( this.visual.OFFER_GROUP + this.offers[ i ].ID ) )
							BX.adjust( BX( this.visual.OFFER_GROUP + this.offers[ i ].ID ), { style: { display: 'none' } } );
					}
				}
			}

			if( this.config.showOfferGroup && this.offers[ index ].OFFER_GROUP )
			{
				if( !!BX( this.visual.OFFER_GROUP + this.offers[ index ].ID ) )
					BX.adjust( BX( this.visual.OFFER_GROUP + this.offers[ index ].ID ), { style: { display: '' } } );
			}
			/*if (0 < this.offers[index].SLIDER_COUNT)
		{
			this.SetMainPict(this.offers[index].ID, this.offers[index].SLIDER[0].ID);
		}
		else
		{
			this.SetMainPictFromItem(index);
		}
		*/

			if( $( '.product-detail-gallery__slider' ).hasClass( 'owl-loaded' ) === false )
			{
				this.SetAdditionalGallery( index );

				/*set slider images start*/
				this.SetSliderPict( this.offers[ index ], this.offers[ index ].SLIDER, this.config );
				/*set slider images end*/
			}

			var bSideChar = ($( '.js-offers-props' ).length && !$( '.more-char-link' ).length),
				props = '';

			if( bSideChar )
				$( '.js-offers-props' ).empty();

			if( this.config.showSkuProps/* && !!this.obSkuProps*/ )
			{
				var html = '',
					display_type = this.offers[ index ].TYPE_PROP;

				if( display_type != "TABLE" )
					$( '.props_block .sku_block_prop' ).remove();

				if( !this.offers[ index ].DISPLAY_PROPERTIES || this.offers[ index ].DISPLAY_PROPERTIES.length === 0 )
				{
					if( !!this.obSkuProps )
					{
						if( display_type == "TABLE" )
							BX.adjust( this.obSkuProps, { style: { display: 'none' }, html: '' } );
						else
							$( this.obSkuProps ).find( '.sku_block_prop' ).remove();
					}

				}
				else
				{
					for( var i in this.offers[ index ].DISPLAY_PROPERTIES )
					{
						var class_block = ((this.offers[ index ].DISPLAY_PROPERTIES[ i ].HINT && this.offers[ index ].DISPLAY_PROPERTIES[ i ].SHOW_HINTS == "Y") ? ' whint1' : ''),
							hint_block = ((this.offers[ index ].DISPLAY_PROPERTIES[ i ].HINT && this.offers[ index ].DISPLAY_PROPERTIES[ i ].SHOW_HINTS == "Y") ? '<div class="hint"><span class="icon"><i>?</i></span><div class="tooltip">' + this.offers[ index ].DISPLAY_PROPERTIES[ i ].HINT + '</div></div>' : '');

						if( display_type == "TABLE" )
							html += '<tr><td class="char_name"><span class="' + class_block + '">' + hint_block + '<span>' + this.offers[ index ].DISPLAY_PROPERTIES[ i ].NAME + '</span></span></td><td class="char_value"><span>' + this.offers[ index ].DISPLAY_PROPERTIES[ i ].VALUE + '</span></td></tr>';
						else
						{
							html = '<div class="char sku_block_prop col-lg-3 col-md-4 col-xs-6 bordered"><div class="char_name muted"><span class="' + class_block + '">' + hint_block + '<span>' + this.offers[ index ].DISPLAY_PROPERTIES[ i ].NAME + '</span></span></div><div class="char_value darken"><span>' + this.offers[ index ].DISPLAY_PROPERTIES[ i ].VALUE + '</span></div></div>';

							if( !!this.obSkuProps )
								$( this.obSkuProps ).append( html );
						}

						if( bSideChar )
						{
							props = '<div class="properties__item properties__item--compact font_xs">' +
								'<div class="properties__title properties__item--inline muted">' + this.offers[ index ].DISPLAY_PROPERTIES[ i ].NAME + '</div>' +
								'<div class="properties__hr properties__item--inline muted">&mdash;</div>' +
								'<div class="properties__value properties__item--inline darken">' + this.offers[ index ].DISPLAY_PROPERTIES[ i ].VALUE + '</div>' +
								'</div>';
							$( '.js-offers-props' ).append( props );
						}
					}

					if( display_type == "TABLE" && !!this.obSkuProps )
						BX.adjust( this.obSkuProps, { style: { display: '' }, html: html } );
				}
			}
			if( this.config.showSkuProps && !!this.obSkuArticleProps )
			{
				if( 'DISPLAY_PROPERTIES_CODE' in this.offers[ index ] )
				{
					if( 'ARTICLE' in this.offers[ index ].DISPLAY_PROPERTIES_CODE )
					{
						if( this.offers[ index ].DISPLAY_PROPERTIES_CODE.ARTICLE.VALUE )
							BX.adjust( this.obSkuArticleProps, {
								style: { display: '' },
								html: this.offers[ index ].DISPLAY_PROPERTIES_CODE.ARTICLE.VALUE_FORMAT
							} );

					}
					else if( this.offers[ index ].SHOW_ARTICLE_SKU == 'Y' && this.offers[ index ].ARTICLE_SKU )
						BX.adjust( this.obSkuArticleProps, {
							style: { display: '' },
							html: this.offers[ index ].ARTICLE_SKU
						} );
					else
						BX.adjust( this.obSkuArticleProps, { style: { display: 'none' }, html: '' } );
				}
				else if( this.offers[ index ].SHOW_ARTICLE_SKU == 'Y' && this.offers[ index ].ARTICLE_SKU )
				{
					BX.adjust( this.obSkuArticleProps, {
						style: { display: '' },
						html: this.offers[ index ].ARTICLE_SKU
					} );
				}
				else
				{
					BX.adjust( this.obSkuArticleProps, { style: { display: 'none' }, html: '' } );
				}
			}

			if( this.config.SKU_DETAIL_ID )
			{
				setLocationSKU( this.offers[ index ].ID, this.config.SKU_DETAIL_ID );
			}

			$( this.obBasketActions ).closest( '.counter_wrapp' ).addClass( 'hidden_block' );

			this.offerNum = index;
			this.QuantitySet( this.offerNum );
			this.setStoreBlock( this.offers[ index ].ID );
			this.setQuantityStore( this.offers[ index ].MAX_QUANTITY, this.offers[ index ].AVAILIABLE.TEXT );

			this.incViewedCounter();
			BX.onCustomEvent( 'onCatalogStoreProductChange', [ this.offers[ this.offerNum ].ID ] );
			$( this.obPict ).parent().data( 'id', this.offers[ index ].ID );

			var arPriceItem = this.offers[ index ].PRICE;
			if( this.offers[ index ].ITEM_PRICE_MODE == 'Q' && this.offers[ index ].ITEM_PRICES && this.offers[ index ].USE_PRICE_COUNT )
			{
				if( this.offers[ index ].USE_PRICE_COUNT && this.offers[ index ].PRICE_MATRIX )
					this.checkPriceRange( this.offers[ index ].CONFIG.MIN_QUANTITY_BUY );
				arPriceItem = this.currentPrices[ this.currentPriceSelected ];

				arPriceItem.DISCOUNT_VALUE = arPriceItem.PRICE;
				arPriceItem.PRINT_DISCOUNT_VALUE = getCurrentPrice( arPriceItem.PRICE, arPriceItem.CURRENCY, arPriceItem.PRINT_PRICE );
				arPriceItem.VALUE = arPriceItem.BASE_PRICE;
				arPriceItem.PRINT_VALUE = getCurrentPrice( arPriceItem.BASE_PRICE, arPriceItem.CURRENCY, arPriceItem.PRINT_BASE_PRICE );
			}

			setViewedProduct( this.offers[ index ].ID, {
				'PRODUCT_ID': this.offers[ index ].PRODUCT_ID,
				'IBLOCK_ID': this.offers[ index ].IBLOCK_ID,
				'NAME': this.offers[ index ].NAME,
				'DETAIL_PAGE_URL': this.offers[ index ].URL,
				//'PICTURE_ID': this.offers[index].PREVIEW_PICTURE ? this.offers[index].PREVIEW_PICTURE.ID :
				// (this.offers[index].SLIDER_COUNT ? this.offers[index].SLIDER[0].ID : false),
				'PICTURE_ID': this.offers[ index ].PREVIEW_PICTURE ? this.offers[ index ].PREVIEW_PICTURE.ID : (this.offers[ index ].PARENT_PICTURE ? this.offers[ index ].PARENT_PICTURE.ID : (this.offers[ index ].SLIDER_COUNT ? this.offers[ index ].SLIDER[ 0 ].ID : false)),
				'CATALOG_MEASURE_NAME': this.offers[ index ].MEASURE,
				'MIN_PRICE': arPriceItem,
				'CAN_BUY': this.offers[ index ].CAN_BUY ? 'Y' : 'N',
				'IS_OFFER': 'Y',
				'WITH_OFFERS': 'N'
			} );

			var obj = this.offers[ index ],
				th = $( this.obProduct ).closest( '.product-container' ).find( '.main_item_wrapper.js-offers-calc' ),
				_th = this;

			if( typeof arBasketAspro !== "undefined" )
			{
				this.setActualDataBlock( th, obj );
			}
			else
			{
				if( typeof window.frameCacheVars !== "undefined" )
				{
					BX.addCustomEvent( "onFrameDataReceived", function() {
						_th.setActualDataBlock( th, obj );
					} );
				}
			}

			/*quantity discount start*/

			if( th.find( '.quantity_block .values' ).length )
				th.find( '.quantity_block .values .item span.value' ).text( this.offers[ index ].MAX_QUANTITY )
					.css( { 'opacity': '1' } );

			if( this.offers[ index ].SHOW_DISCOUNT_TIME_EACH_SKU == 'Y' )
			{
				initCountdownTime( th, this.offers[ index ].DISCOUNT_ACTIVE );
				initCountdownTime( $( '.product-info .info_item' ), this.offers[ index ].DISCOUNT_ACTIVE );
			}

			/*quantity discount end*/

			if( arMaxOptions[ 'THEME' ][ 'CHANGE_TITLE_ITEM' ] == 'Y' )
			{
				$( 'h1' ).html( this.offers[ index ].NAME );
				document.title = $( 'h1' ).html() + '' + this.offers[ index ].POSTFIX;
				ItemObj.TITLE = this.offers[ index ].NAME;
				ItemObj.WINDOW_TITLE = this.offers[ index ].NAME + '' + this.offers[ index ].POSTFIX;
			}

			$( '.catalog_detail input[data-sid="PRODUCT_NAME"]' ).attr( 'value', $( 'h1' ).text() );

			setTimeout( function() {
				setNewHeader( obj );
			}, 200 );
		}
	};

	window.JCCatalogElement.prototype.checkPriceRange = function( quantity ) {
		if( typeof quantity === 'undefined' || this.currentPriceMode != 'Q' )
			return;

		var range, found = false;
		for( var i in this.currentQuantityRanges )
		{
			if( this.currentQuantityRanges.hasOwnProperty( i ) )
			{
				range = this.currentQuantityRanges[ i ];

				if(
					parseInt( quantity ) >= parseInt( range.SORT_FROM )
					&& (
						range.SORT_TO == 'INF'
						|| parseInt( quantity ) <= parseInt( range.SORT_TO )
					)
				)
				{
					found = true;
					this.currentQuantityRangeSelected = range.HASH;
					break;
				}
			}
		}

		if( !found && (range = this.getMinPriceRange()) )
		{
			this.currentQuantityRangeSelected = range.HASH;
		}

		for( var k in this.currentPrices )
		{
			if( this.currentPrices.hasOwnProperty( k ) )
			{
				if( this.currentPrices[ k ].QUANTITY_HASH == this.currentQuantityRangeSelected )
				{
					this.currentPriceSelected = k;
					break;
				}
			}
		}
	};

	window.JCCatalogElement.prototype.getMinPriceRange = function() {
		var range;

		for( var i in this.currentQuantityRanges )
		{
			if( this.currentQuantityRanges.hasOwnProperty( i ) )
			{
				if(
					!range
					|| parseInt( this.currentQuantityRanges[ i ].SORT_FROM ) < parseInt( range.SORT_FROM )
				)
				{
					range = this.currentQuantityRanges[ i ];
				}
			}
		}

		return range;
	}

	/*set blocks start*/
	window.JCCatalogElement.prototype.setActualDataBlock = function( th, obj ) {
		/*like block start*/
		this.setLikeBlock( th, '.like_icons .wish_item', obj, 'DELAY' );
		this.setLikeBlock( th, '.like_icons .compare_item', obj, 'COMPARE' );
		/*like block end*/

		/*buy block start*/
		this.setBuyBlock( th, obj );
		/*buy block end*/
	}
	/*set blocks end*/

	/*set slider offers*/
	window.JCCatalogElement.prototype.SetSliderPict = function( obj, slider, config ) {
		var container = $( '.product-detail-gallery__slider.big' ),
			containerThmb = $( '.product-detail-gallery__slider.thmb' ),
			slideHtml = '',
			slideThmbHtml = '';
		countPhoto = obj.SLIDER_COUNT,
			product = $( this.obProduct ).closest( '.product-container' );

		containerThmb.css( {
			'max-width': Math.ceil( ((countPhoto <= 4 ? countPhoto : 4) * 70) - 10 )
		} );

		if( slider.length )
		{
			for( var i in slider )
			{
				if( typeof (slider[ i ]) == 'object' )
				{
					slideHtml += '<div id="photo-' + i + '" class="product-detail-gallery__item product-detail-gallery__item--big text-center" data-big="' + slider[ i ].BIG.src + '">' +
						'<a href="' + slider[ i ].BIG.src + '" data-fancybox="gallery" class="product-detail-gallery__link fancy"><img class="product-detail-gallery__picture" border="0" src="' + slider[ i ].SMALL.src + '" alt="' + slider[ i ].ALT + '" title="' + slider[ i ].TITLE + '" /></a>' +
						'</div>';
				}
			}

			if( countPhoto > 1 )
			{
				for( var i in slider )
				{
					if( typeof (slider[ i ]) == 'object' )
					{
						slideThmbHtml += '<div class="product-detail-gallery__item product-detail-gallery__item--thmb text-center" data-big="' + slider[ i ].BIG.src + '">' +
							'<img class="product-detail-gallery__picture" border="0" src="' + slider[ i ].SMALL.src + '" alt="' + slider[ i ].ALT + '" title="' + slider[ i ].TITLE + '" />' +
							'</div>';
					}
				}
			}
		}
		else
		{
			slideHtml += '<div class="product-detail-gallery__item product-detail-gallery__item--big text-center">' +
				'<span class="product-detail-gallery__link"><img class="product-detail-gallery__picture" border="0" src="' + obj.NO_PHOTO.SRC + '" alt="' + obj.NAME + '" title="' + obj.NAME + '" /></span>' +
				'</div>';
		}

		container.html( slideHtml );
		containerThmb.attr( 'data-size', countPhoto ).html( slideThmbHtml );

		product.find( '.popup_video' ).remove();
		if( obj.POPUP_VIDEO )
			$( '<div class="video-block popup_video ' + (slider.length > 4 ? 'fromtop' : '') + ' sm"><a class="various video_link image dark_link" href="' + obj.POPUP_VIDEO + '" title="' + BX.message( 'POPUP_VIDEO' ) + '"><span class="play text-upper font_xs">' + BX.message( 'POPUP_VIDEO' ) + '</span></a></div>' )
				.insertAfter( containerThmb );
		if( !slideThmbHtml )
			product.find( '.popup_video' ).addClass( 'only-item' );

		if( container.data( 'owl.carousel' ) !== undefined )
			container.data( 'owl.carousel' ).destroy();

		if( containerThmb.data( 'owl.carousel' ) !== undefined )
			containerThmb.data( 'owl.carousel' ).destroy();

		InitOwlSlider();
		InitFancyBox();

		if( config.mainPictureMode == 'MAGNIFIER' )
		{
			var pict = '';
			if( slider && slider[ 0 ] )
			{
				pict = '<img class="product-detail-gallery__picture zoom_picture" border="0" src="' + slider[ 0 ].SMALL.src + '" alt="' + slider[ 0 ].ALT + '" title="' + slider[ 0 ].TITLE + '" data-xoriginal="' + slider[ 0 ].BIG.src + '"/>';
			}
			else
			{
				pict = '<img class="product-detail-gallery__picture one" border="0" src="' + obj.NO_PHOTO.SRC + '" alt="' + obj.NAME + '" title="' + obj.NAME + '" data-xoriginal2="' + obj.NO_PHOTO.SRC + '"/>';
			}

			if( product.find( '.line_link' ).length )
			{
				product.find( '.line_link' ).html( pict );
			}
			else if( product.find( '.product-detail-gallery__picture.one' ).length || product.find( '.product-detail-gallery__picture.zoom_picture' ).length )
			{
				product.find( '#photo-sku' ).html( pict )
			}
			InitZoomPict();
		}
	}

	/*set compare/wish*/
	window.JCCatalogElement.prototype.setLikeBlock = function( th, className, obj, type ) {
		var block = $( this.obProduct );
		if( type == "DELAY" )
		{
			if( obj.CAN_BUY )
			{
				block.find( className + '_button' ).css( 'display', 'inline-block' );
			}
			else
			{
				block.find( className + '_button' ).hide();
			}
		}
		block.find( className ).attr( 'data-item', obj.ID );

		if( arBasketAspro[ type ] )
		{
			block.find( className + '.to' ).css( 'display', 'block' );
			block.find( className + '.in' ).hide();

			if( arBasketAspro[ type ][ obj.ID ] !== undefined )
			{
				block.find( className + '.to' ).hide();
				block.find( className + '.in' ).css( 'display', 'block' ).addClass( 'added' );
			}
		}
	}

	/*set buy*/
	window.JCCatalogElement.prototype.setBuyBlock = function( th, obj ) {
		var buyBlock = th.find( '.offer_buy_block' ),
			input_value = obj.CONFIG.MIN_QUANTITY_BUY;

		if( buyBlock.find( '.counter_wrapp .counter_block' ).length )
		{
			buyBlock.find( '.counter_wrapp .counter_block' ).attr( 'data-item', obj.ID );
		}

		if( this.offers[ this.offerNum ].offer_set_quantity )
		{
			input_value = this.offers[ this.offerNum ].offer_set_quantity;
		}

		var $calculate = buyBlock.closest( '.catalog_detail' ).find( '.calculate-delivery' );
		if( $calculate.length )
		{
			$calculate.each( function() {
				var $calculateSpan = $( this ).find( 'span[data-event=jqm]' ).first();

				if( $calculateSpan.length )
				{
					var $clone = $calculateSpan.clone();
					$clone.attr( 'data-param-product_id', obj.ID ).attr( 'data-param-quantity', input_value )
						.removeClass( 'clicked' );
					$clone.insertAfter( $calculateSpan ).on( 'click', function() {
						if( !jQuery.browser.mobile )
						{
							$( this ).parent().addClass( 'loadings' );
						}
					} );
					$calculateSpan.remove();
				}

				if( $( this ).hasClass( 'with_preview' ) )
				{
					$( this ).removeClass( 'inited' );

					if( this.timerInitCalculateDelivery )
					{
						clearTimeout( this.timerInitCalculateDelivery );
					}

					var that = this;
					this.timerInitCalculateDelivery = setTimeout( function() {
						initCalculatePreview();
						that.timerInitCalculateDelivery = false;
					}, 1000 );
				}
			} );

			if(
				this.offers[ this.offerNum ].ACTION === 'ADD' &&
				this.offers[ this.offerNum ].CAN_BUY === 'Y'
			)
			{
				$calculate.show();
			}
			else
			{
				$calculate.hide();
			}
		}

		if( th.find( '.cheaper_form' ).length )
		{
			var cheaper_form = th.find( '.cheaper_form span' );
			cheaper_form.data( 'autoload-product_name', obj.NAME );
			cheaper_form.data( 'autoload-product_id', obj.ID );
		}

		if( (obj.CONFIG.OPTIONS.USE_PRODUCT_QUANTITY_DETAIL && obj.CONFIG.ACTION == "ADD") && obj.CAN_BUY )
		{
			var max = (obj.CONFIG.MAX_QUANTITY_BUY > 0 ? "data-max='" + obj.CONFIG.MAX_QUANTITY_BUY + "'" : ""),
				counterHtml = '<span class="minus dark-color"><i class="svg"><svg width="11" height="1" viewBox="0 0 11 1"><rect width="11" height="1" rx="0.5" ry="0.5"></rect></svg></i></span>' +
					'<input type="text" class="text" name="' + obj.PRODUCT_QUANTITY_VARIABLE + '" value="' + input_value + '" />' +
					'<span class="plus dark-color" ' + max + '><i class="svg"><svg width="11" height="11" viewBox="0 0 11 11"><path d="M1034.5,193H1030v4.5a0.5,0.5,0,0,1-1,0V193h-4.5a0.5,0.5,0,0,1,0-1h4.5v-4.5a0.5,0.5,0,0,1,1,0V192h4.5A0.5,0.5,0,0,1,1034.5,193Z" transform="translate(-1024 -187)"></path></svg></i></span>';
			if( arBasketAspro[ "BASKET" ] && arBasketAspro[ "BASKET" ][ obj.ID ] !== undefined )
			{
				if( buyBlock.find( '.counter_wrapp .counter_block' ).length )
				{
					buyBlock.find( '.counter_wrapp .counter_block' ).hide();
				}
				else
				{
					buyBlock.find( '.counter_wrapp' )
						.prepend( '<div class="counter_block_inner"><div class="counter_block md" data-item="' + obj.ID + '"></div></div>' );
					buyBlock.find( '.counter_wrapp .counter_block' ).html( counterHtml ).hide();
				}
			}
			else
			{
				if( buyBlock.find( '.counter_wrapp .counter_block' ).length )
				{
					buyBlock.find( '.counter_wrapp .counter_block_inner' ).show();
					buyBlock.find( '.counter_wrapp .counter_block' ).html( counterHtml ).show();
				}
				else
				{
					buyBlock.find( '.counter_wrapp' )
						.prepend( '<div class="counter_block_inner"><div class="counter_block md" data-item="' + obj.ID + '"></div></div>' );
					buyBlock.find( '.counter_wrapp .counter_block' ).html( counterHtml );
				}
			}
		}
		else
		{
			if( buyBlock.find( '.counter_wrapp .counter_block' ).length )
			{
				buyBlock.find( '.counter_wrapp .counter_block' ).hide();
			}
		}

		var className = ((obj.CONFIG.ACTION == "ORDER") || !obj.CAN_BUY || !obj.CONFIG.OPTIONS.USE_PRODUCT_QUANTITY_DETAIL || (obj.CONFIG.ACTION == "SUBSCRIBE" && obj.CATALOG_SUBSCRIBE == "Y") ? "wide" : ""),
			buyBlockBtn = $( '<div class="button_block"></div>' );

		if( buyBlock.find( '.counter_wrapp' ).find( '.button_block' ).length )
		{
			if( arBasketAspro[ "BASKET" ] && arBasketAspro[ "BASKET" ][ obj.ID ] !== undefined )
			{
				buyBlock.find( '.counter_wrapp' ).find( '.button_block' ).addClass( 'wide' ).html( obj.HTML );
				markProductAddBasket( obj.ID );
			}
			else
			{
				if( className )
				{
					buyBlock.find( '.counter_wrapp' ).find( '.button_block' ).addClass( 'wide' ).html( obj.HTML );
					if( typeof arBasketAspro !== "undefined" )
					{
						if( arBasketAspro[ "SUBSCRIBE" ] && arBasketAspro[ "SUBSCRIBE" ][ obj.ID ] !== undefined )
						{
							markProductSubscribe( obj.ID );
						}
					}
				}
				else
				{
					buyBlock.find( '.counter_wrapp' ).find( '.button_block' ).removeClass( 'wide' ).html( obj.HTML );
				}
			}
		}
		else
		{
			buyBlock.find( '.counter_wrapp' )
				.append( '<div class="button_block ' + className + '">' + obj.HTML + '</div>' );
			if( arBasketAspro[ "BASKET" ] && arBasketAspro[ "BASKET" ][ obj.ID ] !== undefined )
				markProductAddBasket( obj.ID );
			if( arBasketAspro[ "SUBSCRIBE" ] && arBasketAspro[ "SUBSCRIBE" ][ obj.ID ] !== undefined )
				markProductSubscribe( obj.ID );
		}

		if( buyBlock.find( '.wrapp-one-click' ).length )
			buyBlock.find( '.wrapp-one-click' ).remove();

		if( obj.CONFIG.ACTION !== "NOTHING" )
		{
			buyBlock.append( obj.ONE_CLICK_BUY_HTML );
			/*if(obj.CONFIG.ACTION == "ADD" && obj.CAN_BUY && obj.SHOW_ONE_CLICK_BUY!="N")
		{
			var ocb='<span class="transparent btn-lg type_block btn btn-default white one_click transition_bg" data-offers="Y" data-item="'+obj.ID+'" data-iblockID="'+obj.IBLOCK_ID+'" data-quantity="'+obj.CONFIG.MIN_QUANTITY_BUY+'" data-props="'+obj.OFFER_PROPS+'" onclick="oneClickBuy('+obj.ID+', '+obj.IBLOCK_ID+', this)">'+
				'<span>'+obj.ONE_CLICK_BUY+'</span>'+
				'</span>';
			if(buyBlock.find('.wrapp_one_click').length){
				buyBlock.find('.wrapp_one_click').html(ocb);
			}else{
				buyBlock.append('<div class="wrapp_one_click">'+ocb+'</div>');
			}
		}
		else
		{
			if(buyBlock.find('.wrapp_one_click').length)
				buyBlock.find('.wrapp_one_click').remove();
		}*/
		}
		else
		{
			if( buyBlock.find( '.wrapp-one-click' ).length )
				buyBlock.find( '.wrapp-one-click' ).remove();
		}

		buyBlock.fadeIn();

		buyBlock.find( '.counter_wrapp .counter_block input' ).data( 'product', 'ob' + this.obProduct.id );
		this.setPriceAction( '', 'Y' );

		InitFancyBoxVideo();

		if( typeof obMaxPredictions === 'object' )
		{
			obMaxPredictions.showAll();
		}
	}

	/*set store block*/
	window.JCCatalogElement.prototype.setStoreBlock = function( id ) {
		if( typeof setElementStore === 'function' )
		{
			setElementStore( '', id );
		}
		else
		{
			// this func is not exists yet, wait onFrameDataReceived
			if( typeof window.frameCacheVars !== "undefined" )
			{
				BX.addCustomEvent( "onFrameDataReceived", function( json ) {
					if( typeof setElementStore === 'function' )
					{
						setElementStore( '', id );
					}
				} );
			}
		}
	}

	/*set store quantity*/
	window.JCCatalogElement.prototype.setQuantityStore = function( quantity, text ) {
		if( parseFloat( quantity ) > 0 )
		{
			$( this.storeQuanity ).find( '.icon' ).removeClass( 'order' ).addClass( 'stock' );
			$( '.product-info .info_item .item-stock' ).find( '.icon' ).removeClass( 'order' ).addClass( 'stock' );
		}
		else
		{
			$( this.storeQuanity ).find( '.icon' ).removeClass( 'stock' ).addClass( 'order' );
			$( '.product-info .info_item .item-stock' ).find( '.icon' ).removeClass( 'stock' ).addClass( 'order' );
		}

		$( this.storeQuanity ).find( '.icon + span' ).html( text );
		$( '.product-info .info_item .item-stock' ).find( '.icon + span' ).html( text );

		if( !$( ".stores_tab" ).length )
		{
			$( '.item-stock .store_view' ).removeClass( 'store_view' );
		}
	}

	/*get compare sku*/
	window.JCCatalogElement.prototype.CompareCountResult = function( result ) {
		if( result.COMPARE_COUNT )
		{
			for( var i in result.ITEMS )
			{
				if( result.ITEMS[ i ] == this.offers[ this.offerNum ].ID )
				{
					this.offers[ this.offerNum ].COMPARE_ACTIVE = true;
					break;
				}
				else
				{
					this.offers[ this.offerNum ].COMPARE_ACTIVE = false;
				}
			}
			if( this.offers[ this.offerNum ].COMPARE_ACTIVE )
			{
				$( this.obCompare ).addClass( 'added' );
				$( this.obCompare ).find( '.value:not(.added)' ).hide();
				$( this.obCompare ).find( '.value.added' ).css( 'display', 'block' );
			}
			else
			{
				$( this.obCompare ).removeClass( 'added' );
				$( this.obCompare ).find( '.value.added' ).hide();
				$( this.obCompare ).find( '.value:not(.added)' ).css( 'display', 'block' );
			}
		}
	}

	/*get item info*/
	window.JCCatalogElement.prototype.ItemInfoResult = function( result ) {
		if( result.HTML )
		{
			$( this.obBasketActions ).html( result.HTML );
			$( this.obBasketActions ).show();
			this.obAddToBasketBtn = BX( this.visual.BUY_ID );
			this.obBasketBtn = BX( this.visual.BASKET_LINK );
			this.obSubscribeBtn = BX( this.visual.SUBSCRIBE_ID );
			this.obSubscribedBtn = BX( this.visual.SUBSCRIBED_ID );
			BX.bind( this.obAddToBasketBtn, 'click', BX.delegate( this.Add2Basket, this ) );
			$( this.obBasketActions ).removeClass( 'wide' );
			this.ajax_type_item = result.BUYMISSINGGOODS;
			if( result.BUYMISSINGGOODS != "ADD" && !this.canBuy )
			{
				$( this.obBasketActions ).addClass( 'wide' );
			}
			else
			{
				$( this.obQuantity ).css( 'display', '' );
			}
			if( result.ONE_CLICK_HTML )
			{
				$( '.wrapp_one_click' ).html( result.ONE_CLICK_HTML );
			}

		}
		//if(this.canBuy){
		basketParams = {
			ajax_action: 'Y'
		};
		BX.ajax.loadJSON(
			arMaxOptions[ 'SITE_DIR' ] + 'ajax/get_basket_count.php',
			basketParams,
			BX.delegate( this.BasketCountResult, this )
		);
		//}
	}

	/*get basket items*/
	window.JCCatalogElement.prototype.BasketCountResult = function( result ) {
		//if(result.TOTAL_COUNT){
		for( var i in result.ITEMS )
		{
			if( result.ITEMS[ i ].PRODUCT_ID == this.offers[ this.offerNum ].ID )
			{
				this.offers[ this.offerNum ].BASKET_ACTIVE = true;
				break;
			}
			else
			{
				this.offers[ this.offerNum ].BASKET_ACTIVE = false;
			}
		}
		for( var i in result.SUBSCRIBE_ITEMS )
		{
			if( result.SUBSCRIBE_ITEMS[ i ].PRODUCT_ID == this.offers[ this.offerNum ].ID )
			{
				this.offers[ this.offerNum ].SUBSCRIBE_ACTIVE = true;
				break;
			}
			else
			{
				this.offers[ this.offerNum ].SUBSCRIBE_ACTIVE = false;
			}
		}

		this.BasketStateRefresh();
		//}
	}

	window.JCCatalogElement.prototype.BasketStateRefresh = function( buy_basket ) {
		if( this.offers[ this.offerNum ].SUBSCRIBE_ACTIVE )
		{
			$( this.obBasketActions ).addClass( 'wide' );
			$( this.obSubscribeBtn ).hide();
			$( this.obSubscribedBtn ).show();
		}
		else
		{
			$( this.obBasketActions ).addClass( 'wide' );
			$( this.obSubscribedBtn ).hide();
			$( this.obSubscribeBtn ).show();
		}

		if( this.offers[ this.offerNum ].BASKET_ACTIVE )
		{
			$( this.obAddToBasketBtn ).hide();
			$( this.obQuantity ).closest( '.counter_wrapp' ).find( '.counter_block' ).hide();
			$( this.obBasketBtn ).show();
			$( this.obBasketActions ).addClass( 'wide' );
		}
		else
		{
			$( this.obBasketActions ).removeClass( 'wide' );
			$( this.obBasketBtn ).hide();
			if( this.ajax_type_item == "ADD" || this.canBuy )
				$( this.obQuantity ).closest( '.counter_wrapp' ).find( '.counter_block' ).show();
			$( this.obAddToBasketBtn ).show();
		}
		if( !this.canBuy )
		{
			$( this.obBasketActions ).addClass( 'wide' );
		}
		if( this.canBuy )
		{
			$( '.one_click' ).removeClass( 'hidden_block' ).css( 'opacity', 1 );
		}
		BX.style( this.obBasketActions, 'opacity', '1' );
		$( this.obBasketActions ).closest( '.counter_wrapp' ).removeClass( 'hidden_block' ).css( 'opacity', 1 );

		if( buy_basket !== 'undefined' && buy_basket == "Y" )
		{
			if( $( "#basket_line .basket_fly" ).length && $( window ).outerWidth() > 768 )
			{
				// preAnimateBasketFly($("#basket_line .basket_fly"), 200, 333);
				basketFly( 'open' );
			}
			else if( $( "#basket_line .cart" ).length )
			{
				if( $( "#basket_line .cart" ).is( ".empty_cart" ) )
				{
					$( "#basket_line .cart" ).removeClass( "empty_cart" ).find( ".cart_wrapp a.basket_link" )
						.removeAttr( "href" ).addClass( "cart-call" );
					touchBasket( '.cart:not(.empty_cart) .basket_block .link' );
				}
				reloadTopBasket( 'add', $( '#basket_line' ), 200, 2000, 'Y' );
				/*if($(window).outerWidth() > 520){
				//if(arMaxOptions['THEME']['SHOW_BASKET_ONADDTOCART'] !== 'N'){
					preAnimateBasketPopup('', $('.card_popup_frame'), 0, 200);
				//}
			};*/
			}
			animateBasketLine( 200 );
		}
	}

	window.JCCatalogElement.prototype.setPriceAction = function( change, sku ) {
		var measure = this.offers[ this.offerNum ].MEASURE && this.offers[ this.offerNum ].SHOW_MEASURE == "Y" ? this.offers[ this.offerNum ].MEASURE : '';
		var product = $( this.obProduct ).closest( '.product-container' ).find( '.main_item_wrapper.js-offers-calc' ),
			check_quantity = '',
			is_sku = (typeof sku !== 'undefined' && sku == 'Y');

		this.offers[ this.offerNum ].offer_set_quantity = this.offers[ this.offerNum ].CONFIG.MIN_QUANTITY_BUY;
		if( $( product ).find( 'input[name=quantity]' ).length )
			this.offers[ this.offerNum ].offer_set_quantity = $( product ).find( 'input[name=quantity]' ).val();

		if( $( product ).find( '.price.discount' ).length )
			$( product ).find( '.price.discount' ).html( '' );
		if( $( product ).find( '.sale_block:not(.matrix)' ).length )
			$( product ).find( '.sale_block:not(.matrix)' ).html( '' );

		if( this.offers[ this.offerNum ].USE_PRICE_COUNT && this.offers[ this.offerNum ].PRICE_MATRIX )
		{
			this.checkPriceRange( this.offers[ this.offerNum ].offer_set_quantity );
			this.setPriceMatrix( this.offers[ this.offerNum ].PRICE_MATRIX );
		}
		else
		{
			if( 'PRICES' in this.offers[ this.offerNum ] )
				this.setPrice( this.offers[ this.offerNum ].PRICES, measure );
		}
		if( arMaxOptions[ 'THEME' ][ 'SHOW_TOTAL_SUMM' ] == 'Y' )
		{
			if( this.offers[ this.offerNum ].check_quantity )
				check_quantity = 'Y';
			else
			{
				var check_quantity = ((typeof change !== 'undefined' && change == 'Y') ? change : '');
				if( check_quantity )
					this.offers[ this.offerNum ].check_quantity = true;
			}
			if( typeof this.currentPrices[ this.currentPriceSelected ] !== 'undefined' )
			{
				if( arMaxOptions[ "THEME" ][ "SHOW_TOTAL_SUMM_TYPE" ] == "ALWAYS" )
					check_quantity = is_sku = '';

				setPriceItem( product, this.offers[ this.offerNum ].offer_set_quantity, this.currentPrices[ this.currentPriceSelected ].PRICE, check_quantity, is_sku );
			}
		}
	}

	window.JCCatalogElement.prototype.setPriceMatrix = function( sPriceMatrix ) {
		var prices = '';
		if( !!this.obPrice.price )
		{
			var measure = this.offers[ this.offerNum ].MEASURE && this.offers[ this.offerNum ].SHOW_MEASURE == "Y" ? this.offers[ this.offerNum ].MEASURE : '',
				product = $( this.obProduct ).closest( '.product-container' )
					.find( '.main_item_wrapper.js-offers-calc' ),
				strPrice = '';
			strPrice = getCurrentPrice( this.currentPrices[ this.currentPriceSelected ].PRICE, this.currentPrices[ this.currentPriceSelected ].CURRENCY, this.currentPrices[ this.currentPriceSelected ].PRINT_PRICE );
			if( measure )
				strPrice += '<span class="price_measure">/' + measure + '</span>';
			product.find( '.not_matrix' ).hide();
			product.find( '.with_matrix .price_value_block' ).html( strPrice );

			if( this.config.showOldPrice )
			{
				if( parseFloat( this.currentPrices[ this.currentPriceSelected ].BASE_PRICE ) > parseFloat( this.currentPrices[ this.currentPriceSelected ].PRICE ) )
				{
					product.find( '.with_matrix .discount' )
						.html( getCurrentPrice( this.currentPrices[ this.currentPriceSelected ].BASE_PRICE, this.currentPrices[ this.currentPriceSelected ].CURRENCY, this.currentPrices[ this.currentPriceSelected ].PRINT_BASE_PRICE ) );
					product.find( '.with_matrix .discount' ).css( 'display', 'inline-block' );
				}
				else
				{
					product.find( '.with_matrix .discount' ).html( '' );
					product.find( '.with_matrix .discount' ).css( 'display', 'none' );
				}
			}
			else
			{
				product.find( '.with_matrix .discount' ).html( '' );
				product.find( '.with_matrix .discount' ).css( 'display', 'none' );
			}

			if( this.currentPrices[ this.currentPriceSelected ].PERCENT > 0 )
			{
				if( this.config.showPercentNumber )
				{
					if( this.currentPrices[ this.currentPriceSelected ].PERCENT > 0 && this.currentPrices[ this.currentPriceSelected ].PERCENT < 100 )
					{
						if( !product.find( '.with_matrix .sale_block .sale_wrapper .value' ).length )
							$( '<div class="value"></div>' )
								.insertBefore( product.find( '.with_matrix .sale_block .sale_wrapper .text' ) );

						product.find( '.with_matrix .sale_block .sale_wrapper .value' )
							.html( '-<span>' + this.currentPrices[ this.currentPriceSelected ].PERCENT + '</span>%' );
					}
					else
					{
						if( product.find( '.with_matrix .sale_block .sale_wrapper .value' ).length )
							product.find( '.with_matrix .sale_block .sale_wrapper .value' ).remove();
					}
				}
			}

			product.find( '.with_matrix .sale_block .text .values_wrapper' )
				.html( getCurrentPrice( this.currentPrices[ this.currentPriceSelected ].DISCOUNT, this.currentPrices[ this.currentPriceSelected ].CURRENCY, this.currentPrices[ this.currentPriceSelected ].PRINT_DISCOUNT ) );
			if( this.config.showPercent && parseFloat( this.currentPrices[ this.currentPriceSelected ].DISCOUNT ) > 0 )
				product.find( '.with_matrix .sale_block' ).show();
			else
				product.find( '.with_matrix .sale_block' ).hide();
			product.find( '.with_matrix' ).show();
			// BX.adjust(this.obPrice.price, {html: sPriceMatrix});

			product.find( '.cost .js_price_wrapper' ).html( this.offers[ this.offerNum ].PRICE_MATRIX );

			if( this.offers[ this.offerNum ].SHOW_POPUP_PRICE )
				product.find( '.cost .js_price_wrapper' )
					.append( '<div class="js-show-info-block more-item-info rounded3 bordered-block text-center"><i class="svg inline  svg-inline-fw" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" width="8" height="2" viewBox="0 0 8 2"><path id="Ellipse_292_copy_3" data-name="Ellipse 292 copy 3" class="cls-1" d="M320,4558a1,1,0,1,1-1,1A1,1,0,0,1,320,4558Zm-3,0a1,1,0,1,1-1,1A1,1,0,0,1,317,4558Zm6,0a1,1,0,1,1-1,1A1,1,0,0,1,323,4558Z" transform="translate(-316 -4558)"></path></svg></i></div>' );

			var eventdata = {
				product: $( this.obProduct ),
				measure: measure,
				config: this.config,
				offer: this.offers[ this.offerNum ],
				obPrice: this.currentPrices[ this.currentPriceSelected ]
			};
			BX.onCustomEvent( 'onAsproSkuSetPriceMatrix', [ eventdata ] )
		}
	}

	window.JCCatalogElement.prototype.setPrice = function( obPrices, measure ) {
		var prices = '';
		if( !!this.obPrice.price )
		{
			var measure = this.offers[ this.offerNum ].MEASURE && this.offers[ this.offerNum ].SHOW_MEASURE == "Y" ? this.offers[ this.offerNum ].MEASURE : '',
				product = $( this.obProduct ).closest( '.product-container' )
					.find( '.main_item_wrapper.js-offers-calc' ),
				obPrices = this.offers[ this.offerNum ].PRICES;
			if( typeof (obPrices) == 'object' )
			{

				product.find( '.with_matrix' ).hide();
				/*var strPrice = '',
				count = Object.keys(obPrices).length,
				arStikePrices = [];

			if(arMaxOptions['THEME']['DISCOUNT_PRICE'])
			{
				arStikePrices = arMaxOptions['THEME']['DISCOUNT_PRICE'].split(',');
			}

			strPrice = '<div class="offers_price_wrapper">';
			$(this.obProduct).find('.with_matrix').hide();
			$(this.obProduct).find('.not_matrix').show();
			for(var j in obPrices)
			{
				if(obPrices[j] && obPrices[j].VALUE > 0)
				{
					if('GROUP_NAME' in obPrices[j])
					{
						if(count > 1)
						{
							strPrice += '<div class="offers_price_title">';
							strPrice += obPrices[j].GROUP_NAME;
							strPrice += '</div>';
						}
					}
					strPrice += '<div class="offers_price'+(arStikePrices ? (BX.util.in_array(obPrices[j].PRICE_ID, arStikePrices) ? ' strike_block' : '') : '')+'">';
						strPrice += '<span class="values_wrapper">'+getCurrentPrice(obPrices[j].DISCOUNT_VALUE, obPrices[j].CURRENCY, obPrices[j].PRINT_DISCOUNT_VALUE)+'</span>';
						if(measure)
							strPrice += '<span class="price_measure">/'+measure+'</span>';

					strPrice += '</div>';
					if (obPrices[j].DISCOUNT_VALUE !== obPrices[j].VALUE)
					{
						if(this.config.showOldPrice)
						{
							strPrice += '<div class="offers_price_old">';
								strPrice += '<span class="values_wrapper">'+getCurrentPrice(obPrices[j].VALUE, obPrices[j].CURRENCY, obPrices[j].PRINT_VALUE)+'</span>';
							strPrice += '</div>';
						}
						if(this.config.showPercent)
						{
							if(!this.config.showPercentNumber || (this.config.showPercentNumber && (obPrices[j].DISCOUNT_DIFF_PERCENT <= 0 && obPrices[j].DISCOUNT_DIFF_PERCENT >= 100)))
							{
								strPrice += '<div class="sale_block matrix"><div class="sale_wrapper">';
									strPrice += '<span class="title">'+BX.message('ITEM_ECONOMY')+'</span>';
									strPrice += '<div class="text">';
										strPrice += '<span class="values_wrapper">'+getCurrentPrice(obPrices[j].DISCOUNT_DIFF, obPrices[j].CURRENCY, obPrices[j].PRINT_DISCOUNT_DIFF)+'</span>';
									strPrice += '</div>';
								strPrice += '<div class="clearfix"></div></div></div>';
							}
							else
							{
								strPrice += '<div class="sale_block matrix"><div class="sale_wrapper">';
									strPrice += '<div class="value">-<span>'+obPrices[j].DISCOUNT_DIFF_PERCENT+'</span>%</div>';
									strPrice += '<div class="text">';
										strPrice += '<span class="title">'+BX.message('ITEM_ECONOMY')+'</span> ';
										strPrice += '<span class="values_wrapper">'+getCurrentPrice(obPrices[j].DISCOUNT_DIFF, obPrices[j].CURRENCY, obPrices[j].PRINT_DISCOUNT_DIFF)+'</span>';
									strPrice += '</div>';
								strPrice += '<div class="clearfix"></div></div></div>';
							}
						}
					}
					else
					{
						if (this.config.showOldPrice)
						{
							if (!!this.obPrice.full)
							{
								BX.adjust(this.obPrice.full, {style: {display: 'none'}, html: ''});
							}
							if (!!this.obPrice.discount)
							{
								BX.adjust(this.obPrice.discount, {style: {display: 'none'}, html: ''});
							}
						}
					}
					$('.prices_block .cost.prices').show();
				}
				else
				{
					$('.prices_block .cost.prices').hide();
				}
			}
			if (this.config.showPercent)
			{
				if (!!this.obPrice.percent)
				{
					BX.adjust(this.obPrice.percent, {style: {display: 'none'}, html: ''});
				}
				$(this.obPrice.full).closest('.cost').find('.sale_block:not(.matrix)').hide();
				$(this.obPrice.full).closest('.cost').find('.sale_block:not(.matrix) .value').html('');
				$(this.obPrice.full).closest('.cost').find('.sale_block:not(.matrix) .text span').html('');
			}
			strPrice += '</div>';
			BX.adjust(this.obPrice.price, {html: strPrice});

			$(this.obPrice.full).hide().html('');
			if(this.showPercent)
				$(this.obPrice.full).closest('.cost').find('.sale_block').hide();

			*/
				// console.log(this.offers[this.offerNum].PRICES_HTML)
				product.find( '.cost .js_price_wrapper' ).html( this.offers[ this.offerNum ].PRICES_HTML );

				var eventdata = {
					product: product,
					measure: measure,
					config: this.config,
					offer: this.offers[ this.offerNum ],
					obPrices: obPrices
				};
				BX.onCustomEvent( 'onAsproSkuSetPrice', [ eventdata ] )
			}
		}
	};

	window.JCCatalogElement.prototype.Compare = function() {
		var compareParams, compareLink;
		if( $( this.obCompare ).find( '.added' ).is( ':visible' ) )
		{
			compareLink = this.compareData.compareUrlDel;
			this.compareData.Added = false;
		}
		else
		{
			compareLink = this.compareData.compareUrl;
			this.compareData.Added = true;
		}
		if( !!compareLink )
		{
			switch( this.productType )
			{
				case 1://product
				case 2://set
					compareLink = compareLink.replace( '#ID#', this.product.id.toString() );
					break;
				case 3://sku
					compareLink = compareLink.replace( '#ID#', this.offers[ this.offerNum ].ID );
					break;
			}
			compareParams = {
				ajax_action: 'Y'
			};
			BX.ajax.loadJSON(
				compareLink,
				compareParams,
				BX.proxy( this.CompareResult, this )
			);
		}
	};

	window.JCCatalogElement.prototype.CompareResult = function( result ) {
		var popupContent, popupButtons, popupTitle;

		if( typeof result !== 'object' )
		{
			return false;
		}
		if( result.STATUS === 'OK' )
		{
			BX.onCustomEvent( 'OnCompareChange' );
			if( !this.compareData.Added )
			{
				$( this.obCompare ).removeClass( 'added' );
				$( this.obCompare ).find( '.added' ).hide();
				$( this.obCompare ).find( '.value:not(.added)' ).css( 'display', 'block' );
			}
			else
			{
				$( this.obCompare ).addClass( 'added' );
				$( this.obCompare ).find( '.value:not(.added)' ).hide();
				$( this.obCompare ).find( '.added' ).css( 'display', 'block' );
			}
			jsAjaxUtil.InsertDataToNode( arMaxOptions[ 'SITE_DIR' ] + 'ajax/show_compare_preview_top.php', 'compare_line', false );
		}
		else
		{
			console.log( BX.message( 'ADD_ERROR_COMPARE' ) );
		}
		return false;
	};

	window.JCCatalogElement.prototype.CompareRedirect = function() {
		if( !!this.compareData.comparePath )
		{
			location.href = this.compareData.comparePath;
		}
		else
		{
			this.obPopupWin.close();
		}
	};

	window.JCCatalogElement.prototype.InitBasketUrl = function() {
		var product_url = '';
		this.basketUrl = (this.basketMode === 'ADD' ? this.basketData.add_url : this.basketData.buy_url);
		switch( this.productType )
		{
			case 1://product
			case 2://set
				this.basketUrl = this.basketUrl.replace( '#ID#', this.product.id.toString() );
				product_url = this.product.id.toString();
				break;
			case 3://sku
				this.basketUrl = this.basketUrl.replace( '#ID#', this.offers[ this.offerNum ].ID );
				product_url = this.offers[ this.offerNum ].URL;
				break;
		}
		this.basketParams = {
			'ajax_basket': 'Y'
		};
		if( this.config.showQuantity )
		{
			this.basketParams[ this.basketData.quantity ] = this.obQuantity.value;
		}
		if( !!this.basketData.sku_props )
		{
			this.basketParams[ this.basketData.sku_props_var ] = this.basketData.sku_props;
		}
		if( !!product_url )
		{
			this.basketParams[ "REQUEST_URI" ] = product_url;
		}
	};

	window.JCCatalogElement.prototype.FillBasketProps = function() {
		if( !this.visual.BASKET_PROP_DIV )
		{
			return;
		}
		var
			i = 0,
			propCollection = null,
			foundValues = false,
			obBasketProps = null;
		if( this.basketData.useProps && !this.basketData.emptyProps )
		{
			if( !!this.obPopupWin && !!this.obPopupWin.contentContainer )
			{
				obBasketProps = this.obPopupWin.contentContainer;
			}
		}
		else
		{
			obBasketProps = BX( this.visual.BASKET_PROP_DIV );
		}
		if( !!obBasketProps )
		{
			propCollection = obBasketProps.getElementsByTagName( 'select' );
			if( !!propCollection && !!propCollection.length )
			{
				for( i = 0; i < propCollection.length; i++ )
				{
					if( !propCollection[ i ].disabled )
					{
						switch( propCollection[ i ].type.toLowerCase() )
						{
							case 'select-one':
								this.basketParams[ propCollection[ i ].name ] = propCollection[ i ].value;
								foundValues = true;
								break;
							default:
								break;
						}
					}
				}
			}
			propCollection = obBasketProps.getElementsByTagName( 'input' );
			if( !!propCollection && !!propCollection.length )
			{
				for( i = 0; i < propCollection.length; i++ )
				{
					if( !propCollection[ i ].disabled )
					{
						switch( propCollection[ i ].type.toLowerCase() )
						{
							case 'hidden':
								this.basketParams[ propCollection[ i ].name ] = propCollection[ i ].value;
								foundValues = true;
								break;
							case 'radio':
								if( propCollection[ i ].checked )
								{
									this.basketParams[ propCollection[ i ].name ] = propCollection[ i ].value;
									foundValues = true;
								}
								break;
							default:
								break;
						}
					}
				}
			}
		}
		if( !foundValues )
		{
			this.basketParams[ this.basketData.props ] = [];
			this.basketParams[ this.basketData.props ][ 0 ] = 0;
		}
	};

	window.JCCatalogElement.prototype.SendToBasket = function() {
		if( !this.canBuy )
		{
			return;
		}
		this.InitBasketUrl();
		this.FillBasketProps();
		BX.ajax.loadJSON(
			this.basketUrl,
			this.basketParams,
			BX.proxy( this.BasketResult, this )
		);
	};

	window.JCCatalogElement.prototype.Add2Basket = function() {
		this.basketMode = 'ADD';
		this.Basket();
	};

	window.JCCatalogElement.prototype.BuyBasket = function() {
		this.basketMode = 'BUY';
		this.Basket();
	};

	window.JCCatalogElement.prototype.Basket = function() {
		var contentBasketProps = '';
		if( !this.canBuy )
		{
			return;
		}
		this.SendToBasket();
	};

	window.JCCatalogElement.prototype.BasketResult = function( arResult ) {
		var popupContent, popupButtons, popupTitle, productPict;
		if( !!this.obPopupWin )
		{
			this.obPopupWin.close();
		}
		if( typeof arResult !== 'object' )
		{
			return false;
		}
		if( arResult.STATUS === 'OK' && this.basketMode === 'BUY' )
		{
			this.BasketRedirect();
		}
		else
		{
			// this.InitPopupWindow();
			popupTitle = {
				content: BX.create( 'div', {
					style: { marginRight: '30px', whiteSpace: 'nowrap' },
					text: (arResult.STATUS === 'OK' ? BX.message( 'TITLE_SUCCESSFUL' ) : BX.message( 'TITLE_ERROR' ))
				} )
			};
			if( arResult.STATUS === 'OK' )
			{
				BX.onCustomEvent( 'OnBasketChange' );
				this.offers[ this.offerNum ].BASKET_ACTIVE = true;
				this.BasketStateRefresh( "Y" );
			}
			else
			{
				console.log( BX.message( 'ADD_ERROR_BASKET' ) );
			}
		}
		return false;
	};

	window.JCCatalogElement.prototype.BasketRedirect = function() {
		location.href = (!!this.basketData.basketUrl ? this.basketData.basketUrl : BX.message( 'BASKET_URL' ));
	};

	window.JCCatalogElement.prototype.InitPopupWindow = function() {
		if( !!this.obPopupWin )
		{
			return;
		}
		this.obPopupWin = BX.PopupWindowManager.create( 'CatalogElementBasket_' + this.visual.ID, null, {
			autoHide: false,
			offsetLeft: 0,
			offsetTop: 0,
			overlay: true,
			closeByEsc: true,
			titleBar: true,
			closeIcon: { top: '10px', right: '10px' }
		} );
	};

	window.JCCatalogElement.prototype.onPopupWindowShow = function( popup ) {
		BX.bind( document, 'click', BX.proxy( this.popupWindowClick, this ) );
	};

	window.JCCatalogElement.prototype.onPopupWindowClose = function( popup, event ) {
		BX.unbind( document, 'click', BX.proxy( this.popupWindowClick, this ) );
	};

	window.JCCatalogElement.prototype.popupWindowClick = function() {
		if( !!this.obPopupPict && typeof (this.obPopupPict) === 'object' )
		{
			if( this.obPopupPict.isShown() )
			{
				this.obPopupPict.close();
			}
		}
	};

	window.JCCatalogElement.prototype.incViewedCounter = function() {
		if( this.currentIsSet && !this.updateViewedCount )
		{

			switch( this.productType )
			{
				case 1:
				case 2:
					this.viewedCounter.params.PRODUCT_ID = this.product.id;
					this.viewedCounter.params.PARENT_ID = this.product.id;
					break;
				case 3:
					this.viewedCounter.params.PARENT_ID = this.product.id;
					this.viewedCounter.params.PRODUCT_ID = this.offers[ this.offerNum ].ID;
					break;
				default:
					return;
			}
			this.viewedCounter.params.SITE_ID = BX.message( 'SITE_ID' );
			this.updateViewedCount = true;
			BX.ajax.post(
				this.viewedCounter.path,
				this.viewedCounter.params,
				BX.delegate( function() {
					this.updateViewedCount = false;
				}, this )
			);
		}
	};

	window.JCCatalogElement.prototype.allowViewedCount = function( update ) {
		update = !!update;
		this.currentIsSet = true;
		if( update )
		{
			this.incViewedCounter();
		}
	};
})( window );
/* End */
;
; /* Start:"a:4:{s:4:"full";s:104:"/local/templates/aspro_max/components/bitrix/sale.prediction.product.detail/main/script.js?1618401024579";s:6:"source";s:90:"/local/templates/aspro_max/components/bitrix/sale.prediction.product.detail/main/script.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
(function (window) {
})(window);

function bx_sale_prediction_product_detail_load(injectId, localAjaxData, additionalData)
{
	localAjaxData = localAjaxData || {};
	additionalData = additionalData || {};

	BX.ajax({
		url: '/bitrix/components/bitrix/sale.prediction.product.detail/ajax.php',
		method: 'POST',
		data: BX.merge(localAjaxData, additionalData),
		dataType: 'html',
		processData: false,
		start: true,
		onsuccess: function (html) {
			var ob = BX.processHTML(html);

			// inject
			BX(injectId).innerHTML = ob.HTML;
			BX.ajax.processScripts(ob.SCRIPT);
		}
	});
}
/* End */
;
; /* Start:"a:4:{s:4:"full";s:93:"/local/templates/aspro_max/components/bitrix/sale.gift.product/main/script.js?161840102449278";s:6:"source";s:77:"/local/templates/aspro_max/components/bitrix/sale.gift.product/main/script.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
(function (window) {
if (!window.JCCatalogSectionOnlyElement)
{

	window.JCCatalogSectionOnlyElement = function (arParams)
	{
		if (typeof arParams === 'object')
		{
			this.params = arParams;

			this.obProduct = null;
			this.set_quantity = 1;

			this.currentPriceMode = '';
			this.currentPrices = [];
			this.currentPriceSelected = 0;
			this.currentQuantityRanges = [];
			this.currentQuantityRangeSelected = 0;

			if (this.params.MESS)
			{
				this.mess = this.params.MESS;
			}

			this.init();
		}
	}
	window.JCCatalogSectionOnlyElement.prototype = {
		init: function()
		{
			var i = 0,
				j = 0,
				treeItems = null;

			this.obProduct = BX(this.params.ID);

			if(!!this.obProduct)
			{
				$(this.obProduct).find('.counter_wrapp .counter_block input').data('product', 'ob'+this.obProduct.id+'el');
				this.currentPriceMode = this.params.ITEM_PRICE_MODE;
				this.currentPrices = this.params.ITEM_PRICES;
				this.currentQuantityRanges = this.params.ITEM_QUANTITY_RANGES;
			}

		},

		setPriceAction: function()
		{
			this.set_quantity = this.params.MIN_QUANTITY_BUY;			
			if($(this.obProduct).find('input[name=quantity]').length)
				this.set_quantity = $(this.obProduct).find('input[name=quantity]').val();
			
			this.checkPriceRange(this.set_quantity);

			$(this.obProduct).find('.not_matrix').hide();
			$(this.obProduct).find('.with_matrix .price_value_block').html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].PRICE, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_PRICE));

			if($(this.obProduct).find('.with_matrix .discount'))
			{
				$(this.obProduct).find('.with_matrix .discount').html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].BASE_PRICE, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_BASE_PRICE));
			}

			if(this.params.SHOW_DISCOUNT_PERCENT_NUMBER == 'Y')
			{
				if(this.currentPrices[this.currentPriceSelected].PERCENT > 0 && this.currentPrices[this.currentPriceSelected].PERCENT < 100)
				{
					if(!$(this.obProduct).find('.with_matrix .sale_block .sale_wrapper .value').length)
						$('<div class="value"></div>').insertBefore($(this.obProduct).find('.with_matrix .sale_block .sale_wrapper .text'));

					$(this.obProduct).find('.with_matrix .sale_block .sale_wrapper .value').html('-<span>'+this.currentPrices[this.currentPriceSelected].PERCENT+'</span>%');
				}
				else
				{
					if($(this.obProduct).find('.with_matrix .sale_block .sale_wrapper .value').length)
						$(this.obProduct).find('.with_matrix .sale_block .sale_wrapper .value').remove();
				}
			}
			$(this.obProduct).find('.with_matrix .sale_block .text .values_wrapper').html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].DISCOUNT, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_DISCOUNT));
			
			$(this.obProduct).find('.with_matrix').show();

			if(arMaxOptions['THEME']['SHOW_TOTAL_SUMM'] == 'Y')
			{
				setPriceItem($(this.obProduct), this.set_quantity, this.currentPrices[this.currentPriceSelected].PRICE);
			}
		},

		checkPriceRange: function(quantity)
		{
			if (typeof quantity === 'undefined'|| this.currentPriceMode != 'Q')
				return;

			var range, found = false;
			
			for (var i in this.currentQuantityRanges)
			{
				if (this.currentQuantityRanges.hasOwnProperty(i))
				{
					range = this.currentQuantityRanges[i];

					if (
						parseInt(quantity) >= parseInt(range.SORT_FROM)
						&& (
							range.SORT_TO == 'INF'
							|| parseInt(quantity) <= parseInt(range.SORT_TO)
						)
					)
					{
						found = true;
						this.currentQuantityRangeSelected = range.HASH;
						break;
					}
				}
			}

			if (!found && (range = this.getMinPriceRange()))
			{
				this.currentQuantityRangeSelected = range.HASH;
			}

			for (var k in this.currentPrices)
			{
				if (this.currentPrices.hasOwnProperty(k))
				{
					if (this.currentPrices[k].QUANTITY_HASH == this.currentQuantityRangeSelected)
					{
						this.currentPriceSelected = k;
						break;
					}
				}
			}
		},

		getMinPriceRange: function()
		{
			var range;

			for (var i in this.currentQuantityRanges)
			{
				if (this.currentQuantityRanges.hasOwnProperty(i))
				{
					if (
						!range
						|| parseInt(this.currentQuantityRanges[i].SORT_FROM) < parseInt(range.SORT_FROM)
					)
					{
						range = this.currentQuantityRanges[i];
					}
				}
			}

			return range;
		}
	}
}

if (!!window.JCSaleGiftProduct)
{
	return;
}

var BasketButton = function(params)
{
	BasketButton.superclass.constructor.apply(this, arguments);
	this.nameNode = BX.create('span', {
		props : { className : 'bx_medium bx_bt_button', id : this.id },
		text: params.text
	});
	this.buttonNode = BX.create('span', {
		attrs: { className: params.ownerClass },
		style: { marginBottom: '0', borderBottom: '0 none transparent' },
		children: [this.nameNode],
		events : this.contextEvents
	});
	if (BX.browser.IsIE())
	{
		this.buttonNode.setAttribute("hideFocus", "hidefocus");
	}
};
BX.extend(BasketButton, BX.PopupWindowButton);

window.JCSaleGiftProduct = function (arParams)
{
	this.skuVisualParams = {
		SELECT:
		{
			TAG_BIND: 'select',
			TAG: 'option',
			ACTIVE_CLASS: 'active',
			HIDE_CLASS: 'hidden',
			EVENT: 'change',
		},
		LI:
		{
			TAG_BIND: 'li',
			TAG: 'li',
			ACTIVE_CLASS: 'active',
			HIDE_CLASS: 'missing',
			EVENT: 'click',
		}
	};
	this.productType = 0;
	this.showQuantity = true;
	this.showAbsent = true;
	this.secondPict = false;
	this.showOldPrice = false;
	this.showPercent = false;
	this.showSkuProps = false;
	this.showPercentNumber = false;
	this.visual = {
		ID: '',
		PICT_ID: '',
		SECOND_PICT_ID: '',
		QUANTITY_ID: '',
		QUANTITY_UP_ID: '',
		QUANTITY_DOWN_ID: '',
		PRICE_ID: '',
		DSC_PERC: '',
		SECOND_DSC_PERC: '',
		DISPLAY_PROP_DIV: '',
		BASKET_PROP_DIV: ''
	};
	this.product = {
		checkQuantity: false,
		maxQuantity: 0,
		stepQuantity: 1,
		isDblQuantity: false,
		canBuy: true,
		canSubscription: true,
		name: '',
		pict: {},
		id: 0,
		addUrl: '',
		buyUrl: ''
	};
	this.basketData = {
		useProps: false,
		emptyProps: false,
		quantity: 'quantity',
		props: 'prop',
		basketUrl: ''
	};

	this.defaultPict = {
		pict: null,
		secondPict: null
	};

	this.checkQuantity = false;
	this.maxQuantity = 0;
	this.stepQuantity = 1;
	this.isDblQuantity = false;
	this.canBuy = true;
	this.canSubscription = true;
	this.precision = 6;
	this.precisionFactor = Math.pow(10,this.precision);

	this.currentPriceMode = '';
	this.currentPrices = [];
	this.currentPriceSelected = 0;
	this.currentQuantityRanges = [];
	this.currentQuantityRangeSelected = 0;

	this.offers = [];
	this.offerNum = 0;
	this.treeProps = [];
	this.obTreeRows = [];
	this.showCount = [];
	this.showStart = [];
	this.selectedValues = {};

	this.obProduct = null;
	this.obQuantity = null;
	this.obQuantityUp = null;
	this.obQuantityDown = null;
	this.obPict = null;
	this.obSecondPict = null;
	this.obPrice = null;
	this.obTree = null;
	this.obBuyBtn = null;
	this.obDscPerc = null;
	this.obSecondDscPerc = null;
	this.obSkuProps = null;
	this.obMeasure = null;

	this.obPopupWin = null;
	this.basketUrl = '';
	this.basketParams = {};

	this.treeRowShowSize = 5;
	this.treeEnableArrow = { display: '', cursor: 'pointer', opacity: 1 };
	this.treeDisableArrow = { display: '', cursor: 'default', opacity:0.2 };

	this.lastElement = false;
	this.containerHeight = 0;

	this.errorCode = 0;

	if ('object' === typeof arParams)
	{
		this.productType = parseInt(arParams.PRODUCT_TYPE, 10);
		this.showQuantity = arParams.SHOW_QUANTITY;
		this.showAbsent = arParams.SHOW_ABSENT;
		this.secondPict = !!arParams.SECOND_PICT;
		this.showOldPrice = !!arParams.SHOW_OLD_PRICE;
		this.showPercent = !!arParams.SHOW_DISCOUNT_PERCENT;
		this.showSkuProps = !!arParams.SHOW_SKU_PROPS;
		this.showPercentNumber = (arParams.SHOW_DISCOUNT_PERCENT_NUMBER == "Y");

		this.visual = arParams.VISUAL;
		switch (this.productType)
		{
			case 1://product
			case 2://set
				if (!!arParams.PRODUCT && 'object' === typeof(arParams.PRODUCT))
				{
					if (this.showQuantity)
					{
						this.product.checkQuantity = arParams.PRODUCT.CHECK_QUANTITY;
						this.product.isDblQuantity = arParams.PRODUCT.QUANTITY_FLOAT;
						if (this.product.checkQuantity)
						{
							this.product.maxQuantity = (this.product.isDblQuantity ? parseFloat(arParams.PRODUCT.MAX_QUANTITY) : parseInt(arParams.PRODUCT.MAX_QUANTITY, 10));
						}
						this.product.stepQuantity = (this.product.isDblQuantity ? parseFloat(arParams.PRODUCT.STEP_QUANTITY) : parseInt(arParams.PRODUCT.STEP_QUANTITY, 10));

						this.checkQuantity = this.product.checkQuantity;
						this.isDblQuantity = this.product.isDblQuantity;
						this.maxQuantity = this.product.maxQuantity;
						this.stepQuantity = this.product.stepQuantity;
						if (this.isDblQuantity)
						{
							this.stepQuantity = Math.round(this.stepQuantity*this.precisionFactor)/this.precisionFactor;
						}
					}
					this.product.canBuy = arParams.PRODUCT.CAN_BUY;
					this.product.canSubscription = arParams.PRODUCT.SUBSCRIPTION;

					this.canBuy = this.product.canBuy;
					this.canSubscription = this.product.canSubscription;

					this.product.name = arParams.PRODUCT.NAME;
					this.product.pict = arParams.PRODUCT.PICT;
					this.product.id = arParams.PRODUCT.ID;
					if (!!arParams.PRODUCT.ADD_URL)
					{
						this.product.addUrl = arParams.PRODUCT.ADD_URL;
					}
					if (!!arParams.PRODUCT.BUY_URL)
					{
						this.product.buyUrl = arParams.PRODUCT.BUY_URL;
					}
					if (!!arParams.BASKET && 'object' === typeof(arParams.BASKET))
					{
						this.basketData.useProps = !!arParams.BASKET.ADD_PROPS;
						this.basketData.emptyProps = !!arParams.BASKET.EMPTY_PROPS;
					}
				}
				else
				{
					this.errorCode = -1;
				}
				break;
			case 3://sku
				if (!!arParams.OFFERS && BX.type.isArray(arParams.OFFERS))
				{
					if (!!arParams.PRODUCT && 'object' === typeof(arParams.PRODUCT))
					{
						this.product.name = arParams.PRODUCT.NAME;
						this.product.id = arParams.PRODUCT.ID;
					}
					this.offers = arParams.OFFERS;
					this.offerNum = 0;
					if (!!arParams.OFFER_SELECTED)
					{
						this.offerNum = parseInt(arParams.OFFER_SELECTED, 10);
					}
					if (isNaN(this.offerNum))
					{
						this.offerNum = 0;
					}
					if (!!arParams.TREE_PROPS)
					{
						this.treeProps = arParams.TREE_PROPS;
					}
					if (!!arParams.DEFAULT_PICTURE)
					{
						this.defaultPict.pict = arParams.DEFAULT_PICTURE.PICTURE;
						this.defaultPict.secondPict = arParams.DEFAULT_PICTURE.PICTURE_SECOND;
					}
				}
				else
				{
					this.errorCode = -1;
				}
				break;
			default:
				this.errorCode = -1;
		}
		if (!!arParams.BASKET && 'object' === typeof(arParams.BASKET))
		{
			if (!!arParams.BASKET.QUANTITY)
			{
				this.basketData.quantity = arParams.BASKET.QUANTITY;
			}
			if (!!arParams.BASKET.PROPS)
			{
				this.basketData.props = arParams.BASKET.PROPS;
			}
			if (!!arParams.BASKET.BASKET_URL)
			{
				this.basketData.basketUrl = arParams.BASKET.BASKET_URL;
			}
		}
		this.lastElement = (!!arParams.LAST_ELEMENT && 'Y' === arParams.LAST_ELEMENT);
	}
	if (0 === this.errorCode)
	{
		BX.ready(BX.delegate(this.Init,this));
	}
};

window.JCSaleGiftProduct.prototype.Init = function()
{
	var i = 0,
		strPrefix = '',
		TreeItems = null;

	this.obProduct = BX(this.visual.ID);

	if (!this.obProduct)
	{
		this.errorCode = -1;
	}
	this.obPict = BX(this.visual.PICT_ID);
	if (!this.obPict)
	{
		this.errorCode = -2;
	}
	if (this.secondPict && !!this.visual.SECOND_PICT_ID)
	{
		this.obSecondPict = BX(this.visual.SECOND_PICT_ID);
	}
	this.storeQuanity = BX(this.visual.STORE_QUANTITY);
	this.obPrice = BX(this.visual.PRICE_ID);
	this.obPriceOld = BX(this.visual.PRICE_OLD_ID);
	if (!this.obPrice)
	{
		this.errorCode = -16;
	}
	if (this.showQuantity && !!this.visual.QUANTITY_ID)
	{
		this.obQuantity = BX(this.visual.QUANTITY_ID);
		if (!!this.visual.QUANTITY_UP_ID)
		{
			this.obQuantityUp = BX(this.visual.QUANTITY_UP_ID);
		}
		if (!!this.visual.QUANTITY_DOWN_ID)
		{
			this.obQuantityDown = BX(this.visual.QUANTITY_DOWN_ID);
		}
	}
	if (3 === this.productType)
	{
		if (!!this.visual.TREE_ID)
		{
			this.obTree = BX(this.visual.TREE_ID);
			if (!this.obTree)
			{
				this.errorCode = -256;
			}
			strPrefix = this.visual.TREE_ITEM_ID;

			for (i = 0; i < this.treeProps.length; i++)
			{
				this.obTreeRows[i] = {
					LIST: BX(strPrefix+this.treeProps[i].ID+'_list'),
					CONT: BX(strPrefix+this.treeProps[i].ID+'_cont')
				};
				
				if (!this.obTreeRows[i].LIST || !this.obTreeRows[i].CONT)
				{
					this.errorCode = -512;
					break;
				}
			}
		}
		if (!!this.visual.QUANTITY_MEASURE)
		{
			this.obMeasure = BX(this.visual.QUANTITY_MEASURE);
		}
	}
	if (!!this.visual.BUY_ID)
	{
		this.obBuyBtn = BX(this.visual.BUY_ID);
	}

	if (this.showPercent)
	{
		if (!!this.visual.DSC_PERC)
		{
			this.obDscPerc = BX(this.visual.DSC_PERC);
		}
		if (this.secondPict && !!this.visual.SECOND_DSC_PERC)
		{
			this.obSecondDscPerc = BX(this.visual.SECOND_DSC_PERC);
		}
	}

	if (this.showSkuProps)
	{
		if (!!this.visual.DISPLAY_PROP_DIV)
		{
			this.obSkuProps = BX(this.visual.DISPLAY_PROP_DIV);
		}
	}
	
	if (0 === this.errorCode)
	{
		if (this.showQuantity)
		{
			if (!!this.obQuantityUp)
			{
				BX.bind(this.obQuantityUp, 'click', BX.delegate(this.QuantityUp, this));
			}
			if (!!this.obQuantityDown)
			{
				BX.bind(this.obQuantityDown, 'click', BX.delegate(this.QuantityDown, this));
			}
			if (!!this.obQuantity)
			{
				BX.bind(this.obQuantity, 'change', BX.delegate(this.QuantityChange, this));
			}
		}

		switch (this.productType)
		{
			case 1://product
				break;
			case 3://sku
				for(var key in this.skuVisualParams){
					var TreeItems = BX.findChildren(this.obTree, {tagName: this.skuVisualParams[key].TAG_BIND}, true);
					if (!!TreeItems && 0 < TreeItems.length){
						for (i = 0; i < TreeItems.length; i++){
							$(TreeItems[i]).on(this.skuVisualParams[key].EVENT, BX.delegate(this.SelectOfferProp, this));
							//BX.bind(TreeItems[i], this.skuVisualParams[key].EVENT, BX.delegate(this.SelectOfferProp, this));
						}
					}
				}

				this.SetCurrent();
				break;
		}
		if (!!this.obBuyBtn)
		{
			BX.bind(this.obBuyBtn, 'click', BX.delegate(this.Basket, this));
		}
	}

};

window.JCSaleGiftProduct.prototype.checkHeight = function()
{
	this.containerHeight = parseInt(this.obProduct.parentNode.offsetHeight, 10);
	if (isNaN(this.containerHeight))
	{
		this.containerHeight = 0;
	}
};

window.JCSaleGiftProduct.prototype.setHeight = function()
{
	if (0 < this.containerHeight)
	{
		BX.adjust(this.obProduct.parentNode, {style: { height: this.containerHeight+'px'}});
	}
};

window.JCSaleGiftProduct.prototype.clearHeight = function()
{
	BX.adjust(this.obProduct.parentNode, {style: { height: 'auto'}});
};

window.JCSaleGiftProduct.prototype.QuantityUp = function()
{
	var curValue = 0,
		boolSet = true;

	if (0 === this.errorCode && this.showQuantity && this.canBuy)
	{
		curValue = (this.isDblQuantity ? parseFloat(this.obQuantity.value) : parseInt(this.obQuantity.value, 10));
		if (!isNaN(curValue))
		{
			curValue += this.stepQuantity;
			if (this.checkQuantity)
			{
				if (curValue > this.maxQuantity)
				{
					boolSet = false;
				}
			}
			if (boolSet)
			{
				if (this.isDblQuantity)
				{
					curValue = Math.round(curValue*this.precisionFactor)/this.precisionFactor;
				}
				this.obQuantity.value = curValue;
			}
		}
	}
};

window.JCSaleGiftProduct.prototype.QuantityDown = function()
{
	var curValue = 0,
		boolSet = true;

	if (0 === this.errorCode && this.showQuantity && this.canBuy)
	{
		curValue = (this.isDblQuantity ? parseFloat(this.obQuantity.value): parseInt(this.obQuantity.value, 10));
		if (!isNaN(curValue))
		{
			curValue -= this.stepQuantity;
			if (curValue < this.stepQuantity)
			{
				boolSet = false;
			}
			if (boolSet)
			{
				if (this.isDblQuantity)
				{
					curValue = Math.round(curValue*this.precisionFactor)/this.precisionFactor;
				}
				this.obQuantity.value = curValue;
			}
		}
	}
};

window.JCSaleGiftProduct.prototype.QuantityChange = function()
{
	var curValue = 0,
		boolSet = true;

	if (0 === this.errorCode && this.showQuantity)
	{
		if (this.canBuy)
		{
			curValue = (this.isDblQuantity ? parseFloat(this.obQuantity.value) : parseInt(this.obQuantity.value, 10));
			if (!isNaN(curValue))
			{
				if (this.checkQuantity)
				{
					if (curValue > this.maxQuantity)
					{
						boolSet = false;
						curValue = this.maxQuantity;
					}
					else if (curValue < this.stepQuantity)
					{
						boolSet = false;
						curValue = this.stepQuantity;
					}
				}
				if (!boolSet)
				{
					this.obQuantity.value = curValue;
				}
			}
			else
			{
				this.obQuantity.value = this.stepQuantity;
			}
		}
		else
		{
			this.obQuantity.value = this.stepQuantity;
		}
	}
};

window.JCSaleGiftProduct.prototype.QuantitySet = function(index)
{
	if (0 === this.errorCode)
	{
		this.canBuy = this.offers[index].CAN_BUY;
		this.currentPriceMode = this.offers[index].ITEM_PRICE_MODE;
		this.currentPrices = this.offers[index].ITEM_PRICES;
		this.currentPriceSelected = this.offers[index].ITEM_PRICE_SELECTED;
		this.currentQuantityRanges = this.offers[index].ITEM_QUANTITY_RANGES;
		this.currentQuantityRangeSelected = this.offers[index].ITEM_QUANTITY_RANGE_SELECTED;

		if (this.canBuy)
		{
			if (!!this.obBasketActions)
			{
				BX.style(this.obBasketActions, 'display', '');
			}
			if (!!this.obNotAvail)
			{
				BX.style(this.obNotAvail, 'display', 'none');
			}
		}
		else
		{
			if (!!this.obBasketActions)
			{
				//BX.style(this.obBasketActions, 'display', 'none');
				BX.style(this.obBasketActions, 'opacity', '0');
				BX.style(BX.findParent(BX(this.obQuantity), { 'class':'counter_block' }), 'display', 'none');
			}
			if (!!this.obNotAvail)
			{
				BX.style(this.obNotAvail, 'display', '');
			}
		}
		if (this.showQuantity)
		{
			this.isDblQuantity = this.offers[index].QUANTITY_FLOAT;
			this.checkQuantity = this.offers[index].CHECK_QUANTITY;
			if (this.isDblQuantity)
			{
				this.maxQuantity = parseFloat(this.offers[index].MAX_QUANTITY);
				this.stepQuantity = Math.round(parseFloat(this.offers[index].STEP_QUANTITY)*this.precisionFactor)/this.precisionFactor;
			}
			else
			{
				this.maxQuantity = parseInt(this.offers[index].MAX_QUANTITY, 10);
				this.stepQuantity = parseInt(this.offers[index].STEP_QUANTITY, 10);
			}
			if(!!this.obQuantity){
				this.obQuantity.value = this.defaultCount;
				this.obQuantity.disabled = !this.canBuy;
			}
			if (!!this.obMeasure)
			{
				if (!!this.offers[index].MEASURE)
				{
					BX.adjust(this.obMeasure, { html : this.offers[index].MEASURE});
				}
				else
				{
					BX.adjust(this.obMeasure, { html : ''});
				}
			}
		}
		this.currentBasisPrice = this.offers[index].BASIS_PRICE;
	}
};

/*window.JCSaleGiftProduct.prototype.QuantitySet = function(index)
{
	if (0 === this.errorCode)
	{
		this.canBuy = this.offers[index].CAN_BUY;
		if (this.canBuy)
		{
			BX.addClass(this.obBuyBtn, 'bx_bt_button');
			BX.removeClass(this.obBuyBtn, 'bx_bt_button_type_2');
			this.obBuyBtn.innerHTML = BX.message('CVP_MESS_BTN_BUY');
		}
		else
		{
			BX.addClass(this.obBuyBtn, 'bx_bt_button_type_2');
			BX.removeClass(this.obBuyBtn, 'bx_bt_button');
			this.obBuyBtn.innerHTML = BX.message('CVP_MESS_NOT_AVAILABLE');
		}
		if (this.showQuantity)
		{
			this.isDblQuantity = this.offers[index].QUANTITY_FLOAT;
			this.checkQuantity = this.offers[index].CHECK_QUANTITY;
			if (this.isDblQuantity)
			{
				this.maxQuantity = parseFloat(this.offers[index].MAX_QUANTITY);
				this.stepQuantity = Math.round(parseFloat(this.offers[index].STEP_QUANTITY)*this.precisionFactor)/this.precisionFactor;
			}
			else
			{
				this.maxQuantity = parseInt(this.offers[index].MAX_QUANTITY, 10);
				this.stepQuantity = parseInt(this.offers[index].STEP_QUANTITY, 10);
			}

			this.obQuantity.value = this.stepQuantity;
			this.obQuantity.disabled = !this.canBuy;
			if (!!this.obMeasure)
			{
				if (!!this.offers[index].MEASURE)
				{
					BX.adjust(this.obMeasure, { html : this.offers[index].MEASURE});
				}
				else
				{
					BX.adjust(this.obMeasure, { html : ''});
				}
			}
		}
	}
};*/

window.JCSaleGiftProduct.prototype.SelectOfferProp = function()
{
	var i = 0,
		value = '',
		strTreeValue = '',
		arTreeItem = [],
		RowItems = null,
		target = BX.proxy_context;

	if (!!target && target.hasAttribute('data-treevalue'))
	{
		strTreeValue = target.getAttribute('data-treevalue');
		propModes = target.getAttribute('data-showtype');
		arTreeItem = strTreeValue.split('_');
		if (this.SearchOfferPropIndex(arTreeItem[0], arTreeItem[1]))
		{
			/*RowItems = BX.findChildren(target.parentNode, {tagName: 'li'}, false);
			if (!!RowItems && 0 < RowItems.length)
			{
				for (i = 0; i < RowItems.length; i++)
				{
					value = RowItems[i].getAttribute('data-onevalue');
					if (value === arTreeItem[1])
					{
						BX.addClass(RowItems[i], 'bx_active');
					}
					else
					{
						BX.removeClass(RowItems[i], 'bx_active');
					}
				}
			}*/

			RowItems = BX.findChildren(target.parentNode, {tagName: this.skuVisualParams[propModes.toUpperCase()].TAG}, false);

			if (!!RowItems && 0 < RowItems.length)
			{
				for (i = 0; i < RowItems.length; i++)
				{
					value = RowItems[i].getAttribute('data-onevalue');

					// for SELECTBOXES
					if(propModes == 'TEXT'){
						if (value === arTreeItem[1]){
							RowItems[i].setAttribute('selected', 'selected');
						}else{
							RowItems[i].removeAttribute('selected');
						}
					}else{
						if (value === arTreeItem[1]){
							$(RowItems[i]).addClass(this.skuVisualParams[propModes.toUpperCase()].ACTIVE_CLASS);
						}else{
							$(RowItems[i]).removeClass(this.skuVisualParams[propModes.toUpperCase()].ACTIVE_CLASS);
						}
					}
				}
			}
		}
	}
};

window.JCSaleGiftProduct.prototype.SearchOfferPropIndex = function(strPropID, strPropValue)
{
	var strName = '',
		arShowValues = false,
		i, j,
		arCanBuyValues = [],
		index = -1,
		arFilter = {},
		tmpFilter = [];

	for (i = 0; i < this.treeProps.length; i++)
	{
		if (this.treeProps[i].ID === strPropID)
		{
			index = i;
			break;
		}
	}

	if (-1 < index)
	{
		for (i = 0; i < index; i++)
		{
			strName = 'PROP_'+this.treeProps[i].ID;
			arFilter[strName] = this.selectedValues[strName];
		}
		strName = 'PROP_'+this.treeProps[index].ID;
		arShowValues = this.GetRowValues(arFilter, strName);
		if (!arShowValues)
		{
			return false;
		}
		if (!BX.util.in_array(strPropValue, arShowValues))
		{
			return false;
		}
		arFilter[strName] = strPropValue;
		for (i = index+1; i < this.treeProps.length; i++)
		{
			strName = 'PROP_'+this.treeProps[i].ID;
			arShowValues = this.GetRowValues(arFilter, strName);
			if (!arShowValues)
			{
				return false;
			}
			if (this.showAbsent)
			{
				arCanBuyValues = [];
				tmpFilter = [];
				tmpFilter = BX.clone(arFilter, true);
				for (j = 0; j < arShowValues.length; j++)
				{
					tmpFilter[strName] = arShowValues[j];
					if (this.GetCanBuy(tmpFilter))
					{
						arCanBuyValues[arCanBuyValues.length] = arShowValues[j];
					}
				}
			}
			else
			{
				arCanBuyValues = arShowValues;
			}
			if (!!this.selectedValues[strName] && BX.util.in_array(this.selectedValues[strName], arCanBuyValues))
			{
				arFilter[strName] = this.selectedValues[strName];
			}
			else
			{
				arFilter[strName] = arCanBuyValues[0];
			}
			this.UpdateRow(i, arFilter[strName], arShowValues, arCanBuyValues);
		}
		this.selectedValues = arFilter;
		this.ChangeInfo();
	}
	return true;
};

window.JCSaleGiftProduct.prototype.RowLeft = function()
{
	var i = 0,
		strTreeValue = '',
		index = -1,
		target = BX.proxy_context;

	if (!!target && target.hasAttribute('data-treevalue'))
	{
		strTreeValue = target.getAttribute('data-treevalue');
		for (i = 0; i < this.treeProps.length; i++)
		{
			if (this.treeProps[i].ID === strTreeValue)
			{
				index = i;
				break;
			}
		}
		if (-1 < index && this.treeRowShowSize < this.showCount[index])
		{
			if (0 > this.showStart[index])
			{
				this.showStart[index]++;
				BX.adjust(this.obTreeRows[index].LIST, { style: { marginLeft: this.showStart[index]*20+'%' }});
				BX.adjust(this.obTreeRows[index].RIGHT, { style: this.treeEnableArrow });
			}

			if (0 <= this.showStart[index])
			{
				BX.adjust(this.obTreeRows[index].LEFT, { style: this.treeDisableArrow });
			}
		}
	}
};

window.JCSaleGiftProduct.prototype.RowRight = function()
{
	var i = 0,
		strTreeValue = '',
		index = -1,
		target = BX.proxy_context;

	if (!!target && target.hasAttribute('data-treevalue'))
	{
		strTreeValue = target.getAttribute('data-treevalue');
		for (i = 0; i < this.treeProps.length; i++)
		{
			if (this.treeProps[i].ID === strTreeValue)
			{
				index = i;
				break;
			}
		}
		if (-1 < index && this.treeRowShowSize < this.showCount[index])
		{
			if ((this.treeRowShowSize - this.showStart[index]) < this.showCount[index])
			{
				this.showStart[index]--;
				BX.adjust(this.obTreeRows[index].LIST, { style: { marginLeft: this.showStart[index]*20+'%' }});
				BX.adjust(this.obTreeRows[index].LEFT, { style: this.treeEnableArrow });
			}

			if ((this.treeRowShowSize - this.showStart[index]) >= this.showCount[index])
			{
				BX.adjust(this.obTreeRows[index].RIGHT, { style: this.treeDisableArrow });
			}
		}
	}
};

window.JCSaleGiftProduct.prototype.UpdateRow = function(intNumber, activeID, showID, canBuyID)
{
	var i = 0,
		showI = 0,
		value = '',
		countShow = 0,
		strNewLen = '',
		obData = {},
		pictMode = false,
		extShowMode = false,
		isCurrent = false,
		selectIndex = 0,
		obLeft = this.treeEnableArrow,
		obRight = this.treeEnableArrow,
		currentShowStart = 0,
		RowItems = null;


	if (-1 < intNumber && intNumber < this.obTreeRows.length){

		propMode = this.treeProps[intNumber].DISPLAY_TYPE;
		RowItems = BX.findChildren(this.obTreeRows[intNumber].LIST, {tagName: this.skuVisualParams[propMode].TAG}, false);
		if (!!RowItems && 0 < RowItems.length){
			selectMode = ('SELECT' === this.treeProps[intNumber].DISPLAY_TYPE);
			countShow = showID.length;
			obData = {
				style: {},
				props: {
					disabled: '',
					selected: '',
				},
			};

			for (i = 0; i < RowItems.length; i++){
				value = RowItems[i].getAttribute('data-onevalue');
				isCurrent = (value === activeID && value !=0);
				if (BX.util.in_array(value, canBuyID)){
					obData.props.className = (isCurrent ? this.skuVisualParams[propMode].ACTIVE_CLASS : '');
				}else{
					obData.props.className = (isCurrent ? this.skuVisualParams[propMode].ACTIVE_CLASS+' '+this.skuVisualParams[propMode].HIDE_CLASS : this.skuVisualParams[propMode].HIDE_CLASS);
				}
				// obData.props.className = (isCurrent ? this.skuVisualParams[propMode].ACTIVE_CLASS : '');

				if(selectMode){
					obData.props.disabled = 'disabled';
					obData.props.selected = (isCurrent ? 'selected' : '');
				}else{
					obData.style.display = 'none';
				}

				if (BX.util.in_array(value, showID)){
					if(selectMode){
						obData.props.disabled = '';
					}else{
						obData.style.display = '';
					}
					if (isCurrent){
						selectIndex = showI;
					}
					showI++;
				}
				BX.adjust(RowItems[i], obData);
			}

			if(selectMode){
				if($(this.obTreeRows[intNumber].LIST).parent().hasClass('ik_select'))
					$(this.obTreeRows[intNumber].LIST).ikSelect('reset');
			}

			this.showCount[intNumber] = countShow;
			this.showStart[intNumber] = currentShowStart;
		}
	}
};

window.JCSaleGiftProduct.prototype.GetRowValues = function(arFilter, index)
{
	var i = 0,
		j,
		arValues = [],
		boolSearch = false,
		boolOneSearch = true;

	if (0 === arFilter.length)
	{
		for (i = 0; i < this.offers.length; i++)
		{
			if (!BX.util.in_array(this.offers[i].TREE[index], arValues))
			{
				arValues[arValues.length] = this.offers[i].TREE[index];
			}
		}
		boolSearch = true;
	}
	else
	{
		for (i = 0; i < this.offers.length; i++)
		{
			boolOneSearch = true;
			for (j in arFilter)
			{
				if (arFilter[j] !== this.offers[i].TREE[j])
				{
					boolOneSearch = false;
					break;
				}
			}
			if (boolOneSearch)
			{
				if (!BX.util.in_array(this.offers[i].TREE[index], arValues))
				{
					arValues[arValues.length] = this.offers[i].TREE[index];
				}
				boolSearch = true;
			}
		}
	}
	return (boolSearch ? arValues : false);
};

window.JCSaleGiftProduct.prototype.GetCanBuy = function(arFilter)
{
	var i = 0,
		j,
		boolSearch = false,
		boolOneSearch = true;

	for (i = 0; i < this.offers.length; i++)
	{
		boolOneSearch = true;
		for (j in arFilter)
		{
			if (arFilter[j] !== this.offers[i].TREE[j])
			{
				boolOneSearch = false;
				break;
			}
		}
		if (boolOneSearch)
		{
			if (this.offers[i].CAN_BUY)
			{
				boolSearch = true;
				break;
			}
		}
	}
	return boolSearch;
};

window.JCSaleGiftProduct.prototype.SetCurrent = function()
{
	var i = 0,
		j = 0,
		arCanBuyValues = [],
		strName = '',
		arShowValues = false,
		arFilter = {},
		tmpFilter = [],
		current = this.offers[this.offerNum].TREE;

	for (i = 0; i < this.treeProps.length; i++)
	{
		strName = 'PROP_'+this.treeProps[i].ID;
		arShowValues = this.GetRowValues(arFilter, strName);
		if (!arShowValues)
		{
			break;
		}
		if (BX.util.in_array(current[strName], arShowValues))
		{
			arFilter[strName] = current[strName];
		}
		else
		{
			arFilter[strName] = arShowValues[0];
			this.offerNum = 0;
		}
		if (this.showAbsent)
		{
			arCanBuyValues = [];
			tmpFilter = [];
			tmpFilter = BX.clone(arFilter, true);
			for (j = 0; j < arShowValues.length; j++)
			{
				tmpFilter[strName] = arShowValues[j];
				if (this.GetCanBuy(tmpFilter))
				{
					arCanBuyValues[arCanBuyValues.length] = arShowValues[j];
				}
			}
		}
		else
		{
			arCanBuyValues = arShowValues;
		}
		this.UpdateRow(i, arFilter[strName], arShowValues, arCanBuyValues);
	}
	this.selectedValues = arFilter;
	this.ChangeInfo();
};

window.JCSaleGiftProduct.prototype.ChangeInfo = function()
{
	var i = 0,
		j,
		index = -1,
		obData = {},
		boolOneSearch = true,
		strPrice = '';

	for (i = 0; i < this.offers.length; i++)
	{
		boolOneSearch = true;
		for (j in this.selectedValues)
		{
			if (this.selectedValues[j] !== this.offers[i].TREE[j])
			{
				boolOneSearch = false;
				break;
			}
		}
		if (boolOneSearch)
		{
			index = i;
			break;
		}
	}
	if (-1 < index)
	{
		if (!!this.obPict)
		{
			var obData = {
				attrs: {}
			};

			if (!!this.offers[index].PREVIEW_PICTURE){
				obData.attrs.src = this.offers[index].PREVIEW_PICTURE.SRC;
			}else{
				obData.attrs.src = this.defaultPict.pict.SRC;
			}
			BX.adjust(BX.findChild(this.obPict, {"tag": "img"}), obData);
		}
		
		if (this.showSkuProps && !!this.obSkuProps)
		{
			if (0 === this.offers[index].DISPLAY_PROPERTIES.length)
			{
				BX.adjust(this.obSkuProps, {style: {display: 'none'}, html: ''});
			}
			else
			{
				BX.adjust(this.obSkuProps, {style: {display: ''}, html: this.offers[index].DISPLAY_PROPERTIES});
			}
		}

		this.setQuantityStore(this.offers[index].MAX_QUANTITY, this.offers[index].AVAILIABLE.TEXT);

		this.offerNum = index;
		this.QuantitySet(this.offerNum);

		/*$(this.obProduct).find('.item-title a').attr('href', this.offers[this.offerNum].URL);
		$(this.obProduct).find('.image_wrapper_block > a').attr('href', this.offers[this.offerNum].URL);*/

		/*quantity discount start*/
		if($(this.obProduct).find('.quantity_block .values').length){
			$(this.obProduct).find('.quantity_block .values .item span').text(this.offers[index].MAX_QUANTITY).css({'opacity':'1'});
		}
		/*quantity discount end*/

		var obj=this.offers[index],
			th=$(this.obProduct),
			_th = this;

		if(typeof arBasketAspro !=="undefined"){
			this.setActualDataBlock(th, obj);
		}else{
			if(typeof window.frameCacheVars !== "undefined"){
				BX.addCustomEvent("onFrameDataReceived", function(){
					_th.setActualDataBlock(th, obj);
				});
			}
		}
	}
};

/*set blocks start*/
window.JCSaleGiftProduct.prototype.setActualDataBlock = function(th, obj)
{
	/*like block start*/
	this.setLikeBlock(th, '.like_icons .wish_item_button', obj, 'DELAY');
	this.setLikeBlock(th, '.like_icons .compare_item_button',obj, 'COMPARE');
	/*like block end*/

	/*buy block start*/
	this.setBuyBlock(th, obj);
	/*buy block end*/
}
/*set blocks end*/

/*set compare/wish*/
window.JCSaleGiftProduct.prototype.setLikeBlock = function(th, className, obj, type)
{
	var block=th;
	if(type=="DELAY"){
		if(obj.CAN_BUY){
			block.find(className).css('display','block');
		}else{
			block.find(className).hide();
		}
	}
	block.find(className).attr('data-item', obj.ID);
	block.find(className).find('span').attr('data-item', obj.ID);
	if(arBasketAspro[type]){
		block.find(className).find('.to').removeClass('added').css('display','block');
		block.find(className).find('.in').hide();

		if(arBasketAspro[type][obj.ID]!==undefined){
			block.find(className).find('.to').hide();
			block.find(className).find('.in').css('display','block');
		}
	}
}

/*set buy*/
window.JCSaleGiftProduct.prototype.setBuyBlock = function(th, obj)
{
	var buyBlock=th.find('.offer_buy_block'),
		input_value = obj.CONFIG.MIN_QUANTITY_BUY;;

	if(buyBlock.find('.counter_wrapp .counter_block').length){
		buyBlock.find('.counter_wrapp .counter_block').attr('data-item', obj.ID);
	}
	if(this.offers[this.offerNum].offer_set_quantity)
		input_value = this.offers[this.offerNum].offer_set_quantity;

	if((obj.CONFIG.OPTIONS.USE_PRODUCT_QUANTITY_DETAIL && obj.CONFIG.ACTION == "ADD") && obj.CAN_BUY){
		var max=(obj.CONFIG.MAX_QUANTITY_BUY>0 ? "data-max='"+obj.CONFIG.MAX_QUANTITY_BUY+"'" : ""),
			counterHtml='<span class="minus">-</span>'+
				'<input type="text" class="text" name="'+obj.PRODUCT_QUANTITY_VARIABLE+'" value="'+input_value+'" />'+
				'<span class="plus" '+max+'>+</span>';
		if(arBasketAspro["BASKET"] && arBasketAspro["BASKET"][obj.ID]!==undefined){
			if(buyBlock.find('.counter_wrapp .counter_block').length){
				buyBlock.find('.counter_wrapp .counter_block').hide();
			}else{
				buyBlock.find('.counter_wrapp').prepend('<div class="counter_block" data-item="'+obj.ID+'"></div>');
				buyBlock.find('.counter_wrapp .counter_block').html(counterHtml).hide();
			}
		}else{
			if(buyBlock.find('.counter_wrapp .counter_block').length){
				buyBlock.find('.counter_wrapp .counter_block').html(counterHtml).show();
			}else{
				buyBlock.find('.counter_wrapp').prepend('<div class="counter_block" data-item="'+obj.ID+'"></div>');
				buyBlock.find('.counter_wrapp .counter_block').html(counterHtml);
			}
		}
	}else{
		if(buyBlock.find('.counter_wrapp .counter_block').length){
			buyBlock.find('.counter_wrapp .counter_block').hide();
		}
	}

	var className=((obj.CONFIG.ACTION == "ORDER") || !obj.CAN_BUY || !obj.CONFIG.OPTIONS.USE_PRODUCT_QUANTITY_DETAIL || (obj.CONFIG.ACTION == "SUBSCRIBE" && obj.CATALOG_SUBSCRIBE == "Y") ? "wide" : "" ),
		buyBlockBtn=$('<div class="button_block"></div>');

	if(buyBlock.find('.counter_wrapp').find('.button_block').length){
		if(arBasketAspro["BASKET"] && arBasketAspro["BASKET"][obj.ID]!==undefined){
			buyBlock.find('.counter_wrapp').find('.button_block').addClass('wide').html(obj.HTML);
			markProductAddBasket(obj.ID);
		}else{
			if(className){
				buyBlock.find('.counter_wrapp').find('.button_block').addClass('wide').html(obj.HTML);
				if(arBasketAspro["SUBSCRIBE"] && arBasketAspro["SUBSCRIBE"][obj.ID]!==undefined){
					markProductSubscribe(obj.ID);
				}
			}else{
				buyBlock.find('.counter_wrapp').find('.button_block').removeClass('wide').html(obj.HTML);
			}
		}
	}else{
		buyBlock.find('.counter_wrapp').append('<div class="button_block '+className+'">'+obj.HTML+'</div>');
		if(arBasketAspro["BASKET"] && arBasketAspro["BASKET"][obj.ID]!==undefined)
			markProductAddBasket(obj.ID);
		if(arBasketAspro["SUBSCRIBE"] && arBasketAspro["SUBSCRIBE"][obj.ID]!==undefined)
			markProductSubscribe(obj.ID);
	}

	if(obj.CONFIG.ACTION !== "NOTHING"){
		if(obj.CONFIG.ACTION == "ADD" && obj.CAN_BUY && obj.SHOW_ONE_CLICK_BUY!="N"){
			var ocb='<span class="transparent big_btn type_block button one_click" data-offers="Y" data-item="'+obj.ID+'" data-iblockID="'+obj.IBLOCK_ID+'" data-quantity="'+obj.CONFIG.MIN_QUANTITY_BUY+'" data-props="'+obj.OFFER_PROPS+'" onclick="oneClickBuy('+obj.ID+', '+obj.IBLOCK_ID+', this)">'+
				'<span>'+obj.ONE_CLICK_BUY+'</span>'+
				'</span>';
			if(buyBlock.find('.wrapp_one_click').length){
				buyBlock.find('.wrapp_one_click').html(ocb);
			}else{
				buyBlock.append('<div class="wrapp_one_click">'+ocb+'</div>');
			}
		}else{
			if(buyBlock.find('.wrapp_one_click').length){
				buyBlock.find('.wrapp_one_click').remove();
			}
		}
	}else{
		if(buyBlock.find('.wrapp_one_click').length){
			buyBlock.find('.wrapp_one_click').remove();
		}
	}

	buyBlock.fadeIn();

	buyBlock.find('.counter_wrapp .counter_block input').data('product', 'ob'+this.obProduct.id);
	this.setPriceAction('', 'Y');

	if(arMaxOptions['THEME']['CHANGE_TITLE_ITEM'] == 'Y')
	{
		$(this.obProduct).find('.item-title a').text(obj.NAME);
	}
}

window.JCSaleGiftProduct.prototype.setPriceAction = function(change, sku)
{
	var check_quantity = '',
		product = $(this.obProduct),
		is_sku = (typeof sku !== 'undefined' && sku == 'Y');

	this.setPrice();

	if(arMaxOptions['THEME']['SHOW_TOTAL_SUMM'] == 'Y')
	{
		if(this.offers[this.offerNum].check_quantity)
			check_quantity = 'Y';
		else
		{
			var check_quantity = ((typeof change !== 'undefined' && change == 'Y') ? change : '');
			if(check_quantity)
				this.offers[this.offerNum].check_quantity = true;
		}
		// setPriceItem(product, this.offers[this.offerNum].offer_set_quantity, this.currentPrices[this.currentPriceSelected].PRICE, check_quantity, is_sku);
	}
}

window.JCSaleGiftProduct.prototype.setPrice = function(price, measure)
{
	var strPrice,
		obData;

	if (!!this.obPrice){
		var measure = this.offers[this.offerNum].MEASURE && this.offers[this.offerNum].SHOW_MEASURE=="Y" ? this.offers[this.offerNum].MEASURE : '',
			product = $(this.obProduct),
			obPrice = this.offers[this.offerNum].PRICE;

		this.offers[this.offerNum].offer_set_quantity = this.offers[this.offerNum].CONFIG.MIN_QUANTITY_BUY;

		if($(product).find('input[name=quantity]').length)
			this.offers[this.offerNum].offer_set_quantity = $(product).find('input[name=quantity]').val();

		strPrice = '<span class="values_wrapper">'+getCurrentPrice(obPrice.VALUE, obPrice.CURRENCY, obPrice.PRINT_VALUE)+'</span>';
		BX.adjust($(this.obPrice).closest('.cost').find('.price.discount')[0], {html: strPrice});
		newPrice = '<span class="values_wrapper">'+getCurrentPrice(obPrice.DISCOUNT_VALUE, obPrice.CURRENCY, obPrice.PRINT_DISCOUNT_VALUE)+'</span>';
		if(measure){
			newPrice += '/'+measure;
		}
		BX.adjust(this.obPrice, {html: newPrice});

		if (obPrice.DISCOUNT_VALUE !== obPrice.VALUE && this.showOldPrice && obPrice.DISCOUNT_VALUE > 0)
		{
			price_value = BX.Currency.currencyFormat(obPrice.VALUE*this.offers[this.offerNum].offer_set_quantity, obPrice.CURRENCY);
			price_value_old = BX.Currency.currencyFormat(obPrice.VALUE, obPrice.CURRENCY);
			$(this.obPriceOld).find('strike').show().html('<span class="values_wrapper">'+obPrice.PRINT_VALUE.replace(price_value_old, price_value)+'</span>');
			if(this.showPercent && obPrice.DISCOUNT_VALUE){
				$(this.obPriceOld).closest('.cost').find('.sale_block').show();
				$(this.obPriceOld).closest('.cost').find('.value').html(obPrice.DISCOUNT_DIFF_PERCENT_RAW);
				$(this.obPriceOld).closest('.cost').find('.text span').html(BX.Currency.currencyFormat(obPrice.DISCOUNT_DIFF, obPrice.CURRENCY, true));
			}
		}
		else{
			$(this.obPriceOld).find('strike').hide().html('');
			if(this.showPercent){
				$(this.obPrice).closest('.cost').find('.sale_block').hide();
			}
		}

		var eventdata = {product: product, measure: measure, config: this.config, offer: this.offers[this.offerNum], obPrice: obPrice};
		BX.onCustomEvent('onAsproSkuSetPrice', [eventdata])
	}
};

/*set store quantity*/
window.JCSaleGiftProduct.prototype.setQuantityStore = function(quantity, text)
{
	if(parseFloat(quantity)>0){
		$(this.storeQuanity).find('.icon').removeClass('order').addClass('stock');
	}else{
		$(this.storeQuanity).find('.icon').removeClass('stock').addClass('order');
	}
	$(this.storeQuanity).find('.icon + span').html(text);
}

window.JCSaleGiftProduct.prototype.InitBasketUrl = function()
{
	switch (this.productType)
	{
		case 1://product
		case 2://set
			this.basketUrl = this.product.addUrl;
			break;
		case 3://sku
			this.basketUrl = this.offers[this.offerNum].ADD_URL;
			break;
	}
	this.basketParams = {
		'ajax_basket': 'Y'
	};
	if (this.showQuantity)
	{
		this.basketParams[this.basketData.quantity] = this.obQuantity.value;
	}
};

window.JCSaleGiftProduct.prototype.FillBasketProps = function()
{
	if (!this.visual.BASKET_PROP_DIV)
	{
		return;
	}
	var
		i = 0,
		propCollection = null,
		foundValues = false,
		obBasketProps = null;

	if (this.basketData.useProps && !this.basketData.emptyProps)
	{
		if (!!this.obPopupWin && !!this.obPopupWin.contentContainer)
		{
			obBasketProps = this.obPopupWin.contentContainer;
		}
	}
	else
	{
		obBasketProps = BX(this.visual.BASKET_PROP_DIV);
	}
	if (!obBasketProps)
	{
		return;
	}
	propCollection = obBasketProps.getElementsByTagName('select');
	if (!!propCollection && !!propCollection.length)
	{
		for (i = 0; i < propCollection.length; i++)
		{
			if (!propCollection[i].disabled)
			{
				switch(propCollection[i].type.toLowerCase())
				{
					case 'select-one':
						this.basketParams[propCollection[i].name] = propCollection[i].value;
						foundValues = true;
						break;
					default:
						break;
				}
			}
		}
	}
	propCollection = obBasketProps.getElementsByTagName('input');
	if (!!propCollection && !!propCollection.length)
	{
		for (i = 0; i < propCollection.length; i++)
		{
			if (!propCollection[i].disabled)
			{
				switch(propCollection[i].type.toLowerCase())
				{
					case 'hidden':
						this.basketParams[propCollection[i].name] = propCollection[i].value;
						foundValues = true;
						break;
					case 'radio':
						if (propCollection[i].checked)
						{
							this.basketParams[propCollection[i].name] = propCollection[i].value;
							foundValues = true;
						}
						break;
					default:
						break;
				}
			}
		}
	}
	if (!foundValues)
	{
		this.basketParams[this.basketData.props] = [];
		this.basketParams[this.basketData.props][0] = 0;
	}
};

window.JCSaleGiftProduct.prototype.SendToBasket = function()
{
	if (!this.canBuy)
	{
		return;
	}
	this.InitBasketUrl();
	this.FillBasketProps();
	BX.ajax.loadJSON(
		this.basketUrl,
		this.basketParams,
		BX.delegate(this.BasketResult, this)
	);
};

window.JCSaleGiftProduct.prototype.Basket = function()
{
	var contentBasketProps = '';
	if (!this.canBuy)
	{
		return;
	}
	switch (this.productType)
	{
	case 1://product
	case 2://set
		if (this.basketData.useProps && !this.basketData.emptyProps)
		{
			this.InitPopupWindow();
			this.obPopupWin.setTitleBar({
				content: BX.create('div', {
					style: { marginRight: '30px', whiteSpace: 'nowrap' },
					text: BX.message('CVP_TITLE_BASKET_PROPS')
				})
			});
			if (BX(this.visual.BASKET_PROP_DIV))
			{
				contentBasketProps = BX(this.visual.BASKET_PROP_DIV).innerHTML;
			}
			this.obPopupWin.setContent(contentBasketProps);
			this.obPopupWin.setButtons([
				new BasketButton({
					ownerClass: this.obProduct.parentNode.parentNode.parentNode.className,
					text: BX.message('CVP_BTN_MESSAGE_SEND_PROPS'),
					events: {
						click: BX.delegate(this.SendToBasket, this)
					}
				})
			]);
			this.obPopupWin.show();
		}
		else
		{
			this.SendToBasket();
		}
		break;
	case 3://sku
		this.SendToBasket();
		break;
	}
};

window.JCSaleGiftProduct.prototype.BasketResult = function(arResult)
{
	var strContent = '',
		strName = '',
		strPict = '',
		successful = true,
		buttons = [];

	if (!!this.obPopupWin)
	{
		this.obPopupWin.close();
	}
	if ('object' !== typeof arResult)
	{
		return false;
	}
	successful = ('OK' === arResult.STATUS);
	if (successful)
	{
		BX.onCustomEvent('OnBasketChange');
		strName = this.product.name;
		switch(this.productType)
		{
		case 1://
		case 2://
			strPict = this.product.pict.SRC;
			break;
		case 3:
			strPict = (!!this.offers[this.offerNum].PREVIEW_PICTURE ?
				this.offers[this.offerNum].PREVIEW_PICTURE.SRC :
				this.defaultPict.pict.SRC
			);
			break;
		}
		strContent = '<div style="width: 96%; margin: 10px 2%; text-align: center;"><img src="'+strPict+'" height="130" style="max-height:130px"><p>'+strName+'</p></div>';
		buttons = [
			new BasketButton({
				ownerClass: this.obProduct.parentNode.parentNode.parentNode.className,
				text: BX.message("CVP_BTN_MESSAGE_BASKET_REDIRECT"),
				events: {
					click: BX.delegate(function(){
						location.href = (!!this.basketData.basketUrl ? this.basketData.basketUrl : BX.message('CVP_BASKET_URL'));
					}, this)
				}
			})
		];
	}
	else
	{
		strContent = (!!arResult.MESSAGE ? arResult.MESSAGE : BX.message('CVP_BASKET_UNKNOWN_ERROR'));
		buttons = [
			new BasketButton({
				ownerClass: this.obProduct.parentNode.parentNode.parentNode.className,
				text: BX.message('CVP_BTN_MESSAGE_CLOSE'),
				events: {
					click: BX.delegate(this.obPopupWin.close, this.obPopupWin)
				}
			})
		];
	}
	this.InitPopupWindow();
	this.obPopupWin.setTitleBar({
		content: BX.create('div', {
			style: { marginRight: '30px', whiteSpace: 'nowrap' },
			text: (successful ? BX.message('CVP_TITLE_SUCCESSFUL') : BX.message('CVP_TITLE_ERROR'))
		})
	});
	this.obPopupWin.setContent(strContent);
	this.obPopupWin.setButtons(buttons);
	this.obPopupWin.show();
};

window.JCSaleGiftProduct.prototype.InitPopupWindow = function()
{
	if (!!this.obPopupWin)
	{
		return;
	}
	this.obPopupWin = BX.PopupWindowManager.create('CatalogSectionBasket_'+this.visual.ID, null, {
		autoHide: false,
		offsetLeft: 0,
		offsetTop: 0,
		overlay : true,
		closeByEsc: true,
		titleBar: true,
		closeIcon: {top: '10px', right: '10px'}
	});
};
})(window);

function bx_sale_gift_product_load(injectId, localAjaxData, additionalData)
{
	localAjaxData = localAjaxData || {};
	additionalData = additionalData || {};

	BX.ajax({
		url: '/bitrix/components/bitrix/sale.gift.product/ajax.php',
		method: 'POST',
		data: BX.merge(localAjaxData, additionalData),
		dataType: 'html',
		processData: false,
		start: true,
		onsuccess: function (html) {
			var ob = BX.processHTML(html);

			// inject
			BX(injectId).innerHTML = ob.HTML;
			BX.ajax.processScripts(ob.SCRIPT);
			initCountdown();

			
		}
	});
}

BX.addCustomEvent('onSliderInitialized', function(eventdata) {
	try{
		ignoreResize.push(true);
		if(eventdata){
			if($(eventdata.slider.currentTarget).hasClass('content_inner'))
			{
				$('.content_inner.catalog_block .catalog_item .item_info .item-title').sliceHeight({item:'.content_inner .catalog_item:not(.big)', mobile: true, autoslicecount: false, slice: 999});
				$('.content_inner.catalog_block .catalog_item .item_info .sa_block').sliceHeight({item:'.content_inner .catalog_item:not(.big)', mobile: true, autoslicecount: false, slice: 999});
				$('.content_inner.catalog_block .catalog_item .item_info .cost.prices').sliceHeight({item:'.content_inner .catalog_item:not(.big)', mobile: true, autoslicecount: false, slice: 999});
				$('.content_inner.catalog_block .catalog_item').sliceHeight({classNull: '.footer_button', item:'.content_inner .catalog_item:not(.big)', mobile: true, autoslicecount: false, slice: 999});
			}
		}
	}
	catch(e){}
	finally{
		ignoreResize.pop();
	}
});

BX.addCustomEvent('onSlideInit', function(eventdata) {
	try{
		ignoreResize.push(true);
		if(eventdata){
			var slider = eventdata.slider;
			if(slider.hasClass('tab')){
				var tabsContentUnhover = ($('.bx_item_list_you_looked_horizontal.detail .all_wrapp .flex-viewport').height() * 1)+20;
				var itemsButtonsHeight = 0;
				if($(document).find('.bx_item_list_you_looked_horizontal.detail .footer_button').length)
				{
					$(document).find('.bx_item_list_you_looked_horizontal.detail .footer_button').css('height', 'auto');
					itemsButtonsHeight = $(document).find('.bx_item_list_you_looked_horizontal.detail .footer_button').height();
					$(document).find('.bx_item_list_you_looked_horizontal.detail .footer_button').css('height', '');
				}
				var tabsContentHover = tabsContentUnhover + itemsButtonsHeight+50;
				
				$('.bx_item_list_you_looked_horizontal.detail .slides').equalize({children: '.item-title'}); 
				$('.bx_item_list_you_looked_horizontal.detail .slides').equalize({children: '.item_info'}); 
				$('.bx_item_list_you_looked_horizontal.detail .slides').equalize({children: '.catalog_item'});

				$('.bx_item_list_you_looked_horizontal.detail .all_wrapp .content_inner').attr('data-unhover', tabsContentUnhover);
				$('.bx_item_list_you_looked_horizontal.detail .all_wrapp .content_inner').attr('data-hover', tabsContentHover);
				$('.bx_item_list_you_looked_horizontal.detail .all_wrapp').height(tabsContentUnhover);
				$('.bx_item_list_you_looked_horizontal.detail .all_wrapp .content_inner').addClass('absolute');	
			}
		}
	}
	catch(e){}
	finally{
		ignoreResize.pop();
	}
});
/* End */
;
; /* Start:"a:4:{s:4:"full";s:98:"/local/templates/aspro_max/components/bitrix/sale.gift.main.products/main/script.js?16184010244955";s:6:"source";s:83:"/local/templates/aspro_max/components/bitrix/sale.gift.main.products/main/script.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
BX.namespace("BX.Sale");
BX.Sale.GiftMainProductsClass = (function ()
{
	var GiftMainProductsClass = function (parameters)
	{
		this.ajaxUrl = '/bitrix/components/bitrix/sale.gift.main.products/ajax.php';
		this.contextAjaxData = parameters.contextAjaxData || {};
		this.mainProductState = parameters.mainProductState || null;
		this.injectId = parameters.injectId || null;
		this.isGift = !!parameters.isGift;
		this.productId = parameters.productId;
		this.offerId = parameters.offerId;
		this.offers = parameters.offers || [];

		this.setEvents();

		//detect #as_gift
		if(document.location.hash.match(/as_gift/g))
		{
			if(this.isGift)
			{
				this.enableGift();
			}
			else
			{
				this.raiseNonGiftEvent();
			}
		}
		BX.bindDelegate(BX(this.injectId), "click", {tagName: 'a'}, BX.proxy(this.clickNavLink, this));
	};

	GiftMainProductsClass.prototype.clickNavLink = function(e)
	{
		if(this.onPageNavigationByLink(BX.proxy_context))
		{
			return BX.PreventDefault(e);
		}
	};

	GiftMainProductsClass.prototype.setEvents = function()
	{

		BX.addCustomEvent('onCatalogStoreProductChange', BX.proxy(this.onCatalogStoreProductChange, this));
		BX.addCustomEvent('onAddToBasketMainProduct', BX.proxy(this.onAddToBasketMainProduct, this));
	};

	GiftMainProductsClass.prototype.unsubscribeEvents = function()
	{
		BX.removeCustomEvent('onCatalogStoreProductChange', BX.proxy(this.onCatalogStoreProductChange, this));
	};

	GiftMainProductsClass.prototype.onAddToBasketMainProduct = function(productObject)
	{
		this.enableGift();
	};

	GiftMainProductsClass.prototype.onCatalogStoreProductChange = function(offerId)
	{
		if(offerId == this.offerId)
		{
			return;
		}
		if($(this.injectId).length)
		{
			BX.ajax({
				url: this.ajaxUrl,
				method: 'POST',
				data: BX.merge(this.contextAjaxData, {offerId: offerId, mainProductState: this.mainProductState, SITE_ID: BX.message('SITE_ID')}),
				dataType: 'html',
				processData: false,
				start: true,
				onsuccess: BX.delegate(function (html) {
					this.offerId = offerId;
					var ob = BX.processHTML(html);
					if(!ob.HTML)
					{
						if(document.location.hash.match(/as_gift/g))
						{
							//raise event from previous state. It's trick.
							if(this.isGift)
							{
								this.raiseGiftEvent();
							}
							else
							{
								this.raiseNonGiftEvent();
							}
						}

						return;
					}
					this.unsubscribeEvents();

					BX(this.injectId).innerHTML = ob.HTML;
					BX.ajax.processScripts(ob.SCRIPT);
				}, this)
			});
		}
	};

	GiftMainProductsClass.prototype.onPageNavigationByLink = function(link)
	{
		var isValidNavigationLink = BX.delegate(function(link)
		{
			if(!BX.type.isElementNode(link) || !link.href)
			{
				return false;
			}
			if(link.href.indexOf(this.ajaxUrl) >= 0)
			{
				return true;
			}
			return link.href.indexOf('PAGEN_') !== -1;
		}, this);

		if(!isValidNavigationLink(link))
		{
			return false;
		}

		BX.ajax({
			url: link.href,
			method: 'POST',
			data: BX.merge(this.contextAjaxData, {SITE_ID: BX.message('SITE_ID')}),
			dataType: 'html',
			processData: false,
			start: true,
			onsuccess: BX.delegate(function (html) {
				var ob = BX.processHTML(html);
				if(!ob.HTML)
				{
					return;
				}
				this.unsubscribeEvents();

				BX(this.injectId).innerHTML = ob.HTML;
				BX.ajax.processScripts(ob.SCRIPT);
			}, this)
		});

		return true;
	};

	GiftMainProductsClass.prototype.enableGift = function()
	{
		this.isGift = true;
		this.raiseGiftEvent();
	};

	GiftMainProductsClass.prototype.raiseGiftEvent = function()
	{
		BX.onCustomEvent('onSaleProductIsGift', [this.productId, this.offerId]);
	};

	GiftMainProductsClass.prototype.raiseNonGiftEvent = function()
	{
		BX.onCustomEvent('onSaleProductIsNotGift', [this.productId, this.offerId]);
	};

	return GiftMainProductsClass;
})();

BX.addCustomEvent('onSliderInitialized', function(eventdata) {
	try{
		ignoreResize.push(true);
		if(eventdata){
			if($(eventdata.slider.currentTarget).closest('.bx_sale_gift_main_products').length)
			{
				$('.bx_sale_gift_main_products .catalog_block .catalog_item .item_info .item-title').sliceHeight({item:'.bx_sale_gift_main_products .catalog_item:not(.big)', mobile: true, autoslicecount: false, slice: 999});
				$('.bx_sale_gift_main_products .catalog_block .catalog_item .item_info .sa_block').sliceHeight({item:'.bx_sale_gift_main_products .catalog_item:not(.big)', mobile: true, autoslicecount: false, slice: 999});
				$('.bx_sale_gift_main_products .catalog_block .catalog_item .item_info .cost.prices').sliceHeight({item:'.bx_sale_gift_main_products .catalog_item:not(.big)', mobile: true, autoslicecount: false, slice: 999});
				$('.bx_sale_gift_main_products .catalog_block .catalog_item').sliceHeight({classNull: '.footer_button', item:'.bx_sale_gift_main_products .catalog_item:not(.big)', mobile: true, autoslicecount: false, slice: 999});
			}
		}
	}
	catch(e){}
	finally{
		ignoreResize.pop();
	}
});
/* End */
;
; /* Start:"a:4:{s:4:"full";s:100:"/local/templates/aspro_max/components/bitrix/catalog.bigdata.products/main/script.js?161840102436418";s:6:"source";s:84:"/local/templates/aspro_max/components/bitrix/catalog.bigdata.products/main/script.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
(function (window) {

if (!!window.JCCatalogBigdataProducts)
{
	return;
}

var BasketButton = function(params)
{
	BasketButton.superclass.constructor.apply(this, arguments);
	this.nameNode = BX.create('span', {
		props : { className : 'bx_medium bx_bt_button', id : this.id },
		text: params.text
	});
	this.buttonNode = BX.create('span', {
		attrs: { className: params.ownerClass },
		style: { marginBottom: '0', borderBottom: '0 none transparent' },
		children: [this.nameNode],
		events : this.contextEvents
	});
	if (BX.browser.IsIE())
	{
		this.buttonNode.setAttribute("hideFocus", "hidefocus");
	}
};
BX.extend(BasketButton, BX.PopupWindowButton);

window.JCCatalogBigdataProducts = function (arParams)
{
	this.productType = 0;
	this.showQuantity = true;
	this.showAbsent = true;
	this.secondPict = false;
	this.showOldPrice = false;
	this.showPercent = false;
	this.showSkuProps = false;
	this.visual = {
		ID: '',
		PICT_ID: '',
		SECOND_PICT_ID: '',
		QUANTITY_ID: '',
		QUANTITY_UP_ID: '',
		QUANTITY_DOWN_ID: '',
		PRICE_ID: '',
		DSC_PERC: '',
		SECOND_DSC_PERC: '',
		DISPLAY_PROP_DIV: '',
		BASKET_PROP_DIV: ''
	};
	this.product = {
		checkQuantity: false,
		maxQuantity: 0,
		stepQuantity: 1,
		isDblQuantity: false,
		canBuy: true,
		canSubscription: true,
		name: '',
		pict: {},
		id: 0,
		addUrl: '',
		buyUrl: ''
	};
	this.basketData = {
		useProps: false,
		emptyProps: false,
		quantity: 'quantity',
		props: 'prop',
		basketUrl: ''
	};

	this.defaultPict = {
		pict: null,
		secondPict: null
	};

	this.checkQuantity = false;
	this.maxQuantity = 0;
	this.stepQuantity = 1;
	this.isDblQuantity = false;
	this.canBuy = true;
	this.canSubscription = true;
	this.precision = 6;
	this.precisionFactor = Math.pow(10,this.precision);

	this.offers = [];
	this.offerNum = 0;
	this.treeProps = [];
	this.obTreeRows = [];
	this.showCount = [];
	this.showStart = [];
	this.selectedValues = {};

	this.obProduct = null;
	this.obQuantity = null;
	this.obQuantityUp = null;
	this.obQuantityDown = null;
	this.obPict = null;
	this.obSecondPict = null;
	this.obPrice = null;
	this.obTree = null;
	this.obBuyBtn = null;
	this.obDscPerc = null;
	this.obSecondDscPerc = null;
	this.obSkuProps = null;
	this.obMeasure = null;

	this.obPopupWin = null;
	this.basketUrl = '';
	this.basketParams = {};

	this.treeRowShowSize = 5;
	this.treeEnableArrow = { display: '', cursor: 'pointer', opacity: 1 };
	this.treeDisableArrow = { display: '', cursor: 'default', opacity:0.2 };

	this.lastElement = false;
	this.containerHeight = 0;

	this.errorCode = 0;

	if ('object' === typeof arParams)
	{
		this.productType = parseInt(arParams.PRODUCT_TYPE, 10);
		this.showQuantity = arParams.SHOW_QUANTITY;
		this.showAbsent = arParams.SHOW_ABSENT;
		this.secondPict = !!arParams.SECOND_PICT;
		this.showOldPrice = !!arParams.SHOW_OLD_PRICE;
		this.showPercent = !!arParams.SHOW_DISCOUNT_PERCENT;
		this.showSkuProps = !!arParams.SHOW_SKU_PROPS;

		this.visual = arParams.VISUAL;
		switch (this.productType)
		{
			case 1://product
			case 2://set
				if (!!arParams.PRODUCT && 'object' === typeof(arParams.PRODUCT))
				{
					if (this.showQuantity)
					{
						this.product.checkQuantity = arParams.PRODUCT.CHECK_QUANTITY;
						this.product.isDblQuantity = arParams.PRODUCT.QUANTITY_FLOAT;
						if (this.product.checkQuantity)
						{
							this.product.maxQuantity = (this.product.isDblQuantity ? parseFloat(arParams.PRODUCT.MAX_QUANTITY) : parseInt(arParams.PRODUCT.MAX_QUANTITY, 10));
						}
						this.product.stepQuantity = (this.product.isDblQuantity ? parseFloat(arParams.PRODUCT.STEP_QUANTITY) : parseInt(arParams.PRODUCT.STEP_QUANTITY, 10));

						this.checkQuantity = this.product.checkQuantity;
						this.isDblQuantity = this.product.isDblQuantity;
						this.maxQuantity = this.product.maxQuantity;
						this.stepQuantity = this.product.stepQuantity;
						if (this.isDblQuantity)
						{
							this.stepQuantity = Math.round(this.stepQuantity*this.precisionFactor)/this.precisionFactor;
						}
					}
					this.product.canBuy = arParams.PRODUCT.CAN_BUY;
					this.product.canSubscription = arParams.PRODUCT.SUBSCRIPTION;

					this.canBuy = this.product.canBuy;
					this.canSubscription = this.product.canSubscription;

					this.product.name = arParams.PRODUCT.NAME;
					this.product.pict = arParams.PRODUCT.PICT;
					this.product.id = arParams.PRODUCT.ID;
					if (!!arParams.PRODUCT.ADD_URL)
					{
						this.product.addUrl = arParams.PRODUCT.ADD_URL;
					}
					if (!!arParams.PRODUCT.BUY_URL)
					{
						this.product.buyUrl = arParams.PRODUCT.BUY_URL;
					}
					if (!!arParams.BASKET && 'object' === typeof(arParams.BASKET))
					{
						this.basketData.useProps = !!arParams.BASKET.ADD_PROPS;
						this.basketData.emptyProps = !!arParams.BASKET.EMPTY_PROPS;
					}
				}
				else
				{
					this.errorCode = -1;
				}
				break;
			case 3://sku
				if (!!arParams.OFFERS && BX.type.isArray(arParams.OFFERS))
				{
					if (!!arParams.PRODUCT && 'object' === typeof(arParams.PRODUCT))
					{
						this.product.name = arParams.PRODUCT.NAME;
						this.product.id = arParams.PRODUCT.ID;
					}
					this.offers = arParams.OFFERS;
					this.offerNum = 0;
					if (!!arParams.OFFER_SELECTED)
					{
						this.offerNum = parseInt(arParams.OFFER_SELECTED, 10);
					}
					if (isNaN(this.offerNum))
					{
						this.offerNum = 0;
					}
					if (!!arParams.TREE_PROPS)
					{
						this.treeProps = arParams.TREE_PROPS;
					}
					if (!!arParams.DEFAULT_PICTURE)
					{
						this.defaultPict.pict = arParams.DEFAULT_PICTURE.PICTURE;
						this.defaultPict.secondPict = arParams.DEFAULT_PICTURE.PICTURE_SECOND;
					}
				}
				else
				{
					this.errorCode = -1;
				}
				break;
			default:
				this.errorCode = -1;
		}
		if (!!arParams.BASKET && 'object' === typeof(arParams.BASKET))
		{
			if (!!arParams.BASKET.QUANTITY)
			{
				this.basketData.quantity = arParams.BASKET.QUANTITY;
			}
			if (!!arParams.BASKET.PROPS)
			{
				this.basketData.props = arParams.BASKET.PROPS;
			}
			if (!!arParams.BASKET.BASKET_URL)
			{
				this.basketData.basketUrl = arParams.BASKET.BASKET_URL;
			}
		}
		this.lastElement = (!!arParams.LAST_ELEMENT && 'Y' === arParams.LAST_ELEMENT);
	}
	if (0 === this.errorCode)
	{
		BX.ready(BX.delegate(this.Init,this));
	}
};

window.JCCatalogBigdataProducts.prototype.Init = function()
{
	var i = 0,
		strPrefix = '',
		TreeItems = null;

	this.obProduct = BX(this.visual.ID);
	if (!this.obProduct)
	{
		this.errorCode = -1;
	}
	this.obPict = BX(this.visual.PICT_ID);
	if (!this.obPict)
	{
		this.errorCode = -2;
	}
	if (this.secondPict && !!this.visual.SECOND_PICT_ID)
	{
		this.obSecondPict = BX(this.visual.SECOND_PICT_ID);
	}
	this.obPrice = BX(this.visual.PRICE_ID);
	if (!this.obPrice)
	{
		this.errorCode = -16;
	}
	if (this.showQuantity && !!this.visual.QUANTITY_ID)
	{
		this.obQuantity = BX(this.visual.QUANTITY_ID);
		if (!!this.visual.QUANTITY_UP_ID)
		{
			this.obQuantityUp = BX(this.visual.QUANTITY_UP_ID);
		}
		if (!!this.visual.QUANTITY_DOWN_ID)
		{
			this.obQuantityDown = BX(this.visual.QUANTITY_DOWN_ID);
		}
	}
	if (3 === this.productType)
	{
		if (!!this.visual.TREE_ID)
		{
			this.obTree = BX(this.visual.TREE_ID);
			if (!this.obTree)
			{
				this.errorCode = -256;
			}
			strPrefix = this.visual.TREE_ITEM_ID;
			for (i = 0; i < this.treeProps.length; i++)
			{
				this.obTreeRows[i] = {
					LEFT: BX(strPrefix+this.treeProps[i].ID+'_left'),
					RIGHT: BX(strPrefix+this.treeProps[i].ID+'_right'),
					LIST: BX(strPrefix+this.treeProps[i].ID+'_list'),
					CONT: BX(strPrefix+this.treeProps[i].ID+'_cont')
				};
				if (!this.obTreeRows[i].LEFT || !this.obTreeRows[i].RIGHT || !this.obTreeRows[i].LIST || !this.obTreeRows[i].CONT)
				{
					this.errorCode = -512;
					break;
				}
			}
		}
		if (!!this.visual.QUANTITY_MEASURE)
		{
			this.obMeasure = BX(this.visual.QUANTITY_MEASURE);
		}
	}
	if (!!this.visual.BUY_ID)
	{
		this.obBuyBtn = BX(this.visual.BUY_ID);
	}

	if (this.showPercent)
	{
		if (!!this.visual.DSC_PERC)
		{
			this.obDscPerc = BX(this.visual.DSC_PERC);
		}
		if (this.secondPict && !!this.visual.SECOND_DSC_PERC)
		{
			this.obSecondDscPerc = BX(this.visual.SECOND_DSC_PERC);
		}
	}

	if (this.showSkuProps)
	{
		if (!!this.visual.DISPLAY_PROP_DIV)
		{
			this.obSkuProps = BX(this.visual.DISPLAY_PROP_DIV);
		}
	}

	if (0 === this.errorCode)
	{
		if (this.showQuantity)
		{
			if (!!this.obQuantityUp)
			{
				BX.bind(this.obQuantityUp, 'click', BX.delegate(this.QuantityUp, this));
			}
			if (!!this.obQuantityDown)
			{
				BX.bind(this.obQuantityDown, 'click', BX.delegate(this.QuantityDown, this));
			}
			if (!!this.obQuantity)
			{
				BX.bind(this.obQuantity, 'change', BX.delegate(this.QuantityChange, this));
			}
		}
		switch (this.productType)
		{
			case 1://product
				break;
			case 3://sku
				TreeItems = BX.findChildren(this.obTree, {tagName: 'li'}, true);
				if (!!TreeItems && 0 < TreeItems.length)
				{
					for (i = 0; i < TreeItems.length; i++)
					{
						BX.bind(TreeItems[i], 'click', BX.delegate(this.SelectOfferProp, this));
					}
				}
				for (i = 0; i < this.obTreeRows.length; i++)
				{
					BX.bind(this.obTreeRows[i].LEFT, 'click', BX.delegate(this.RowLeft, this));
					BX.bind(this.obTreeRows[i].RIGHT, 'click', BX.delegate(this.RowRight, this));
				}
				this.SetCurrent();
				break;
		}
		if (!!this.obBuyBtn)
		{
			BX.bind(this.obBuyBtn, 'click', BX.delegate(this.Basket, this));
		}
		if (this.lastElement)
		{
			this.containerHeight = parseInt(this.obProduct.parentNode.offsetHeight, 10);
			if (isNaN(this.containerHeight))
			{
				this.containerHeight = 0;
			}
			this.setHeight();
			BX.bind(window, 'resize', BX.delegate(this.checkHeight, this));
			BX.bind(this.obProduct.parentNode, 'mouseover', BX.delegate(this.setHeight, this));
			BX.bind(this.obProduct.parentNode, 'mouseout', BX.delegate(this.clearHeight, this));
		}
	}
};

window.JCCatalogBigdataProducts.prototype.checkHeight = function()
{
	this.containerHeight = parseInt(this.obProduct.parentNode.offsetHeight, 10);
	if (isNaN(this.containerHeight))
	{
		this.containerHeight = 0;
	}
};

window.JCCatalogBigdataProducts.prototype.setHeight = function()
{
	if (0 < this.containerHeight)
	{
		BX.adjust(this.obProduct.parentNode, {style: { height: this.containerHeight+'px'}});
	}
};

window.JCCatalogBigdataProducts.prototype.clearHeight = function()
{
	BX.adjust(this.obProduct.parentNode, {style: { height: 'auto'}});
};

window.JCCatalogBigdataProducts.prototype.QuantityUp = function()
{
	var curValue = 0,
		boolSet = true;

	if (0 === this.errorCode && this.showQuantity && this.canBuy)
	{
		curValue = (this.isDblQuantity ? parseFloat(this.obQuantity.value) : parseInt(this.obQuantity.value, 10));
		if (!isNaN(curValue))
		{
			curValue += this.stepQuantity;
			if (this.checkQuantity)
			{
				if (curValue > this.maxQuantity)
				{
					boolSet = false;
				}
			}
			if (boolSet)
			{
				if (this.isDblQuantity)
				{
					curValue = Math.round(curValue*this.precisionFactor)/this.precisionFactor;
				}
				this.obQuantity.value = curValue;
			}
		}
	}
};

window.JCCatalogBigdataProducts.prototype.QuantityDown = function()
{
	var curValue = 0,
		boolSet = true;

	if (0 === this.errorCode && this.showQuantity && this.canBuy)
	{
		curValue = (this.isDblQuantity ? parseFloat(this.obQuantity.value): parseInt(this.obQuantity.value, 10));
		if (!isNaN(curValue))
		{
			curValue -= this.stepQuantity;
			if (curValue < this.stepQuantity)
			{
				boolSet = false;
			}
			if (boolSet)
			{
				if (this.isDblQuantity)
				{
					curValue = Math.round(curValue*this.precisionFactor)/this.precisionFactor;
				}
				this.obQuantity.value = curValue;
			}
		}
	}
};

window.JCCatalogBigdataProducts.prototype.QuantityChange = function()
{
	var curValue = 0,
		boolSet = true;

	if (0 === this.errorCode && this.showQuantity)
	{
		if (this.canBuy)
		{
			curValue = (this.isDblQuantity ? parseFloat(this.obQuantity.value) : parseInt(this.obQuantity.value, 10));
			if (!isNaN(curValue))
			{
				if (this.checkQuantity)
				{
					if (curValue > this.maxQuantity)
					{
						boolSet = false;
						curValue = this.maxQuantity;
					}
					else if (curValue < this.stepQuantity)
					{
						boolSet = false;
						curValue = this.stepQuantity;
					}
				}
				if (!boolSet)
				{
					this.obQuantity.value = curValue;
				}
			}
			else
			{
				this.obQuantity.value = this.stepQuantity;
			}
		}
		else
		{
			this.obQuantity.value = this.stepQuantity;
		}
	}
};

window.JCCatalogBigdataProducts.prototype.QuantitySet = function(index)
{
	if (0 === this.errorCode)
	{
		this.canBuy = this.offers[index].CAN_BUY;
		if (this.canBuy)
		{
			BX.addClass(this.obBuyBtn, 'bx_bt_button');
			BX.removeClass(this.obBuyBtn, 'bx_bt_button_type_2');
			this.obBuyBtn.innerHTML = BX.message('CBD_MESS_BTN_BUY');
		}
		else
		{
			BX.addClass(this.obBuyBtn, 'bx_bt_button_type_2');
			BX.removeClass(this.obBuyBtn, 'bx_bt_button');
			this.obBuyBtn.innerHTML = BX.message('CBD_MESS_NOT_AVAILABLE');
		}
		if (this.showQuantity)
		{
			this.isDblQuantity = this.offers[index].QUANTITY_FLOAT;
			this.checkQuantity = this.offers[index].CHECK_QUANTITY;
			if (this.isDblQuantity)
			{
				this.maxQuantity = parseFloat(this.offers[index].MAX_QUANTITY);
				this.stepQuantity = Math.round(parseFloat(this.offers[index].STEP_QUANTITY)*this.precisionFactor)/this.precisionFactor;
			}
			else
			{
				this.maxQuantity = parseInt(this.offers[index].MAX_QUANTITY, 10);
				this.stepQuantity = parseInt(this.offers[index].STEP_QUANTITY, 10);
			}

			this.obQuantity.value = this.stepQuantity;
			this.obQuantity.disabled = !this.canBuy;
			if (!!this.obMeasure)
			{
				if (!!this.offers[index].MEASURE)
				{
					BX.adjust(this.obMeasure, { html : this.offers[index].MEASURE});
				}
				else
				{
					BX.adjust(this.obMeasure, { html : ''});
				}
			}
		}
	}
};

window.JCCatalogBigdataProducts.prototype.SelectOfferProp = function()
{
	var i = 0,
		value = '',
		strTreeValue = '',
		arTreeItem = [],
		RowItems = null,
		target = BX.proxy_context;

	if (!!target && target.hasAttribute('data-treevalue'))
	{
		strTreeValue = target.getAttribute('data-treevalue');
		arTreeItem = strTreeValue.split('_');
		if (this.SearchOfferPropIndex(arTreeItem[0], arTreeItem[1]))
		{
			RowItems = BX.findChildren(target.parentNode, {tagName: 'li'}, false);
			if (!!RowItems && 0 < RowItems.length)
			{
				for (i = 0; i < RowItems.length; i++)
				{
					value = RowItems[i].getAttribute('data-onevalue');
					if (value === arTreeItem[1])
					{
						BX.addClass(RowItems[i], 'bx_active');
					}
					else
					{
						BX.removeClass(RowItems[i], 'bx_active');
					}
				}
			}
		}
	}
};

window.JCCatalogBigdataProducts.prototype.SearchOfferPropIndex = function(strPropID, strPropValue)
{
	var strName = '',
		arShowValues = false,
		i, j,
		arCanBuyValues = [],
		index = -1,
		arFilter = {},
		tmpFilter = [];

	for (i = 0; i < this.treeProps.length; i++)
	{
		if (this.treeProps[i].ID === strPropID)
		{
			index = i;
			break;
		}
	}

	if (-1 < index)
	{
		for (i = 0; i < index; i++)
		{
			strName = 'PROP_'+this.treeProps[i].ID;
			arFilter[strName] = this.selectedValues[strName];
		}
		strName = 'PROP_'+this.treeProps[index].ID;
		arShowValues = this.GetRowValues(arFilter, strName);
		if (!arShowValues)
		{
			return false;
		}
		if (!BX.util.in_array(strPropValue, arShowValues))
		{
			return false;
		}
		arFilter[strName] = strPropValue;
		for (i = index+1; i < this.treeProps.length; i++)
		{
			strName = 'PROP_'+this.treeProps[i].ID;
			arShowValues = this.GetRowValues(arFilter, strName);
			if (!arShowValues)
			{
				return false;
			}
			if (this.showAbsent)
			{
				arCanBuyValues = [];
				tmpFilter = [];
				tmpFilter = BX.clone(arFilter, true);
				for (j = 0; j < arShowValues.length; j++)
				{
					tmpFilter[strName] = arShowValues[j];
					if (this.GetCanBuy(tmpFilter))
					{
						arCanBuyValues[arCanBuyValues.length] = arShowValues[j];
					}
				}
			}
			else
			{
				arCanBuyValues = arShowValues;
			}
			if (!!this.selectedValues[strName] && BX.util.in_array(this.selectedValues[strName], arCanBuyValues))
			{
				arFilter[strName] = this.selectedValues[strName];
			}
			else
			{
				arFilter[strName] = arCanBuyValues[0];
			}
			this.UpdateRow(i, arFilter[strName], arShowValues, arCanBuyValues);
		}
		this.selectedValues = arFilter;
		this.ChangeInfo();
	}
	return true;
};

window.JCCatalogBigdataProducts.prototype.RowLeft = function()
{
	var i = 0,
		strTreeValue = '',
		index = -1,
		target = BX.proxy_context;

	if (!!target && target.hasAttribute('data-treevalue'))
	{
		strTreeValue = target.getAttribute('data-treevalue');
		for (i = 0; i < this.treeProps.length; i++)
		{
			if (this.treeProps[i].ID === strTreeValue)
			{
				index = i;
				break;
			}
		}
		if (-1 < index && this.treeRowShowSize < this.showCount[index])
		{
			if (0 > this.showStart[index])
			{
				this.showStart[index]++;
				BX.adjust(this.obTreeRows[index].LIST, { style: { marginLeft: this.showStart[index]*20+'%' }});
				BX.adjust(this.obTreeRows[index].RIGHT, { style: this.treeEnableArrow });
			}

			if (0 <= this.showStart[index])
			{
				BX.adjust(this.obTreeRows[index].LEFT, { style: this.treeDisableArrow });
			}
		}
	}
};

window.JCCatalogBigdataProducts.prototype.RowRight = function()
{
	var i = 0,
		strTreeValue = '',
		index = -1,
		target = BX.proxy_context;

	if (!!target && target.hasAttribute('data-treevalue'))
	{
		strTreeValue = target.getAttribute('data-treevalue');
		for (i = 0; i < this.treeProps.length; i++)
		{
			if (this.treeProps[i].ID === strTreeValue)
			{
				index = i;
				break;
			}
		}
		if (-1 < index && this.treeRowShowSize < this.showCount[index])
		{
			if ((this.treeRowShowSize - this.showStart[index]) < this.showCount[index])
			{
				this.showStart[index]--;
				BX.adjust(this.obTreeRows[index].LIST, { style: { marginLeft: this.showStart[index]*20+'%' }});
				BX.adjust(this.obTreeRows[index].LEFT, { style: this.treeEnableArrow });
			}

			if ((this.treeRowShowSize - this.showStart[index]) >= this.showCount[index])
			{
				BX.adjust(this.obTreeRows[index].RIGHT, { style: this.treeDisableArrow });
			}
		}
	}
};

window.JCCatalogBigdataProducts.prototype.UpdateRow = function(intNumber, activeID, showID, canBuyID)
{
	var i = 0,
		showI = 0,
		value = '',
		countShow = 0,
		strNewLen = '',
		obData = {},
		pictMode = false,
		extShowMode = false,
		isCurrent = false,
		selectIndex = 0,
		obLeft = this.treeEnableArrow,
		obRight = this.treeEnableArrow,
		currentShowStart = 0,
		RowItems = null;

	if (-1 < intNumber && intNumber < this.obTreeRows.length)
	{
		RowItems = BX.findChildren(this.obTreeRows[intNumber].LIST, {tagName: 'li'}, false);
		if (!!RowItems && 0 < RowItems.length)
		{
			pictMode = ('PICT' === this.treeProps[intNumber].SHOW_MODE);
			countShow = showID.length;
			extShowMode = this.treeRowShowSize < countShow;
			strNewLen = (extShowMode ? (100/countShow)+'%' : '20%');
			obData = {
				props: { className: '' },
				style: {
					width: strNewLen
				}
			};
			if (pictMode)
			{
				obData.style.paddingTop = strNewLen;
			}
			for (i = 0; i < RowItems.length; i++)
			{
				value = RowItems[i].getAttribute('data-onevalue');
				isCurrent = (value === activeID);
				if (BX.util.in_array(value, canBuyID))
				{
					obData.props.className = (isCurrent ? 'bx_active' : '');
				}
				else
				{
					obData.props.className = (isCurrent ? 'bx_active bx_missing' : 'bx_missing');
				}
				obData.style.display = 'none';
				if (BX.util.in_array(value, showID))
				{
					obData.style.display = '';
					if (isCurrent)
					{
						selectIndex = showI;
					}
					showI++;
				}
				BX.adjust(RowItems[i], obData);
			}

			obData = {
				style: {
					width: (extShowMode ? 20*countShow : 100)+'%',
					marginLeft: '0%'
				}
			};
			if (pictMode)
			{
				BX.adjust(this.obTreeRows[intNumber].CONT, {props: {className: (extShowMode ? 'bx_item_detail_scu full' : 'bx_item_detail_scu')}});
			}
			else
			{
				BX.adjust(this.obTreeRows[intNumber].CONT, {props: {className: (extShowMode ? 'bx_item_detail_size full' : 'bx_item_detail_size')}});
			}
			if (extShowMode)
			{
				if (selectIndex +1 === countShow)
				{
					obRight = this.treeDisableArrow;
				}
				if (this.treeRowShowSize <= selectIndex)
				{
					currentShowStart = this.treeRowShowSize - selectIndex - 1;
					obData.style.marginLeft = currentShowStart*20+'%';
				}
				if (0 === currentShowStart)
				{
					obLeft = this.treeDisableArrow;
				}
				BX.adjust(this.obTreeRows[intNumber].LEFT, {style: obLeft });
				BX.adjust(this.obTreeRows[intNumber].RIGHT, {style: obRight });
			}
			else
			{
				BX.adjust(this.obTreeRows[intNumber].LEFT, {style: {display: 'none'}});
				BX.adjust(this.obTreeRows[intNumber].RIGHT, {style: {display: 'none'}});
			}
			BX.adjust(this.obTreeRows[intNumber].LIST, obData);
			this.showCount[intNumber] = countShow;
			this.showStart[intNumber] = currentShowStart;
		}
	}
};

window.JCCatalogBigdataProducts.prototype.GetRowValues = function(arFilter, index)
{
	var i = 0,
		j,
		arValues = [],
		boolSearch = false,
		boolOneSearch = true;

	if (0 === arFilter.length)
	{
		for (i = 0; i < this.offers.length; i++)
		{
			if (!BX.util.in_array(this.offers[i].TREE[index], arValues))
			{
				arValues[arValues.length] = this.offers[i].TREE[index];
			}
		}
		boolSearch = true;
	}
	else
	{
		for (i = 0; i < this.offers.length; i++)
		{
			boolOneSearch = true;
			for (j in arFilter)
			{
				if (arFilter[j] !== this.offers[i].TREE[j])
				{
					boolOneSearch = false;
					break;
				}
			}
			if (boolOneSearch)
			{
				if (!BX.util.in_array(this.offers[i].TREE[index], arValues))
				{
					arValues[arValues.length] = this.offers[i].TREE[index];
				}
				boolSearch = true;
			}
		}
	}
	return (boolSearch ? arValues : false);
};

window.JCCatalogBigdataProducts.prototype.GetCanBuy = function(arFilter)
{
	var i = 0,
		j,
		boolSearch = false,
		boolOneSearch = true;

	for (i = 0; i < this.offers.length; i++)
	{
		boolOneSearch = true;
		for (j in arFilter)
		{
			if (arFilter[j] !== this.offers[i].TREE[j])
			{
				boolOneSearch = false;
				break;
			}
		}
		if (boolOneSearch)
		{
			if (this.offers[i].CAN_BUY)
			{
				boolSearch = true;
				break;
			}
		}
	}
	return boolSearch;
};

window.JCCatalogBigdataProducts.prototype.SetCurrent = function()
{
	var i = 0,
		j = 0,
		arCanBuyValues = [],
		strName = '',
		arShowValues = false,
		arFilter = {},
		tmpFilter = [],
		current = this.offers[this.offerNum].TREE;

	for (i = 0; i < this.treeProps.length; i++)
	{
		strName = 'PROP_'+this.treeProps[i].ID;
		arShowValues = this.GetRowValues(arFilter, strName);
		if (!arShowValues)
		{
			break;
		}
		if (BX.util.in_array(current[strName], arShowValues))
		{
			arFilter[strName] = current[strName];
		}
		else
		{
			arFilter[strName] = arShowValues[0];
			this.offerNum = 0;
		}
		if (this.showAbsent)
		{
			arCanBuyValues = [];
			tmpFilter = [];
			tmpFilter = BX.clone(arFilter, true);
			for (j = 0; j < arShowValues.length; j++)
			{
				tmpFilter[strName] = arShowValues[j];
				if (this.GetCanBuy(tmpFilter))
				{
					arCanBuyValues[arCanBuyValues.length] = arShowValues[j];
				}
			}
		}
		else
		{
			arCanBuyValues = arShowValues;
		}
		this.UpdateRow(i, arFilter[strName], arShowValues, arCanBuyValues);
	}
	this.selectedValues = arFilter;
	this.ChangeInfo();
};

window.JCCatalogBigdataProducts.prototype.ChangeInfo = function()
{
	var i = 0,
		j,
		index = -1,
		obData = {},
		boolOneSearch = true,
		strPrice = '';

	for (i = 0; i < this.offers.length; i++)
	{
		boolOneSearch = true;
		for (j in this.selectedValues)
		{
			if (this.selectedValues[j] !== this.offers[i].TREE[j])
			{
				boolOneSearch = false;
				break;
			}
		}
		if (boolOneSearch)
		{
			index = i;
			break;
		}
	}
	if (-1 < index)
	{
		if (!!this.obPict)
		{
			if (!!this.offers[index].PREVIEW_PICTURE)
			{
				BX.adjust(this.obPict, {style: {backgroundImage: 'url('+this.offers[index].PREVIEW_PICTURE.SRC+')'}});
			}
			else
			{
				BX.adjust(this.obPict, {style: {backgroundImage: 'url('+this.defaultPict.pict.SRC+')'}});
			}
		}
		if (this.secondPict && !!this.obSecondPict)
		{
			if (!!this.offers[index].PREVIEW_PICTURE_SECOND)
			{
				BX.adjust(this.obSecondPict, {style: {backgroundImage: 'url('+this.offers[index].PREVIEW_PICTURE_SECOND.SRC+')'}});
			}
			else if (!!this.offers[index].PREVIEW_PICTURE.SRC)
			{
				BX.adjust(this.obSecondPict, {style: {backgroundImage: 'url('+this.offers[index].PREVIEW_PICTURE.SRC+')'}});
			}
			else if (!!this.defaultPict.secondPict)
			{
				BX.adjust(this.obSecondPict, {style: {backgroundImage: 'url('+this.defaultPict.secondPict.SRC+')'}});
			}
			else
			{
				BX.adjust(this.obSecondPict, {style: {backgroundImage: 'url('+this.defaultPict.pict.SRC+')'}});
			}
		}
		if (this.showSkuProps && !!this.obSkuProps)
		{
			if (0 === this.offers[index].DISPLAY_PROPERTIES.length)
			{
				BX.adjust(this.obSkuProps, {style: {display: 'none'}, html: ''});
			}
			else
			{
				BX.adjust(this.obSkuProps, {style: {display: ''}, html: this.offers[index].DISPLAY_PROPERTIES});
			}
		}
		if (!!this.obPrice)
		{
			strPrice = this.offers[index].PRICE.PRINT_DISCOUNT_VALUE;
			if (this.showOldPrice && (this.offers[index].PRICE.DISCOUNT_VALUE !== this.offers[index].PRICE.VALUE))
			{
				strPrice += ' <span>'+this.offers[index].PRICE.PRINT_VALUE+'</span>';
			}
			BX.adjust(this.obPrice, {html: strPrice});
			if (this.showPercent)
			{
				if (this.offers[index].PRICE.DISCOUNT_VALUE !== this.offers[index].PRICE.VALUE)
				{
					obData = {
						style: {
							display: ''
						},
						html: this.offers[index].PRICE.DISCOUNT_DIFF_PERCENT
					};
				}
				else
				{
					obData = {
						style: {
							display: 'none'
						},
						html: ''
					};
				}
				if (!!this.obDscPerc)
				{
					BX.adjust(this.obDscPerc, obData);
				}
				if (!!this.obSecondDscPerc)
				{
					BX.adjust(this.obSecondDscPerc, obData);
				}
			}
		}
		this.offerNum = index;
		this.QuantitySet(this.offerNum);
	}
};

window.JCCatalogBigdataProducts.prototype.InitBasketUrl = function()
{
	switch (this.productType)
	{
		case 1://product
		case 2://set
			this.basketUrl = this.product.addUrl;
			break;
		case 3://sku
			this.basketUrl = this.offers[this.offerNum].ADD_URL;
			break;
	}
	this.basketParams = {
		'ajax_basket': 'Y',
		'rcm': 'yes'
	};
	if (this.showQuantity)
	{
		this.basketParams[this.basketData.quantity] = this.obQuantity.value;
	}
};

window.JCCatalogBigdataProducts.prototype.FillBasketProps = function()
{
	if (!this.visual.BASKET_PROP_DIV)
	{
		return;
	}
	var
		i = 0,
		propCollection = null,
		foundValues = false,
		obBasketProps = null;

	if (this.basketData.useProps && !this.basketData.emptyProps)
	{
		if (!!this.obPopupWin && !!this.obPopupWin.contentContainer)
		{
			obBasketProps = this.obPopupWin.contentContainer;
		}
	}
	else
	{
		obBasketProps = BX(this.visual.BASKET_PROP_DIV);
	}
	if (!obBasketProps)
	{
		return;
	}
	propCollection = obBasketProps.getElementsByTagName('select');
	if (!!propCollection && !!propCollection.length)
	{
		for (i = 0; i < propCollection.length; i++)
		{
			if (!propCollection[i].disabled)
			{
				switch(propCollection[i].type.toLowerCase())
				{
					case 'select-one':
						this.basketParams[propCollection[i].name] = propCollection[i].value;
						foundValues = true;
						break;
					default:
						break;
				}
			}
		}
	}
	propCollection = obBasketProps.getElementsByTagName('input');
	if (!!propCollection && !!propCollection.length)
	{
		for (i = 0; i < propCollection.length; i++)
		{
			if (!propCollection[i].disabled)
			{
				switch(propCollection[i].type.toLowerCase())
				{
					case 'hidden':
						this.basketParams[propCollection[i].name] = propCollection[i].value;
						foundValues = true;
						break;
					case 'radio':
						if (propCollection[i].checked)
						{
							this.basketParams[propCollection[i].name] = propCollection[i].value;
							foundValues = true;
						}
						break;
					default:
						break;
				}
			}
		}
	}
	if (!foundValues)
	{
		this.basketParams[this.basketData.props] = [];
		this.basketParams[this.basketData.props][0] = 0;
	}
};

window.JCCatalogBigdataProducts.prototype.SendToBasket = function()
{
	if (!this.canBuy)
	{
		return;
	}
	this.InitBasketUrl();
	this.FillBasketProps();

	// check recommendation
	if (this.product && this.product.id)
	{
		if (JCCatalogBigdataProducts.productsByRecommendation && JCCatalogBigdataProducts.productsByRecommendation[this.product.id])
		{
			this.RememberProductRecommendation(JCCatalogBigdataProducts.productsByRecommendation[this.product.id], this.product.id);
		}
	}

	BX.ajax({
		method: 'POST',
		dataType: 'json',
		url: this.basketUrl,
		data: this.basketParams,
		onsuccess: BX.delegate(this.BasketResult, this)
	});
};

/**
 * @deprecated
 * @param obj
 * @param productId
 * @constructor
 */
window.JCCatalogBigdataProducts.prototype.RememberRecommendation = function(obj, productId)
{
	var rcmContainer = BX.findParent(obj, {'className':'bigdata_recommended_products_items'});
	var rcmId = BX.findChild(rcmContainer, {'attr':{'name':'bigdata_recommendation_id'}}, true).value;

	this.RememberProductRecommendation(rcmId, productId);
};

window.JCCatalogBigdataProducts.prototype.RememberProductRecommendation = function(recommendationId, productId)
{
	// save to RCM_PRODUCT_LOG
	var plCookieName = BX.cookie_prefix+'_RCM_PRODUCT_LOG';
	var plCookie = getCookie(plCookieName);
	var itemFound = false;

	var cItems = [],
		cItem;

	if (plCookie)
	{
		cItems = plCookie.split('.');
	}

	var i = cItems.length;

	while (i--)
	{
		cItem = cItems[i].split('-');

		if (cItem[0] == productId)
		{
			// it's already in recommendations, update the date
			cItem = cItems[i].split('-');

			// update rcmId and date
			cItem[1] = recommendationId;
			cItem[2] = BX.current_server_time;

			cItems[i] = cItem.join('-');
			itemFound = true;
		}
		else
		{
			if ((BX.current_server_time - cItem[2]) > 3600*24*30)
			{
				cItems.splice(i, 1);
			}
		}
	}

	if (!itemFound)
	{
		// add recommendation
		cItems.push([productId, recommendationId, BX.current_server_time].join('-'));
	}

	// serialize
	var plNewCookie = cItems.join('.');

	var cookieDate = new Date(new Date().getTime() + 1000*3600*24*365*10);
	document.cookie=plCookieName+"="+plNewCookie+"; path=/; expires="+cookieDate.toUTCString()+"; domain="+BX.cookie_domain;
};

window.JCCatalogBigdataProducts.prototype.Basket = function()
{
	var contentBasketProps = '';
	if (!this.canBuy)
	{
		return;
	}
	switch (this.productType)
	{
	case 1://product
	case 2://set
		if (this.basketData.useProps && !this.basketData.emptyProps)
		{
			this.InitPopupWindow();
			this.obPopupWin.setTitleBar({
				content: BX.create('div', {
					style: { marginRight: '30px', whiteSpace: 'nowrap' },
					text: BX.message('CBD_TITLE_BASKET_PROPS')
				})
			});
			if (BX(this.visual.BASKET_PROP_DIV))
			{
				contentBasketProps = BX(this.visual.BASKET_PROP_DIV).innerHTML;
			}
			this.obPopupWin.setContent(contentBasketProps);
			this.obPopupWin.setButtons([
				new BasketButton({
					ownerClass: this.obProduct.parentNode.parentNode.parentNode.className,
					text: BX.message('CBD_BTN_MESSAGE_SEND_PROPS'),
					events: {
						click: BX.delegate(this.SendToBasket, this)
					}
				})
			]);
			this.obPopupWin.show();
		}
		else
		{
			this.SendToBasket();
		}
		break;
	case 3://sku
		this.SendToBasket();
		break;
	}
};

window.JCCatalogBigdataProducts.prototype.BasketResult = function(arResult)
{
	var strContent = '',
		strName = '',
		strPict = '',
		successful = true,
		buttons = [];

	if (!!this.obPopupWin)
	{
		this.obPopupWin.close();
	}
	if ('object' !== typeof arResult)
	{
		return false;
	}
	successful = ('OK' === arResult.STATUS);
	if (successful)
	{
		BX.onCustomEvent('OnBasketChange');
		strName = this.product.name;
		switch(this.productType)
		{
		case 1://
		case 2://
			strPict = this.product.pict.SRC;
			break;
		case 3:
			strPict = (!!this.offers[this.offerNum].PREVIEW_PICTURE ?
				this.offers[this.offerNum].PREVIEW_PICTURE.SRC :
				this.defaultPict.pict.SRC
			);
			break;
		}
		strContent = '<div style="width: 96%; margin: 10px 2%; text-align: center;"><img src="'+strPict+'" height="130" style="max-height:130px"><p>'+strName+'</p></div>';
		buttons = [
			new BasketButton({
				ownerClass: this.obProduct.parentNode.parentNode.parentNode.className,
				text: BX.message("CBD_BTN_MESSAGE_BASKET_REDIRECT"),
				events: {
					click: BX.delegate(function(){
						location.href = (!!this.basketData.basketUrl ? this.basketData.basketUrl : BX.message('CBD_BASKET_URL'));
					}, this)
				}
			})
		];
	}
	else
	{
		strContent = (!!arResult.MESSAGE ? arResult.MESSAGE : BX.message('CBD_BASKET_UNKNOWN_ERROR'));
		buttons = [
			new BasketButton({
				ownerClass: this.obProduct.parentNode.parentNode.parentNode.className,
				text: BX.message('CBD_BTN_MESSAGE_CLOSE'),
				events: {
					click: BX.delegate(this.obPopupWin.close, this.obPopupWin)
				}
			})
		];
	}
	this.InitPopupWindow();
	this.obPopupWin.setTitleBar({
		content: BX.create('div', {
			style: { marginRight: '30px', whiteSpace: 'nowrap' },
			text: (successful ? BX.message('CBD_TITLE_SUCCESSFUL') : BX.message('CBD_TITLE_ERROR'))
		})
	});
	this.obPopupWin.setContent(strContent);
	this.obPopupWin.setButtons(buttons);
	this.obPopupWin.show();
};

window.JCCatalogBigdataProducts.prototype.InitPopupWindow = function()
{
	if (!!this.obPopupWin)
	{
		return;
	}
	this.obPopupWin = BX.PopupWindowManager.create('CatalogSectionBasket_'+this.visual.ID, null, {
		autoHide: false,
		offsetLeft: 0,
		offsetTop: 0,
		overlay : true,
		closeByEsc: true,
		titleBar: true,
		closeIcon: {top: '10px', right: '10px'}
	});
};
})(window);

function getCookie(name) {
	var matches = document.cookie.match(new RegExp(
		"(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
	));
	return matches ? decodeURIComponent(matches[1]) : undefined;
}

/**
 * @deprecated see ajax.php
 * @param rcm_items_cont
 */
function bx_rcm_recommendation_event_attaching(rcm_items_cont)
{
	return null;
}

function bx_rcm_adaptive_recommendation_event_attaching(items, uniqId)
{
	// onclick handler
	var callback = function (e)  {

		var link = BX(this), j;

		for (j in items)
		{
			if (items[j].productUrl == link.getAttribute('href'))
			{
				window.JCCatalogBigdataProducts.prototype.RememberProductRecommendation(
					items[j].recommendationId, items[j].productId
				);

				break;
			}
		}
	};

	// check if a container was defined is the template
	var itemsContainer = BX(uniqId);

	if (!itemsContainer)
	{
		// then get all the links
		itemsContainer = document.body;
	}

	var links = BX.findChildren(itemsContainer, {tag:'a'}, true);

	// bind
	if (links)
	{
		var i;
		for (i in links)
		{
			BX.bind(links[i], 'click', callback);
		}
	}
}

function bx_rcm_get_from_cloud(injectId, rcmParameters, localAjaxData)
{
	var url = 'https://analytics.bitrix.info/crecoms/v1_0/recoms.php';
	var data = BX.ajax.prepareData(rcmParameters);

	if (data)
	{
		url += (url.indexOf('?') !== -1 ? "&" : "?") + data;
	}

	var onready = function(response) {

		if (!response.items)
		{
			response.items = [];
		}
		BX.ajax({
			url: '/bitrix/components/bitrix/catalog.bigdata.products/ajax.php?'+BX.ajax.prepareData({'AJAX_ITEMS': response.items, 'RID': response.id}),
			method: 'POST',
			data: localAjaxData,
			dataType: 'html',
			processData: false,
			start: true,
			onsuccess: function (html) {
				var ob = BX.processHTML(html);

				// inject
				BX(injectId).innerHTML = ob.HTML;
				BX.ajax.processScripts(ob.SCRIPT);

				InitOwlSlider();
				InitLazyLoad();

				if(typeof window['stickySidebar'] !== 'undefined') { window['stickySidebar'].updateSticky(); }
			}
		});
	};

	BX.ajax({
		'method': 'GET',
		'dataType': 'json',
		'url': url,
		'timeout': 3,
		'onsuccess': onready,
		'onfailure': onready
	});
}

BX.addCustomEvent('onSlideInit', function(eventdata) {
	try{
		ignoreResize.push(true);
		if(eventdata){
			var slider = eventdata.slider;
			if(slider && slider.hasClass('bigdata_recommended_products_items')){
				setHeightBlockSlider();
			}
		}
	}
	catch(e){}
	finally{
		ignoreResize.pop();
	}
});


/* End */
;
; /* Start:"a:4:{s:4:"full";s:63:"/local/templates/aspro_max/js/jquery.history.js?161840102421571";s:6:"source";s:47:"/local/templates/aspro_max/js/jquery.history.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
window.JSON||(window.JSON={}),function(){function f(a){return a<10?"0"+a:a}function quote(a){return escapable.lastIndex=0,escapable.test(a)?'"'+a.replace(escapable,function(a){var b=meta[a];return typeof b=="string"?b:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+a+'"'}function str(a,b){var c,d,e,f,g=gap,h,i=b[a];i&&typeof i=="object"&&typeof i.toJSON=="function"&&(i=i.toJSON(a)),typeof rep=="function"&&(i=rep.call(b,a,i));switch(typeof i){case"string":return quote(i);case"number":return isFinite(i)?String(i):"null";case"boolean":case"null":return String(i);case"object":if(!i)return"null";gap+=indent,h=[];if(Object.prototype.toString.apply(i)==="[object Array]"){f=i.length;for(c=0;c<f;c+=1)h[c]=str(c,i)||"null";return e=h.length===0?"[]":gap?"[\n"+gap+h.join(",\n"+gap)+"\n"+g+"]":"["+h.join(",")+"]",gap=g,e}if(rep&&typeof rep=="object"){f=rep.length;for(c=0;c<f;c+=1)d=rep[c],typeof d=="string"&&(e=str(d,i),e&&h.push(quote(d)+(gap?": ":":")+e))}else for(d in i)Object.hasOwnProperty.call(i,d)&&(e=str(d,i),e&&h.push(quote(d)+(gap?": ":":")+e));return e=h.length===0?"{}":gap?"{\n"+gap+h.join(",\n"+gap)+"\n"+g+"}":"{"+h.join(",")+"}",gap=g,e}}"use strict",typeof Date.prototype.toJSON!="function"&&(Date.prototype.toJSON=function(a){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(a){return this.valueOf()});var JSON=window.JSON,cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;typeof JSON.stringify!="function"&&(JSON.stringify=function(a,b,c){var d;gap="",indent="";if(typeof c=="number")for(d=0;d<c;d+=1)indent+=" ";else typeof c=="string"&&(indent=c);rep=b;if(!b||typeof b=="function"||typeof b=="object"&&typeof b.length=="number")return str("",{"":a});throw new Error("JSON.stringify")}),typeof JSON.parse!="function"&&(JSON.parse=function(text,reviver){function walk(a,b){var c,d,e=a[b];if(e&&typeof e=="object")for(c in e)Object.hasOwnProperty.call(e,c)&&(d=walk(e,c),d!==undefined?e[c]=d:delete e[c]);return reviver.call(a,b,e)}var j;text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)}));if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return j=eval("("+text+")"),typeof reviver=="function"?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}(),function(a,b){"use strict";var c=a.History=a.History||{},d=a.jQuery;if(typeof c.Adapter!="undefined")throw new Error("History.js Adapter has already been loaded...");c.Adapter={bind:function(a,b,c){d(a).bind(b,c)},trigger:function(a,b,c){d(a).trigger(b,c)},extractEventData:function(a,c,d){var e=c&&c.originalEvent&&c.originalEvent[a]||d&&d[a]||b;return e},onDomLoad:function(a){d(a)}},typeof c.init!="undefined"&&c.init()}(window),function(a,b){"use strict";var c=a.document,d=a.setTimeout||d,e=a.clearTimeout||e,f=a.setInterval||f,g=a.History=a.History||{};if(typeof g.initHtml4!="undefined")throw new Error("History.js HTML4 Support has already been loaded...");g.initHtml4=function(){if(typeof g.initHtml4.initialized!="undefined")return!1;g.initHtml4.initialized=!0,g.enabled=!0,g.savedHashes=[],g.isLastHash=function(a){var b=g.getHashByIndex(),c;return c=a===b,c},g.saveHash=function(a){return g.isLastHash(a)?!1:(g.savedHashes.push(a),!0)},g.getHashByIndex=function(a){var b=null;return typeof a=="undefined"?b=g.savedHashes[g.savedHashes.length-1]:a<0?b=g.savedHashes[g.savedHashes.length+a]:b=g.savedHashes[a],b},g.discardedHashes={},g.discardedStates={},g.discardState=function(a,b,c){var d=g.getHashByState(a),e;return e={discardedState:a,backState:c,forwardState:b},g.discardedStates[d]=e,!0},g.discardHash=function(a,b,c){var d={discardedHash:a,backState:c,forwardState:b};return g.discardedHashes[a]=d,!0},g.discardedState=function(a){var b=g.getHashByState(a),c;return c=g.discardedStates[b]||!1,c},g.discardedHash=function(a){var b=g.discardedHashes[a]||!1;return b},g.recycleState=function(a){var b=g.getHashByState(a);return g.discardedState(a)&&delete g.discardedStates[b],!0},g.emulated.hashChange&&(g.hashChangeInit=function(){g.checkerFunction=null;var b="",d,e,h,i;return g.isInternetExplorer()?(d="historyjs-iframe",e=c.createElement("iframe"),e.setAttribute("id",d),e.style.display="none",c.body.appendChild(e),e.contentWindow.document.open(),e.contentWindow.document.close(),h="",i=!1,g.checkerFunction=function(){if(i)return!1;i=!0;var c=g.getHash()||"",d=g.unescapeHash(e.contentWindow.document.location.hash)||"";return c!==b?(b=c,d!==c&&(h=d=c,e.contentWindow.document.open(),e.contentWindow.document.close(),e.contentWindow.document.location.hash=g.escapeHash(c)),g.Adapter.trigger(a,"hashchange")):d!==h&&(h=d,g.setHash(d,!1)),i=!1,!0}):g.checkerFunction=function(){var c=g.getHash();return c!==b&&(b=c,g.Adapter.trigger(a,"hashchange")),!0},g.intervalList.push(f(g.checkerFunction,g.options.hashChangeInterval)),!0},g.Adapter.onDomLoad(g.hashChangeInit)),g.emulated.pushState&&(g.onHashChange=function(b){var d=b&&b.newURL||c.location.href,e=g.getHashByUrl(d),f=null,h=null,i=null,j;return g.isLastHash(e)?(g.busy(!1),!1):(g.doubleCheckComplete(),g.saveHash(e),e&&g.isTraditionalAnchor(e)?(g.Adapter.trigger(a,"anchorchange"),g.busy(!1),!1):(f=g.extractState(g.getFullUrl(e||c.location.href,!1),!0),g.isLastSavedState(f)?(g.busy(!1),!1):(h=g.getHashByState(f),j=g.discardedState(f),j?(g.getHashByIndex(-2)===g.getHashByState(j.forwardState)?g.back(!1):g.forward(!1),!1):(g.pushState(f.data,f.title,f.url,!1),!0))))},g.Adapter.bind(a,"hashchange",g.onHashChange),g.pushState=function(b,d,e,f){if(g.getHashByUrl(e))throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(f!==!1&&g.busy())return g.pushQueue({scope:g,callback:g.pushState,args:arguments,queue:f}),!1;g.busy(!0);var h=g.createStateObject(b,d,e),i=g.getHashByState(h),j=g.getState(!1),k=g.getHashByState(j),l=g.getHash();return g.storeState(h),g.expectedStateId=h.id,g.recycleState(h),g.setTitle(h),i===k?(g.busy(!1),!1):i!==l&&i!==g.getShortUrl(c.location.href)?(g.setHash(i,!1),!1):(g.saveState(h),g.Adapter.trigger(a,"statechange"),g.busy(!1),!0)},g.replaceState=function(a,b,c,d){if(g.getHashByUrl(c))throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(d!==!1&&g.busy())return g.pushQueue({scope:g,callback:g.replaceState,args:arguments,queue:d}),!1;g.busy(!0);var e=g.createStateObject(a,b,c),f=g.getState(!1),h=g.getStateByIndex(-2);return g.discardState(f,e,h),g.pushState(e.data,e.title,e.url,!1),!0}),g.emulated.pushState&&g.getHash()&&!g.emulated.hashChange&&g.Adapter.onDomLoad(function(){g.Adapter.trigger(a,"hashchange")})},typeof g.init!="undefined"&&g.init()}(window),function(a,b){"use strict";var c=a.console||b,d=a.document,e=a.navigator,f=a.sessionStorage||!1,g=a.setTimeout,h=a.clearTimeout,i=a.setInterval,j=a.clearInterval,k=a.JSON,l=a.alert,m=a.History=a.History||{},n=a.history;k.stringify=k.stringify||k.encode,k.parse=k.parse||k.decode;if(typeof m.init!="undefined")throw new Error("History.js Core has already been loaded...");m.init=function(){return typeof m.Adapter=="undefined"?!1:(typeof m.initCore!="undefined"&&m.initCore(),typeof m.initHtml4!="undefined"&&m.initHtml4(),!0)},m.initCore=function(){if(typeof m.initCore.initialized!="undefined")return!1;m.initCore.initialized=!0,m.options=m.options||{},m.options.hashChangeInterval=m.options.hashChangeInterval||100,m.options.safariPollInterval=m.options.safariPollInterval||500,m.options.doubleCheckInterval=m.options.doubleCheckInterval||500,m.options.storeInterval=m.options.storeInterval||1e3,m.options.busyDelay=m.options.busyDelay||250,m.options.debug=m.options.debug||!1,m.options.initialTitle=m.options.initialTitle||d.title,m.intervalList=[],m.clearAllIntervals=function(){var a,b=m.intervalList;if(typeof b!="undefined"&&b!==null){for(a=0;a<b.length;a++)j(b[a]);m.intervalList=null}},m.debug=function(){(m.options.debug||!1)&&m.log.apply(m,arguments)},m.log=function(){var a=typeof c!="undefined"&&typeof c.log!="undefined"&&typeof c.log.apply!="undefined",b=d.getElementById("log"),e,f,g,h,i;a?(h=Array.prototype.slice.call(arguments),e=h.shift(),typeof c.debug!="undefined"?c.debug.apply(c,[e,h]):c.log.apply(c,[e,h])):e="\n"+arguments[0]+"\n";for(f=1,g=arguments.length;f<g;++f){i=arguments[f];if(typeof i=="object"&&typeof k!="undefined")try{i=k.stringify(i)}catch(j){}e+="\n"+i+"\n"}return b?(b.value+=e+"\n-----\n",b.scrollTop=b.scrollHeight-b.clientHeight):a||l(e),!0},m.getInternetExplorerMajorVersion=function(){var a=m.getInternetExplorerMajorVersion.cached=typeof m.getInternetExplorerMajorVersion.cached!="undefined"?m.getInternetExplorerMajorVersion.cached:function(){var a=3,b=d.createElement("div"),c=b.getElementsByTagName("i");while((b.innerHTML="<!--[if gt IE "+ ++a+"]><i></i><![endif]-->")&&c[0]);return a>4?a:!1}();return a},m.isInternetExplorer=function(){var a=m.isInternetExplorer.cached=typeof m.isInternetExplorer.cached!="undefined"?m.isInternetExplorer.cached:Boolean(m.getInternetExplorerMajorVersion());return a},m.emulated={pushState:!Boolean(a.history&&a.history.pushState&&a.history.replaceState&&!/ Mobile\/([1-7][a-z]|(8([abcde]|f(1[0-8]))))/i.test(e.userAgent)&&!/AppleWebKit\/5([0-2]|3[0-2])/i.test(e.userAgent)),hashChange:Boolean(!("onhashchange"in a||"onhashchange"in d)||m.isInternetExplorer()&&m.getInternetExplorerMajorVersion()<8)},m.enabled=!m.emulated.pushState,m.bugs={setHash:Boolean(!m.emulated.pushState&&e.vendor==="Apple Computer, Inc."&&/AppleWebKit\/5([0-2]|3[0-3])/.test(e.userAgent)),safariPoll:Boolean(!m.emulated.pushState&&e.vendor==="Apple Computer, Inc."&&/AppleWebKit\/5([0-2]|3[0-3])/.test(e.userAgent)),ieDoubleCheck:Boolean(m.isInternetExplorer()&&m.getInternetExplorerMajorVersion()<8),hashEscape:Boolean(m.isInternetExplorer()&&m.getInternetExplorerMajorVersion()<7)},m.isEmptyObject=function(a){for(var b in a)return!1;return!0},m.cloneObject=function(a){var b,c;return a?(b=k.stringify(a),c=k.parse(b)):c={},c},m.getRootUrl=function(){var a=d.location.protocol+"//"+(d.location.hostname||d.location.host);if(d.location.port||!1)a+=":"+d.location.port;return a+="/",a},m.getBaseHref=function(){var a=d.getElementsByTagName("base"),b=null,c="";return a.length===1&&(b=a[0],c=b.href.replace(/[^\/]+$/,"")),c=c.replace(/\/+$/,""),c&&(c+="/"),c},m.getBaseUrl=function(){var a=m.getBaseHref()||m.getBasePageUrl()||m.getRootUrl();return a},m.getPageUrl=function(){var a=m.getState(!1,!1),b=(a||{}).url||d.location.href,c;return c=b.replace(/\/+$/,"").replace(/[^\/]+$/,function(a,b,c){return/\./.test(a)?a:a+"/"}),c},m.getBasePageUrl=function(){var a=d.location.href.replace(/[#\?].*/,"").replace(/[^\/]+$/,function(a,b,c){return/[^\/]$/.test(a)?"":a}).replace(/\/+$/,"")+"/";return a},m.getFullUrl=function(a,b){var c=a,d=a.substring(0,1);return b=typeof b=="undefined"?!0:b,/[a-z]+\:\/\//.test(a)||(d==="/"?c=m.getRootUrl()+a.replace(/^\/+/,""):d==="#"?c=m.getPageUrl().replace(/#.*/,"")+a:d==="?"?c=m.getPageUrl().replace(/[\?#].*/,"")+a:b?c=m.getBaseUrl()+a.replace(/^(\.\/)+/,""):c=m.getBasePageUrl()+a.replace(/^(\.\/)+/,"")),c.replace(/\#$/,"")},m.getShortUrl=function(a){var b=a,c=m.getBaseUrl(),d=m.getRootUrl();return m.emulated.pushState&&(b=b.replace(c,"")),b=b.replace(d,"/"),m.isTraditionalAnchor(b)&&(b="./"+b),b=b.replace(/^(\.\/)+/g,"./").replace(/\#$/,""),b},m.store={},m.idToState=m.idToState||{},m.stateToId=m.stateToId||{},m.urlToId=m.urlToId||{},m.storedStates=m.storedStates||[],m.savedStates=m.savedStates||[],m.normalizeStore=function(){m.store.idToState=m.store.idToState||{},m.store.urlToId=m.store.urlToId||{},m.store.stateToId=m.store.stateToId||{}},m.getState=function(a,b){typeof a=="undefined"&&(a=!0),typeof b=="undefined"&&(b=!0);var c=m.getLastSavedState();return!c&&b&&(c=m.createStateObject()),a&&(c=m.cloneObject(c),c.url=c.cleanUrl||c.url),c},m.getIdByState=function(a){var b=m.extractId(a.url),c;if(!b){c=m.getStateString(a);if(typeof m.stateToId[c]!="undefined")b=m.stateToId[c];else if(typeof m.store.stateToId[c]!="undefined")b=m.store.stateToId[c];else{for(;;){b=(new Date).getTime()+String(Math.random()).replace(/\D/g,"");if(typeof m.idToState[b]=="undefined"&&typeof m.store.idToState[b]=="undefined")break}m.stateToId[c]=b,m.idToState[b]=a}}return b},m.normalizeState=function(a){var b,c;if(!a||typeof a!="object")a={};if(typeof a.normalized!="undefined")return a;if(!a.data||typeof a.data!="object")a.data={};b={},b.normalized=!0,b.title=a.title||"",b.url=m.getFullUrl(m.unescapeString(a.url||d.location.href)),b.hash=m.getShortUrl(b.url),b.data=m.cloneObject(a.data),b.id=m.getIdByState(b),b.cleanUrl=b.url.replace(/\??\&_suid.*/,""),b.url=b.cleanUrl,c=!m.isEmptyObject(b.data);if(b.title||c)b.hash=m.getShortUrl(b.url).replace(/\??\&_suid.*/,""),/\?/.test(b.hash)||(b.hash+="?"),b.hash+="&_suid="+b.id;return b.hashedUrl=m.getFullUrl(b.hash),(m.emulated.pushState||m.bugs.safariPoll)&&m.hasUrlDuplicate(b)&&(b.url=b.hashedUrl),b},m.createStateObject=function(a,b,c){var d={data:a,title:b,url:c};return d=m.normalizeState(d),d},m.getStateById=function(a){a=String(a);var c=m.idToState[a]||m.store.idToState[a]||b;return c},m.getStateString=function(a){var b,c,d;return b=m.normalizeState(a),c={data:b.data,title:a.title,url:a.url},d=k.stringify(c),d},m.getStateId=function(a){var b,c;return b=m.normalizeState(a),c=b.id,c},m.getHashByState=function(a){var b,c;return b=m.normalizeState(a),c=b.hash,c},m.extractId=function(a){var b,c,d;return c=/(.*)\&_suid=([0-9]+)$/.exec(a),d=c?c[1]||a:a,b=c?String(c[2]||""):"",b||!1},m.isTraditionalAnchor=function(a){var b=!/[\/\?\.]/.test(a);return b},m.extractState=function(a,b){var c=null,d,e;return b=b||!1,d=m.extractId(a),d&&(c=m.getStateById(d)),c||(e=m.getFullUrl(a),d=m.getIdByUrl(e)||!1,d&&(c=m.getStateById(d)),!c&&b&&!m.isTraditionalAnchor(a)&&(c=m.createStateObject(null,null,e))),c},m.getIdByUrl=function(a){var c=m.urlToId[a]||m.store.urlToId[a]||b;return c},m.getLastSavedState=function(){return m.savedStates[m.savedStates.length-1]||b},m.getLastStoredState=function(){return m.storedStates[m.storedStates.length-1]||b},m.hasUrlDuplicate=function(a){var b=!1,c;return c=m.extractState(a.url),b=c&&c.id!==a.id,b},m.storeState=function(a){return m.urlToId[a.url]=a.id,m.storedStates.push(m.cloneObject(a)),a},m.isLastSavedState=function(a){var b=!1,c,d,e;return m.savedStates.length&&(c=a.id,d=m.getLastSavedState(),e=d.id,b=c===e),b},m.saveState=function(a){return m.isLastSavedState(a)?!1:(m.savedStates.push(m.cloneObject(a)),!0)},m.getStateByIndex=function(a){var b=null;return typeof a=="undefined"?b=m.savedStates[m.savedStates.length-1]:a<0?b=m.savedStates[m.savedStates.length+a]:b=m.savedStates[a],b},m.getHash=function(){var a=m.unescapeHash(d.location.hash);return a},m.unescapeString=function(b){var c=b,d;for(;;){d=a.unescape(c);if(d===c)break;c=d}return c},m.unescapeHash=function(a){var b=m.normalizeHash(a);return b=m.unescapeString(b),b},m.normalizeHash=function(a){var b=a.replace(/[^#]*#/,"").replace(/#.*/,"");return b},m.setHash=function(a,b){var c,e,f;return b!==!1&&m.busy()?(m.pushQueue({scope:m,callback:m.setHash,args:arguments,queue:b}),!1):(c=m.escapeHash(a),m.busy(!0),e=m.extractState(a,!0),e&&!m.emulated.pushState?m.pushState(e.data,e.title,e.url,!1):d.location.hash!==c&&(m.bugs.setHash?(f=m.getPageUrl(),m.pushState(null,null,f+"#"+c,!1)):d.location.hash=c),m)},m.escapeHash=function(b){var c=m.normalizeHash(b);return c=a.escape(c),m.bugs.hashEscape||(c=c.replace(/\%21/g,"!").replace(/\%26/g,"&").replace(/\%3D/g,"=").replace(/\%3F/g,"?")),c},m.getHashByUrl=function(a){var b=String(a).replace(/([^#]*)#?([^#]*)#?(.*)/,"$2");return b=m.unescapeHash(b),b},m.setTitle=function(a){var b=a.title,c;b||(c=m.getStateByIndex(0),c&&c.url===a.url&&(b=c.title||m.options.initialTitle));try{d.getElementsByTagName("title")[0].innerHTML=b.replace("<","&lt;").replace(">","&gt;").replace(" & "," &amp; ")}catch(e){}return d.title=b,m},m.queues=[],m.busy=function(a){typeof a!="undefined"?m.busy.flag=a:typeof m.busy.flag=="undefined"&&(m.busy.flag=!1);if(!m.busy.flag){h(m.busy.timeout);var b=function(){var a,c,d;if(m.busy.flag)return;for(a=m.queues.length-1;a>=0;--a){c=m.queues[a];if(c.length===0)continue;d=c.shift(),m.fireQueueItem(d),m.busy.timeout=g(b,m.options.busyDelay)}};m.busy.timeout=g(b,m.options.busyDelay)}return m.busy.flag},m.busy.flag=!1,m.fireQueueItem=function(a){return a.callback.apply(a.scope||m,a.args||[])},m.pushQueue=function(a){return m.queues[a.queue||0]=m.queues[a.queue||0]||[],m.queues[a.queue||0].push(a),m},m.queue=function(a,b){return typeof a=="function"&&(a={callback:a}),typeof b!="undefined"&&(a.queue=b),m.busy()?m.pushQueue(a):m.fireQueueItem(a),m},m.clearQueue=function(){return m.busy.flag=!1,m.queues=[],m},m.stateChanged=!1,m.doubleChecker=!1,m.doubleCheckComplete=function(){return m.stateChanged=!0,m.doubleCheckClear(),m},m.doubleCheckClear=function(){return m.doubleChecker&&(h(m.doubleChecker),m.doubleChecker=!1),m},m.doubleCheck=function(a){return m.stateChanged=!1,m.doubleCheckClear(),m.bugs.ieDoubleCheck&&(m.doubleChecker=g(function(){return m.doubleCheckClear(),m.stateChanged||a(),!0},m.options.doubleCheckInterval)),m},m.safariStatePoll=function(){var b=m.extractState(d.location.href),c;if(!m.isLastSavedState(b))c=b;else return;return c||(c=m.createStateObject()),m.Adapter.trigger(a,"popstate"),m},m.back=function(a){return a!==!1&&m.busy()?(m.pushQueue({scope:m,callback:m.back,args:arguments,queue:a}),!1):(m.busy(!0),m.doubleCheck(function(){m.back(!1)}),n.go(-1),!0)},m.forward=function(a){return a!==!1&&m.busy()?(m.pushQueue({scope:m,callback:m.forward,args:arguments,queue:a}),!1):(m.busy(!0),m.doubleCheck(function(){m.forward(!1)}),n.go(1),!0)},m.go=function(a,b){var c;if(a>0)for(c=1;c<=a;++c)m.forward(b);else{if(!(a<0))throw new Error("History.go: History.go requires a positive or negative integer passed.");for(c=-1;c>=a;--c)m.back(b)}return m};if(m.emulated.pushState){var o=function(){};m.pushState=m.pushState||o,m.replaceState=m.replaceState||o}else m.onPopState=function(b,c){var e=!1,f=!1,g,h;return m.doubleCheckComplete(),g=m.getHash(),g?(h=m.extractState(g||d.location.href,!0),h?m.replaceState(h.data,h.title,h.url,!1):(m.Adapter.trigger(a,"anchorchange"),m.busy(!1)),m.expectedStateId=!1,!1):(e=m.Adapter.extractEventData("state",b,c)||!1,e?f=m.getStateById(e):m.expectedStateId?f=m.getStateById(m.expectedStateId):f=m.extractState(d.location.href),f||(f=m.createStateObject(null,null,d.location.href)),m.expectedStateId=!1,m.isLastSavedState(f)?(m.busy(!1),!1):(m.storeState(f),m.saveState(f),m.setTitle(f),m.Adapter.trigger(a,"statechange"),m.busy(!1),!0))},m.Adapter.bind(a,"popstate",m.onPopState),m.pushState=function(b,c,d,e){if(m.getHashByUrl(d)&&m.emulated.pushState)throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(e!==!1&&m.busy())return m.pushQueue({scope:m,callback:m.pushState,args:arguments,queue:e}),!1;m.busy(!0);var f=m.createStateObject(b,c,d);return m.isLastSavedState(f)?m.busy(!1):(m.storeState(f),m.expectedStateId=f.id,n.pushState(f.id,f.title,f.url),m.Adapter.trigger(a,"popstate")),!0},m.replaceState=function(b,c,d,e){if(m.getHashByUrl(d)&&m.emulated.pushState)throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(e!==!1&&m.busy())return m.pushQueue({scope:m,callback:m.replaceState,args:arguments,queue:e}),!1;m.busy(!0);var f=m.createStateObject(b,c,d);return m.isLastSavedState(f)?m.busy(!1):(m.storeState(f),m.expectedStateId=f.id,n.replaceState(f.id,f.title,f.url),m.Adapter.trigger(a,"popstate")),!0};if(f){try{m.store=k.parse(f.getItem("History.store"))||{}}catch(p){m.store={}}m.normalizeStore()}else m.store={},m.normalizeStore();m.Adapter.bind(a,"beforeunload",m.clearAllIntervals),m.Adapter.bind(a,"unload",m.clearAllIntervals),m.saveState(m.storeState(m.extractState(d.location.href,!0))),f&&(m.onUnload=function(){var a,b;try{a=k.parse(f.getItem("History.store"))||{}}catch(c){a={}}a.idToState=a.idToState||{},a.urlToId=a.urlToId||{},a.stateToId=a.stateToId||{};for(b in m.idToState){if(!m.idToState.hasOwnProperty(b))continue;a.idToState[b]=m.idToState[b]}for(b in m.urlToId){if(!m.urlToId.hasOwnProperty(b))continue;a.urlToId[b]=m.urlToId[b]}for(b in m.stateToId){if(!m.stateToId.hasOwnProperty(b))continue;a.stateToId[b]=m.stateToId[b]}m.store=a,m.normalizeStore(),f.setItem("History.store",k.stringify(a))},m.intervalList.push(i(m.onUnload,m.options.storeInterval)),m.Adapter.bind(a,"beforeunload",m.onUnload),m.Adapter.bind(a,"unload",m.onUnload));if(!m.emulated.pushState){m.bugs.safariPoll&&m.intervalList.push(i(m.safariStatePoll,m.options.safariPollInterval));if(e.vendor==="Apple Computer, Inc."||(e.appCodeName||"")==="Mozilla")m.Adapter.bind(a,"hashchange",function(){m.Adapter.trigger(a,"popstate")}),m.getHash()&&m.Adapter.onDomLoad(function(){m.Adapter.trigger(a,"hashchange")})}},m.init()}(window)
/* End */
;; /* /local/templates/aspro_max/components/bitrix/catalog/main/script.js?161840102415331*/
; /* /local/templates/aspro_max/components/bitrix/catalog.element/main/script.js?1621600952127394*/
; /* /local/templates/aspro_max/components/bitrix/sale.prediction.product.detail/main/script.js?1618401024579*/
; /* /local/templates/aspro_max/components/bitrix/sale.gift.product/main/script.js?161840102449278*/
; /* /local/templates/aspro_max/components/bitrix/sale.gift.main.products/main/script.js?16184010244955*/
; /* /local/templates/aspro_max/components/bitrix/catalog.bigdata.products/main/script.js?161840102436418*/
; /* /local/templates/aspro_max/js/jquery.history.js?161840102421571*/
